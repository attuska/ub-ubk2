#!/bin/bash -eux

#kernel verzió
if [ "$UB_ARCH" == "amd64" ];then
KVER="$(ls -1 /lib/modules | grep x86_64)"
forras="NVIDIA-Linux-x86_64-${UB_VERSION}-no-compat32"
else
KVER="$(ls -1 /lib/modules | grep i386)"
forras="NVIDIA-Linux-x86-${UB_VERSION}"
fi
#célkönyvtárak
#libek
cellibdir="$UB_INSTALLDIR"/usr/lib
xmoduldir="$cellibdir"/xorg/modules
desktopdir="$UB_INSTALLDIR"/usr/share/applications
mandir="$UB_INSTALLDIR"/usr/share/man/man1/
vendordir="$UB_INSTALLDIR"/etc/OpenCL/vendors
pixmapdir="$UB_INSTALLDIR"/usr/share/pixmaps/
shnvdir="$UB_INSTALLDIR"/usr/share/nvidia
vdpaudir=$cellibdir/vdpau

#könyvtárgyártás
mkdir -p "$cellibdir"/nvidia \
	"$xmoduldir"/{drivers,extensions} \
	"$desktopdir" \
	"$mandir" \
	"$vendordir" \
	"$pixmapdir" \
	"$shnvdir" \
	"$vdpaudir"

#nvidia-settings cucc
cd nvsett
export NV_USE_BUNDLED_LIBJANSSON=0
export PREFIX=/usr
ub_install
mv	doc/nvidia-settings.desktop "$desktopdir"/
mv	doc/nvidia-settings.png "$pixmapdir"/
gunzip	$mandir/nvidia-settings.1.gz
cd ..

# installált kernel modul a csomagba
mv lib $UB_INSTALLDIR/

# utils csomag kézi installálása
cd $forras
#doksik a doc szkriptnek
mv html LICENSE NVIDIA_Changelog README.txt ../
# biztonságba helyezés a régi módon
mv libglx.so."$UB_VERSION" "$cellibdir"/nvidia/
#Áthelyezzük a nem a $cellibdir alá kerülő *.so-kat
mv nvidia_drv.so "$xmoduldir"/drivers/
#mv libglx.so."$UB_VERSION" "$xmoduldir"/extensions/
# link, hogy  X meg is találja a glx -et, mivel ő libglx.so fájlt keres
# ez fog ütközni az xorg libglx.so fájljával
#ln -s libglx.so.${UB_VERSION} $xmoduldir/extensions/libglx.so
mv tls "$cellibdir"
mv libnvidia-wfb.so."$UB_VERSION" $xmoduldir/
# ütközik az x.org.server modullal
# ln -s libnvidia-wfb.so."$UB_VERSION" "$xmoduldir"/libwfb.so
# vdpau cuccok
mv libvdpau_nvidia.so.${UB_VERSION} $vdpaudir

# minden áthelyezése a libekbe
mv *.so.* "$cellibdir"/

#segédprogram futtatható előre gyártott binárisainak elhelyezése
mv nvidia-xconfig \
  nvidia-bug-report.sh \
  nvidia-smi \
  tls_test \
  tls_test_dso.so \
  "$UB_INSTALLDIR"/usr/bin/

gunzip *.1.gz
mv *.1 "$mandir"/

mv nvidia.icd "$vendordir"

# mkdir -p "$UB_INSTALLDIR"/usr/include/CL/
# mv cl*.h "$UB_INSTALLDIR"/usr/include/CL/

# mkdir -p "$UB_INSTALLDIR"/usr/include/cuda/
# mv cuda*.h "$UB_INSTALLDIR"/usr/include/cuda/

mv nvidia-settings.png "$pixmapdir"/

#libxnvctrl

cd ../nvsett/src/libXNVCtrl
mkdir -p "${UB_INSTALLDIR}"/usr/{include/NVCtrl,lib/pkgconfig}
cp nv_control.h NVCtrl{,Lib}.h "${UB_INSTALLDIR}"/usr/include/NVCtrl/
cp libXNVCtrl.a "${cellibdir}"/

# pc rendberakás
cat <<'EOF' > "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc
prefix=/usr
libdir=${prefix}/lib
includedir=${prefix}/include/NVCtrl

Name: libXNVCtrl
Description: Library for accessing NV-CONTROL extension in NVIDIA's kurrent drivers.
Version: %version%
Libs: -L${libdir} -lXNVCtrl
Cflags: -I${includedir}
EOF

sed -i -e "s/%version%/$UB_VERSION/" "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc

#linkgyártások
cd "$cellibdir"
ln -s xorg/modules/libnvidia-wfb.so."$UB_VERSION" libwfb.so
ln -s "libcuda.so.$UB_VERSION" libcuda.so

for i in `ls -1 libnv*`;do
lib=$(echo $i | sed s/\.${UB_VERSION}//g)
solink=$(echo $lib | sed s/so\..*/so/)
ln -s $i $lib.1
ln -s $lib.1 $solink
done

cd $vdpaudir
for i in `ls -1 libvdpau*`;do
lib=$(echo $i | sed s/\.${UB_VERSION}//g)
solink=$(echo $lib | sed s/so\..*/so/)
ln -s $i $lib.1
ln -s $lib.1 $solink
done

# Támogatott chepkhez a verzió beillesztése a csomag leírásába
sed "s/version/${UB_VERSION}/g" -i ${UB_SRCDIR}/packages/nvidia-304/description/hu
