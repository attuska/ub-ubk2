diff -Naur orig/AUTHORS patched/AUTHORS
--- orig/AUTHORS	2014-05-09 23:10:45.134739579 +0200
+++ patched/AUTHORS	2017-09-23 17:45:53.775078000 +0200
@@ -13,6 +13,7 @@
 Other contributors include 
 
 Alex Hornby
+Axel Reinhold
 Alexander Mitin
 Artiom Morozov
 Arun K Desai
@@ -67,6 +68,7 @@
 Keith Woodard 
 Lars Doelle
 Manush Dodunekov
+Markus Beth
 Mark Chopping
 Mark Hessling
 Mark Vanderwiel
diff -Naur orig/ChangeLog patched/ChangeLog
--- orig/ChangeLog	2015-08-31 12:06:00.134739579 +0200
+++ patched/ChangeLog	2017-09-23 17:45:53.583076000 +0200
@@ -1,4 +1,117 @@
-32st-Aug-2015
+2.3.5pre
+
+    * Add configure option --enable-setlibversion set mark the libs with VERS_3.52
+      Linux only, so any driver built with the libs will work with closed source 
+      DM's
+    * Add persistent storage of isql command line history if readline() is used (thanks Axel)
+    * Rename some local mutex functions to avoid name clashes
+    * Assorted fixes (Thanks Markus * 2)
+    * Fix regression in ini caching
+    * Make SQLDrivers look in user as well as system odbcinst.ini for driver attributes
+    * If in use, clear the ini cache when a write is done via SQLWritePrivateProfileString() so 
+      the new value is read
+    * Fix problem with pooling if the environment was released by the application
+    * Add check for SQL_COLUMN_COUNT in SQLColAttribute
+    * isql would not display long error messages. Fixed now.
+    * Fix problem calling the driver to report errors if the error is from the DM and the driver 
+      has not been called
+    * SQLSetConnectAttrW crashes when attempting to set SQL_ATTR_LOGIN_TIMEOUT
+    * Buffer overflow in unicode_to_ansi_copy()
+    * SQLDriverConnect with not-found FILEDSN causes crash
+    * SQLGetDescRec with null name pointer causes crash
+    * Connection string escaping does not work
+    * SQLDriverConnect/W with very long driver name causes crash
+    * Connection string with trailing empty value causes crash
+    * Freeing explicitly allocated descriptor results in writing to freed memory
+    * Buffer overflows and missing null checks in SQLConfigDataSource, SQLInstallDriverEx, and SQLWriteFileDSN
+    * Statement enters incorrect state upon SQLExecDirectW returning SQL_NO_DATA
+    * SQLBulkOperations fails to exit async state after success
+    * SQLFreeStmt causes prepared statements in S1 or S2 to erroneously transition to S3
+    * Buffer length fixes for SQLGetDiagField
+    * SQLSetConnectAttrW and Unicode string pre-connect attributes do not work
+    * SQLGetData and SQLSetPos async states are incorrect
+    * Various string conversion and length issues in SQLColAttribute(s)
+    * Missing buffer length check in SQLColAttribute(s)W
+    * SQLGetStmtAttr state handling incorrect in S5, S6, and S7 (via SQLExtendedFetch)
+    * SQLSetPos and SQLExtendedFetch state management fixes
+    * SQLExecDirect/W erroneous transition to S1 upon error in S5
+    * Async SQLGetData and SQLExecDirect/W fails to restore state upon cancellation
+    * SQLFetchScroll cannot move cursor back into the rowset
+    * SQLSetDescField doesn't adjust the length of the buffer when converting to unicode
+    * SQLGetDescField/W and SQLSetDescField/W do not check for negative buffer lengths
+    * SQLSetStmtAttrW SQL_ATTR_APP_PARAM_DESC and SQL_ATTR_APP_ROW_DESC does not accept null
+    * SQLGetData async state reentrancy issues
+    * SQLDriversW off-by-one in enumerating driver list
+    * SQLPrimaryKeys does not pass length in characters to driver
+    * SQLGetConnectAttr with string attributes truncates to half buffer length
+    * SQLTransact with autocommit enabled erroneously changes statement state
+    * SQLDataSources/W fails to reset list position upon end
+    * SQLGetEnvAttr successfully returns unset SQL_ATTR_ODBC_VERSION
+    * Lack of SQL_HANDLE_SENV support
+    * SQLAllocEnv fails to set environment version correctly
+    * SQLMoreResults with streamed output parameters returns unexpected HY010
+    * Custom pre-connect pointer attributes are truncated to 32 bits
+    * 08003 message should be "Connection not open"
+    * SQL_ATTR_ACCESS_MODE set using SQLSetConnectOption/W before connecting does not persist after disconnecting
+    * SQL_ATTR_AUTOCOMMIT incorrect default value before connecting
+    * SQL_AUTOCOMMIT set using SQLSetConnectOption/W before connecting does not persist after disconnecting
+    * SQLAllocHandle/SQLFreeHandle with invalid handle type should return SQL_INVALID_HANDLE
+    * SQLAllocHandleStd not setting ODBC version correctly
+    * SQLBindParameter does not ignore BufferLength for DAE parameters
+    * SQLBindParameter does not ignore BufferLength for fixed-length parameters
+    * SQLBindParameter returns "Invalid application buffer type" instead of " Program type out of range"
+    * SQLCancel with 01S05 returned from driver should result in SQL_SUCCESS, not SQL_SUCCESS_WITH_INFO 
+      (see https://msdn.microsoft.com/en-us/library/aa392708(v=vs.85).aspx )
+    * SQLColAttribute/SQLColAttributes should return number of bytes needed for Unicode string when truncating
+    * SQLColumnPrivileges/W differing error message precedence from Windows DM and order in ODBC spec
+    * SQLColumns/W extraneous checks on null string's length
+    * SQLCopyDesc does not copy descriptors across connections correctly
+    * SQLDescribeParam extraneous checks for state
+    * SQLDriverConnect/W adds extraneous DM prefix to diagnostic messages
+    * SQLDriversW before ODBC version set returns incorrect SQLSTATE
+    * SQLFetch in state S7 does not return error from DM
+    * SQLFetchScroll missing check for SQL_FETCH_BOOKMARK
+    * SQLForeignKeys/W missing check for null table names
+    * SQLGetConnectAttr/W erroneously retrieves attributes with no default (SQL_ATTR_PACKET_SIZE, SQL_ATTR_QUIET_MODE)
+    * SQLGetConnectAttr/W fails to get some set attributes before connecting
+    * SQLGetConnectAttr/W fails to retrieve set attributes with no connection
+    * SQLGetConnectAttrW returns incorrect value for SQL_ATTR_TRACE
+    * SQLGetConnectOption/W cannot retrieve SQL_ODBC_CURSORS before connection
+    * SQLGetConnectOption/W fails to retrieve SQL_LOGIN_TIMEOUT before connecting
+    * SQLGetConnectOption/W fails to retrieve SQL_ATTR_ACCESS_MODE set with SQLSetConnectOption/W
+    * SQLGetData and SQLSetPos async states are incorrect
+    * SQLGetData missing check for cursor end indication; SQLSetCursorName/W fails to clear previous diagnostic records
+    * SQLGetDiagField/W does not check record number for SQL_DIAG_ROW_COUNT and SQL_DIAG_DYNAMIC_FUNCTION_CODE
+    * SQLGetDiagField/W missing check for negative buffer length for string fields
+    * SQLGetDiagField/W inconsistent handling of statement-only diagnostic fields
+    * SQLGetInstalledDrivers off-by-one length
+    * SQLGetStmtOption various state handling issues
+    * SQLSetConnectAttr/W SQL_ATTR_CURRENT_CATALOG extraneous check with error 24000
+    * SQLSetConnectAttr/W does not prevent attempts to set ODBC 3.x statement attributes
+    * SQLSetConnectAttr/W with null string attributes causes crash
+    * SQLSetConnectOption passes SQL_ATTR_TRACEFILE to the driver
+    * SQLSetConnectOption/W or SQLSetConnectAttr/W missing validity checks for SQL_ATTR_TXN_ISOLATION
+    * SQLSetConnectOption/W setting SQL_ATTR_TRACEFILE to null results in different error
+    * SQLSetCursorName/W missing checks for negative name length
+    * SQLSetDescField/W missing check for negative SQL_DESC_COUNT
+    * SQLSetParam missing various error checks for invalid data types and buffer 
+    * SQLSetPos does not check for state S5
+    * SQLSetPos missing checks in state S7
+    * SQLSetScrollOptions various state handling issues
+    * SQLSetStmtOption/W missing check for positive rowset sizes
+    * SQLSpecialColumns/W error precedence differs from Windows DM
+    * SQLSpecialColumns/W incorrect check for SQL_NTS string lengths
+    * SQLStatisticsW uniqueness parameter missing validation
+    * SQLTablePrivileges/W extraneous checks on null string's length
+    * Various issues with SQLGetFunctions
+    * Various string conversion and length issues in SQLColAttribute; missing buffer length check in SQLColAttributeW
+    * As above, but for SQLColAttributes and SQLColAttributesW; incorrect check for SQL_COLUMN_COUNT
+    * Setting SQL_ATTR_TRACEFILE to null value results in different error
+    * check_target_type allows driver-specific C data types for ODBC < 3.8
+    * fix empty SQL_DIAG_SERVER_NAME field in DM-supplied diag recs
+    * fix differing behaviour for an empty string DSN in SQLConnect/W
+
+3rd-Aug-2015
 2.3.4
 
     * Fix typo in the loading of the cursor lib, reports
diff -Naur orig/config.h.in patched/config.h.in
--- orig/config.h.in	2015-08-31 12:06:31.134739579 +0200
+++ patched/config.h.in	2017-09-23 17:45:54.907091000 +0200
@@ -359,8 +359,7 @@
    module search path. */
 #undef LT_MODULE_PATH_VAR
 
-/* Define to the sub-directory in which libtool stores uninstalled libraries.
-   */
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
 #undef LT_OBJDIR
 
 /* Define to the shared library suffix, say, ".dylib". */
@@ -474,7 +473,7 @@
 /* Define to empty if `const' does not conform to ANSI C. */
 #undef const
 
-/* Define to a type to use for `error_t' if it is not otherwise available. */
+/* Define to a type to use for 'error_t' if it is not otherwise available. */
 #undef error_t
 
 /* Define to `int' if <sys/types.h> doesn't define. */
diff -Naur orig/configure.ac patched/configure.ac
--- orig/configure.ac	2015-08-31 12:06:13.134739579 +0200
+++ patched/configure.ac	2017-09-23 17:45:54.895091000 +0200
@@ -1,6 +1,6 @@
 dnl Process this file with autoconf to produce a configure script.
 
-AC_INIT([unixODBC], [2.3.4], nick@unixodbc.org, [unixODBC])
+AC_INIT([unixODBC], [2.3.5-pre], nick@unixodbc.org, [unixODBC])
 AM_INIT_AUTOMAKE
 
 dnl Checks for programs.
@@ -101,6 +101,14 @@
     *) AC_MSG_ERROR(bad value ${enableval} for --enable-stats) ;;
     esac],[stats=false])
 
+AC_ARG_ENABLE( setlibversion,
+[  --enable-setlibversion  build with VERS set in libraries [default=no]],
+[ case "${enableval}" in
+    yes) setlibversion=true ;;
+    no) setlibversion=false ;;
+    *) AC_MSG_ERROR(bad value ${enableval} for --enable-setlibversion) ;;
+    esac],[setlibversion=false])
+
 AC_ARG_ENABLE( handlemap, 
 [  --enable-handlemap      driver manager can map driver handles called back from broken drivers [default=no]],
 [ case "${enableval}" in
@@ -550,5 +558,10 @@
     )
 
 dnl Attempt to add version information to libraries generated by libtool
-dnl sed '/archive_expsym_cmds=/s/{ global/VERS_3.52 {global/' < libtool > libtool.tmp; mv libtool.tmp libtool
-
+AC_MSG_CHECKING( are we setting library version )
+if test "x$setlibversion" = "xtrue"; then
+	AC_MSG_RESULT( yes );
+    sed '/archive_expsym_cmds=/s/{ global/VERS_3.52 {global/' < libtool > libtool.tmp; mv libtool.tmp libtool
+else
+	AC_MSG_RESULT( no );
+fi
diff -Naur orig/cur/SQLFreeHandle.c patched/cur/SQLFreeHandle.c
--- orig/cur/SQLFreeHandle.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/cur/SQLFreeHandle.c	2017-09-23 17:45:53.779078000 +0200
@@ -66,7 +66,7 @@
       case SQL_HANDLE_STMT:
         {
             CLHSTMT cl_statement = (CLHSTMT) handle; 
-            SQLRETURN ret;
+            SQLRETURN ret = SQL_SUCCESS;
 
             /*
              * call the driver
diff -Naur orig/cur/SQLFreeStmt.c patched/cur/SQLFreeStmt.c
--- orig/cur/SQLFreeStmt.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/cur/SQLFreeStmt.c	2017-09-23 17:45:54.299084000 +0200
@@ -59,7 +59,7 @@
            SQLUSMALLINT option )
 {
     CLHSTMT cl_statement = (CLHSTMT) statement_handle; 
-    SQLRETURN ret;
+    SQLRETURN ret = SQL_SUCCESS;
 
     /*
      * call the driver
diff -Naur orig/cur/SQLGetData.c patched/cur/SQLGetData.c
--- orig/cur/SQLGetData.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/cur/SQLGetData.c	2017-09-23 17:45:53.791078000 +0200
@@ -284,7 +284,7 @@
         	SQLSMALLINT ind;
         	SQLCHAR message_text[ SQL_MAX_MESSAGE_LENGTH + 1 ];
         	SQLRETURN ret;
-			int rec;
+			int rec = 1;
 	
         	/*
          	* get the error from the driver before
@@ -484,7 +484,7 @@
 						SQLSMALLINT ind;
 						SQLCHAR message_text[ SQL_MAX_MESSAGE_LENGTH + 1 ];
 						SQLRETURN ret;
-						int rec;
+						int rec = 1;
 				
 						/*
 						* get the error from the driver before
@@ -582,7 +582,7 @@
 			SQLSMALLINT ind;
 			SQLCHAR message_text[ SQL_MAX_MESSAGE_LENGTH + 1 ];
 			SQLRETURN ret;
-			int rec;
+			int rec = 1;
 	
 			/*
 			* get the error from the driver before
@@ -730,7 +730,7 @@
         SQLSMALLINT ind;
         SQLCHAR message_text[ SQL_MAX_MESSAGE_LENGTH + 1 ];
         SQLRETURN ret;
-		int rec;
+		int rec = 1;
 
         /*
          * get the error from the driver before
diff -Naur orig/DriverManager/__attribute.c patched/DriverManager/__attribute.c
--- orig/DriverManager/__attribute.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/__attribute.c	2017-09-23 17:45:53.143070759 +0200
@@ -1453,6 +1453,14 @@
             }
             break;
 
+        case SQL_ATTR_TXN_ISOLATION:
+            if ( ival != SQL_TXN_READ_UNCOMMITTED && ival != SQL_TXN_READ_COMMITTED
+                && ival != SQL_TXN_REPEATABLE_READ && ival != SQL_TXN_SERIALIZABLE )
+            {
+                return SQL_ERROR;
+            }
+            break;
+
         /*
          * include statement attributes as well
          */
@@ -1615,6 +1623,9 @@
             }
             break;
 
+        case SQL_ROWSET_SIZE:
+            return ival > 0 ? SQL_SUCCESS : SQL_ERROR;
+
         default:
             return SQL_SUCCESS;
     }
diff -Naur orig/DriverManager/drivermanager.h patched/DriverManager/drivermanager.h
--- orig/DriverManager/drivermanager.h	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/drivermanager.h	2017-09-23 17:45:53.083070042 +0200
@@ -223,7 +223,7 @@
     int                 attr_type;
     char                *str_attr;
     int                 str_len;
-    int                 int_attr;
+    SQLLEN              int_attr;
     struct save_attr    *next;
 };
 
@@ -275,6 +275,7 @@
     struct environment *next_class_list;/* static list of all env handles */
     char            msg[ LOG_MSG_MAX ];	/* buff to format msgs */
     int             state;              /* state of environment */
+    int             version_set;        /* whether ODBC version has been set */
     SQLINTEGER      requested_version;  /* SQL_OV_ODBC2 or SQL_OV_ODBC3 */
     int             connection_count;   /* number of hdbc of this env */
     int             sql_driver_count;   /* used for SQLDrivers */
@@ -621,6 +622,7 @@
     ERROR_HY024,
     ERROR_HY090,
     ERROR_HY092,
+    ERROR_HY095,
     ERROR_HY097,
     ERROR_HY098,
     ERROR_HY099,
@@ -664,12 +666,25 @@
         SQLCHAR *message_text,
         int class_origin,
         int subclass_origin );
+void __post_internal_error_ex_noprefix( EHEAD *error_handle,
+        SQLCHAR *sqlstate,
+        SQLINTEGER native_error,
+        SQLCHAR *message_text,
+        int class_origin,
+        int subclass_origin );
 void __post_internal_error_ex_w( EHEAD *error_handle,
         SQLWCHAR *sqlstate,
         SQLINTEGER native_error,
         SQLWCHAR *message_text,
         int class_origin,
         int subclass_origin );
+void __post_internal_error_ex_w_noprefix( EHEAD *error_handle,
+        SQLWCHAR *sqlstate,
+        SQLINTEGER native_error,
+        SQLWCHAR *message_text,
+        int class_origin,
+        int subclass_origin );
+int function_return_nodrv( int level, void *handle, int ret_code );
 int function_return_ex( int level, void * handle, int ret_code, int save_to_diag );
 void function_entry( void *handle );
 void setup_error_head( EHEAD *error_header, void *handle, int handle_type );
@@ -810,6 +825,7 @@
 struct con_pair * __get_pair( char ** cp );
 int __append_pair( struct con_struct *con_str, char *kword, char *value );
 void __handle_attr_extensions_cs( DMHDBC connection, struct con_struct *con_str );
+void __strip_from_pool( DMHENV env );
 
 /*
  * the following two are part of a effort to get a particular unicode driver working
@@ -822,7 +838,7 @@
  * check the type passed to SQLBindCol is a valid C_TYPE
  */
 
-int check_target_type( int c_type );
+int check_target_type( int c_type, int connection_mode);
 
 /*
  * entry exit functions in drivers
diff -Naur orig/DriverManager/__handles.c patched/DriverManager/__handles.c
--- orig/DriverManager/__handles.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/__handles.c	2017-09-23 17:45:53.071069899 +0200
@@ -284,7 +284,7 @@
 static pth_mutex_t mutex_iconv = PTH_MUTEX_INIT;
 static int pth_init_called = 0;
 
-static int mutex_entry( pth_mutex_t *mutex )
+static int local_mutex_entry( pth_mutex_t *mutex )
 {
     if ( !pth_init_called )
     {
@@ -294,7 +294,7 @@
     return pth_mutex_acquire( mutex, 0, NULL );
 }
 
-static int mutex_exit( pth_mutex_t *mutex )
+static int local_mutex_exit( pth_mutex_t *mutex )
 {
     return pth_mutex_release( mutex );
 }
@@ -308,12 +308,12 @@
 static pthread_mutex_t mutex_pool = PTHREAD_MUTEX_INITIALIZER;
 static pthread_mutex_t mutex_iconv = PTHREAD_MUTEX_INITIALIZER;
 
-static int mutex_entry( pthread_mutex_t *mutex )
+static int local_mutex_entry( pthread_mutex_t *mutex )
 {
     return pthread_mutex_lock( mutex );
 }
 
-static int mutex_exit( pthread_mutex_t *mutex )
+static int local_mutex_exit( pthread_mutex_t *mutex )
 {
     return pthread_mutex_unlock( mutex );
 }
@@ -327,20 +327,20 @@
 static mutex_t mutex_pool;
 static mutex_t mutex_iconv;
 
-static int mutex_entry( mutex_t *mutex )
+static int local_mutex_entry( mutex_t *mutex )
 {
     return mutex_lock( mutex );
 }
 
-static int mutex_exit( mutex_t *mutex )
+static int local_mutex_exit( mutex_t *mutex )
 {
     return mutex_unlock( mutex );
 }
 
 #else
 
-#define mutex_entry(x)
-#define mutex_exit(x)
+#define local_mutex_entry(x)
+#define local_mutex_exit(x)
 
 #endif
 
@@ -350,12 +350,12 @@
 
 void mutex_pool_entry( void )
 {
-    mutex_entry( &mutex_pool );
+    local_mutex_entry( &mutex_pool );
 }
 
 void mutex_pool_exit( void )
 {
-    mutex_exit( &mutex_pool );
+    local_mutex_exit( &mutex_pool );
 }
 
 /*
@@ -364,12 +364,12 @@
 
 void mutex_iconv_entry( void )
 {
-    mutex_entry( &mutex_iconv );
+    local_mutex_entry( &mutex_iconv );
 }
 
 void mutex_iconv_exit( void )
 {
-    mutex_exit( &mutex_iconv );
+    local_mutex_exit( &mutex_iconv );
 }
 
 /*
@@ -379,12 +379,12 @@
 
 void mutex_lib_entry( void )
 {
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 }
 
 void mutex_lib_exit( void )
 {
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -395,7 +395,7 @@
 {
     DMHENV environment = NULL;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     environment = calloc( sizeof( *environment ), 1 );
 
@@ -466,7 +466,7 @@
 
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return environment;
 }
@@ -489,7 +489,7 @@
     DMHENV ptr;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = environment_root;
 
@@ -504,7 +504,7 @@
         ptr = ptr -> next_class_list;
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 
@@ -520,7 +520,7 @@
     DMHENV last = NULL;
     DMHENV ptr;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = environment_root;
 
@@ -567,7 +567,7 @@
 
     free( environment );
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -587,7 +587,7 @@
 {
     DMHDBC connection = NULL;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     connection = calloc( sizeof( *connection ), 1 );
 
@@ -623,7 +623,7 @@
 
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return connection;
 }
@@ -650,8 +650,8 @@
          * connection lock, and create the env lock
          */
 	if(old_level != TS_LEVEL0)
-            mutex_exit( &connection -> mutex );
-        mutex_entry( &mutex_env );
+            local_mutex_exit( &connection -> mutex );
+        local_mutex_entry( &mutex_env );
     }
     else if ( old_level == TS_LEVEL3 )
     {
@@ -660,8 +660,8 @@
          * connection lock, and remove the env lock
          */
 	if(level != TS_LEVEL0)
-	    mutex_entry( &connection -> mutex );
-        mutex_exit( &mutex_env );
+	    local_mutex_entry( &connection -> mutex );
+        local_mutex_exit( &mutex_env );
     }
 
 #endif
@@ -685,7 +685,7 @@
     DMHDBC ptr;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = connection_root;
 
@@ -700,7 +700,7 @@
         ptr = ptr -> next_class_list;
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 #endif
@@ -715,7 +715,7 @@
     DMHDBC last = NULL;
     DMHDBC ptr;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = connection_root;
 
@@ -758,7 +758,7 @@
 
     free( connection );
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -769,7 +769,7 @@
 {
     DMHSTMT statement = NULL;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     statement = calloc( sizeof( *statement ), 1 );
 
@@ -802,7 +802,7 @@
 
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return statement;
 }
@@ -813,7 +813,7 @@
 
 void __register_stmt ( DMHDBC connection, DMHSTMT statement )
 {
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     connection -> statement_count ++;
     statement -> connection = connection;
@@ -821,7 +821,7 @@
     statement -> next_conn_list = connection -> statements;
     connection -> statements = statement;
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -832,7 +832,7 @@
     DMHSTMT         statement;
     SQLINTEGER stmt_remaining;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     statement      = connection -> statements;
     while ( statement )
@@ -922,7 +922,7 @@
         statement = statement -> next_class_list;
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -934,7 +934,7 @@
     DMHSTMT ptr, last;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     while ( connection -> statements )
     {
@@ -1008,7 +1008,7 @@
         }
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 }
@@ -1027,7 +1027,7 @@
     }
     va_end (ap);
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     ptr = connection -> statements;
     while( !found && ptr )
@@ -1058,7 +1058,7 @@
         ptr = ptr -> next_class_list;
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return found;
 }
@@ -1072,7 +1072,7 @@
     DMHSTMT ptr;
     int found = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     ptr = connection -> statements;
     while( ptr )
@@ -1101,7 +1101,7 @@
         ptr = ptr -> next_class_list;
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return found;
 }
@@ -1112,7 +1112,7 @@
     DMHSTMT ptr;
     int found = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
     connection = desc -> connection;
 #ifdef FAST_HANDLE_VALIDATE
     ptr = connection -> statements;
@@ -1148,7 +1148,7 @@
         ptr = ptr -> next_class_list;
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return found;
 }
@@ -1159,7 +1159,7 @@
     DMHSTMT ptr;
     int found = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
     connection = desc -> connection;
 #ifdef FAST_HANDLE_VALIDATE
     ptr = connection -> statements;
@@ -1195,7 +1195,7 @@
         ptr = ptr -> next_class_list;
     }
 #endif
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return found;
 }
@@ -1222,7 +1222,7 @@
     DMHSTMT ptr;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = statement_root;
 
@@ -1237,7 +1237,7 @@
         ptr = ptr -> next_class_list;
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 
@@ -1253,7 +1253,7 @@
     DMHSTMT last = NULL;
     DMHSTMT ptr;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     /*
      * A check never mind
@@ -1349,7 +1349,7 @@
 
     free( statement );
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 /*
@@ -1360,7 +1360,7 @@
 {
     DMHDESC descriptor;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     descriptor = calloc( sizeof( *descriptor ), 1 );
 
@@ -1391,7 +1391,7 @@
 #endif
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return descriptor;
 }
@@ -1414,7 +1414,7 @@
     DMHDESC ptr;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
     ptr = descriptor_root;
 
@@ -1429,7 +1429,7 @@
         ptr = ptr -> next_class_list;
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 
@@ -1445,7 +1445,7 @@
     DMHDESC ptr, last;
     int ret = 0;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
     last = NULL;
     ptr = descriptor_root;
 
@@ -1497,7 +1497,7 @@
         }
     }
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
     return ret;
 }
@@ -1511,8 +1511,9 @@
 {
     DMHDESC last = NULL;
     DMHDESC ptr;
+    DMHSTMT assoc_stmt;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 #ifdef FAST_HANDLE_VALIDATE
     /*
      * A check never mind
@@ -1566,6 +1567,32 @@
     }
 
     clear_error_head( &descriptor -> error );
+    /* If there are any statements still pointing to this descriptor, revert them to implicit */
+    assoc_stmt = statement_root;
+    while ( assoc_stmt )
+    {
+        DMHDESC *pDesc[ 4 ];
+        DMHDESC impDesc[ 4 ];
+        int i;
+        
+        pDesc[ 0 ] = &assoc_stmt -> ipd;
+        pDesc[ 1 ] = &assoc_stmt -> apd;
+        pDesc[ 2 ] = &assoc_stmt -> ird;
+        pDesc[ 3 ] = &assoc_stmt -> ard;
+        impDesc[ 0 ] = assoc_stmt -> implicit_ipd;
+        impDesc[ 1 ] = assoc_stmt -> implicit_apd;
+        impDesc[ 2 ] = assoc_stmt -> implicit_ird;
+        impDesc[ 3 ] = assoc_stmt -> implicit_ard;
+
+        for ( i = 0; i < 4; i++ )
+        {
+            if ( *pDesc[i] == descriptor )
+            {
+                *pDesc[i] = impDesc[i];
+            }
+        }
+        assoc_stmt = assoc_stmt -> next_class_list;
+    }
 
 #ifdef HAVE_LIBPTH
 #elif HAVE_LIBPTHREAD
@@ -1582,7 +1609,7 @@
 
     free( descriptor );
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 }
 
 #if defined ( HAVE_LIBPTHREAD ) || defined ( HAVE_LIBTHREAD ) || defined( HAVE_LIBPTH )
@@ -1596,19 +1623,19 @@
     switch( type )
     {
       case SQL_HANDLE_ENV:
-        mutex_entry( &mutex_env );
+        local_mutex_entry( &mutex_env );
         break;
 
       case SQL_HANDLE_DBC:
         connection = handle;
         if ( connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_entry( &mutex_env );
+            local_mutex_entry( &mutex_env );
         }
         else if ( connection -> protection_level == TS_LEVEL2 ||
                 connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_entry( &connection -> mutex );
+            local_mutex_entry( &connection -> mutex );
         }
         break;
 
@@ -1616,15 +1643,15 @@
         statement = handle;
         if ( statement -> connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_entry( &mutex_env );
+            local_mutex_entry( &mutex_env );
         }
         else if ( statement -> connection -> protection_level == TS_LEVEL2 )
         {
-            mutex_entry( &statement -> connection -> mutex );
+            local_mutex_entry( &statement -> connection -> mutex );
         }
         else if ( statement -> connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_entry( &statement -> mutex );
+            local_mutex_entry( &statement -> mutex );
         }
         break;
 
@@ -1632,15 +1659,15 @@
         descriptor = handle;
         if ( descriptor -> connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_entry( &mutex_env );
+            local_mutex_entry( &mutex_env );
         }
         if ( descriptor -> connection -> protection_level == TS_LEVEL2 )
         {
-            mutex_entry( &descriptor -> connection -> mutex );
+            local_mutex_entry( &descriptor -> connection -> mutex );
         }
         if ( descriptor -> connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_entry( &descriptor -> mutex );
+            local_mutex_entry( &descriptor -> mutex );
         }
         break;
     }
@@ -1655,19 +1682,19 @@
     switch( type )
     {
       case SQL_HANDLE_ENV:
-        mutex_exit( &mutex_env );
+        local_mutex_exit( &mutex_env );
         break;
 
       case SQL_HANDLE_DBC:
         connection = handle;
         if ( connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_exit( &mutex_env );
+            local_mutex_exit( &mutex_env );
         }
         else if ( connection -> protection_level == TS_LEVEL2 ||
                 connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_exit( &connection -> mutex );
+            local_mutex_exit( &connection -> mutex );
         }
         break;
 
@@ -1675,15 +1702,15 @@
         statement = handle;
         if ( statement -> connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_exit( &mutex_env );
+            local_mutex_exit( &mutex_env );
         }
         else if ( statement -> connection -> protection_level == TS_LEVEL2 )
         {
-            mutex_exit( &statement -> connection -> mutex );
+            local_mutex_exit( &statement -> connection -> mutex );
         }
         else if ( statement -> connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_exit( &statement -> mutex );
+            local_mutex_exit( &statement -> mutex );
         }
         break;
 
@@ -1691,15 +1718,15 @@
         descriptor = handle;
         if ( descriptor -> connection -> protection_level == TS_LEVEL3 )
         {
-            mutex_exit( &mutex_env );
+            local_mutex_exit( &mutex_env );
         }
         else if ( descriptor -> connection -> protection_level == TS_LEVEL2 )
         {
-            mutex_exit( &descriptor -> connection -> mutex );
+            local_mutex_exit( &descriptor -> connection -> mutex );
         }
         else if ( descriptor -> connection -> protection_level == TS_LEVEL1 )
         {
-            mutex_exit( &descriptor -> mutex );
+            local_mutex_exit( &descriptor -> mutex );
         }
         break;
     }
@@ -1720,7 +1747,7 @@
 {
 	void *found_handle = NULL;
 
-    mutex_entry( &mutex_lists );
+    local_mutex_entry( &mutex_lists );
 
 	switch( type ) {
 		case SQL_HANDLE_DBC:
@@ -1766,7 +1793,7 @@
 			break;
 	}
 
-    mutex_exit( &mutex_lists );
+    local_mutex_exit( &mutex_lists );
 
 	return found_handle;
 }
diff -Naur orig/DriverManager/__info.c patched/DriverManager/__info.c
--- orig/DriverManager/__info.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/__info.c	2017-09-23 17:45:53.119070472 +0200
@@ -689,13 +689,13 @@
         len = wide_strlen( str ) + 1;
     }
 
-    aptr = malloc( len + 1 );
+    aptr = malloc(( len * 4 ) + 1 );       /* There may be UTF8 */
     if ( !aptr )
     {
         return NULL;
     }
 
-    return unicode_to_ansi_copy( aptr, len, str, len, connection, clen );
+    return unicode_to_ansi_copy( aptr, len * 4, str, len, connection, clen );
 }
 
 /*
@@ -738,7 +738,10 @@
                 *clen = opt - dest;
             }
 	        /* Null terminate outside of iconv, so that the length returned does not include the null terminator. */
-	        dest[opt - dest] = '\0';
+            if ( obl )
+            {
+	            *opt = '\0';
+            }
             return dest;
         }
     }
@@ -761,7 +764,10 @@
         *clen = i;
     }
 
-    dest[ i ] = '\0';
+    if (dest_len)
+    {
+        dest[ i < dest_len ? i : i-1 ] = '\0';
+    }
 
     return dest;
 }
@@ -3866,13 +3872,7 @@
         int class_origin,
         int subclass_origin )
 {
-    /*
-     * create a error block and add to the lists,
-     * leave space for the error prefix
-     */
-
     SQLCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    ERROR *e1, *e2;
 
     /*
      * add our prefix
@@ -3881,6 +3881,30 @@
     strcpy((char*) msg, ERROR_PREFIX );
     strcat((char*) msg, (char*) message_text );
 
+    __post_internal_error_ex_noprefix(
+        error_header,
+        sqlstate,
+        native_error,
+        msg,
+        class_origin,
+        subclass_origin );
+}
+
+void __post_internal_error_ex_noprefix( EHEAD *error_header,
+        SQLCHAR *sqlstate,
+        SQLINTEGER native_error,
+        SQLCHAR *msg,
+        int class_origin,
+        int subclass_origin )
+{
+    /*
+     * create a error block and add to the lists,
+     * leave space for the error prefix
+     */
+
+    ERROR *e1, *e2;
+    DMHDBC conn = __get_connection( error_header );
+
     e1 = malloc( sizeof( ERROR ));
     if (e1 == NULL)
         return;
@@ -3897,10 +3921,10 @@
     e1 -> native_error = native_error;
     e2 -> native_error = native_error;
     ansi_to_unicode_copy(e1 -> sqlstate,
-                         (char*)sqlstate, SQL_NTS, __get_connection( error_header ), NULL );
+                         (char*)sqlstate, SQL_NTS, conn, NULL );
     wide_strcpy( e2 -> sqlstate, e1 -> sqlstate );
 
-    e1 -> msg = ansi_to_unicode_alloc( msg, SQL_NTS, __get_connection( error_header ), NULL );
+    e1 -> msg = ansi_to_unicode_alloc( msg, SQL_NTS, conn, NULL );
     if ( !e1 -> msg )
     {
         free( e1 );
@@ -3939,26 +3963,26 @@
 
     if ( class_origin == SUBCLASS_ODBC )
     	ansi_to_unicode_copy( e1 -> diag_class_origin, (char*) "ODBC 3.0",
-			      SQL_NTS, __get_connection( error_header ), NULL );
+			      SQL_NTS, conn, NULL );
     else
     	ansi_to_unicode_copy( e1 -> diag_class_origin, (char*) "ISO 9075",
-			      SQL_NTS, __get_connection( error_header ), NULL );
+			      SQL_NTS, conn, NULL );
     wide_strcpy( e2 -> diag_class_origin, e1 -> diag_class_origin );
 
     if ( subclass_origin == SUBCLASS_ODBC )
     	ansi_to_unicode_copy( e1 -> diag_subclass_origin, (char*) "ODBC 3.0",
-			      SQL_NTS, __get_connection( error_header ), NULL );
+			      SQL_NTS, conn, NULL );
     else
     	ansi_to_unicode_copy( e1 -> diag_subclass_origin, (char*) "ISO 9075",
-			      SQL_NTS, __get_connection( error_header ), NULL );
+			      SQL_NTS, conn, NULL );
     wide_strcpy( e2 -> diag_subclass_origin, e1 -> diag_subclass_origin );
 
     ansi_to_unicode_copy( e1 -> diag_connection_name, (char*) "", SQL_NTS,
-			  __get_connection( error_header ), NULL );
+			  conn, NULL );
     wide_strcpy( e2 -> diag_connection_name, e1 -> diag_connection_name );
 
-    ansi_to_unicode_copy( e1 -> diag_server_name, (char*) "", SQL_NTS,
-			  __get_connection( error_header ), NULL );
+    ansi_to_unicode_copy( e1 -> diag_server_name, conn ? conn->dsn : (char*) "", SQL_NTS,
+			  conn, NULL );
     wide_strcpy( e2 -> diag_server_name, e1 -> diag_server_name );
 
     /*
@@ -3977,13 +4001,7 @@
         int class_origin,
         int subclass_origin )
 {
-    /*
-     * create a error block and add to the lists,
-     * leave space for the error prefix
-     */
-
     SQLWCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    ERROR *e1, *e2;
 
     /*
      * add our prefix
@@ -3993,6 +4011,29 @@
 			 __get_connection( error_header ), NULL);
     wide_strcat( msg, message_text );
 
+    __post_internal_error_ex_w_noprefix(
+        error_header,
+        sqlstate,
+        native_error,
+        msg,
+        class_origin,
+        subclass_origin );
+}
+
+void __post_internal_error_ex_w_noprefix( EHEAD *error_header,
+        SQLWCHAR *sqlstate,
+        SQLINTEGER native_error,
+        SQLWCHAR *msg,
+        int class_origin,
+        int subclass_origin )
+{
+    /*
+     * create a error block and add to the lists,
+     * leave space for the error prefix
+     */
+
+    ERROR *e1, *e2;
+
     e1 = malloc( sizeof( ERROR ));
     if ( !e1 )
         return;
@@ -4145,7 +4186,7 @@
 {
     SQLRETURN ret;
     SQLCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    SQLCHAR msg1[ SQL_MAX_MESSAGE_LENGTH ];
+    SQLCHAR msg1[ SQL_MAX_MESSAGE_LENGTH + 1 ];
     SQLCHAR sqlstate[ 6 ];
     SQLINTEGER native, len;
     SQLINTEGER rec_number;
@@ -4176,7 +4217,14 @@
         {
             ERROR *e = malloc( sizeof( ERROR ));
             SQLWCHAR *tmp;
-            SQLINTEGER len;
+
+            /* 
+             * make sure we are truncated in the right place
+             */
+
+            if ( ret == SQL_SUCCESS_WITH_INFO || len >= SQL_MAX_MESSAGE_LENGTH ) {
+                msg1[ SQL_MAX_MESSAGE_LENGTH - 1 ] = '\0';
+            }
 
 #ifdef STRICT_ODBC_ERROR
             strcpy((char*) msg, (char*)msg1 );
@@ -4402,7 +4450,7 @@
 {
     SQLRETURN ret;
     SQLCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    SQLCHAR msg1[ SQL_MAX_MESSAGE_LENGTH ];
+    SQLCHAR msg1[ SQL_MAX_MESSAGE_LENGTH + 1 ];
     SQLCHAR sqlstate[ 6 ];
     SQLINTEGER native;
     SQLSMALLINT len;
@@ -4440,6 +4488,14 @@
              * add our prefix
              */
 
+            /* 
+             * make sure we are truncated in the right place
+             */
+
+            if ( ret == SQL_SUCCESS_WITH_INFO || len >= SQL_MAX_MESSAGE_LENGTH ) {
+                msg1[ SQL_MAX_MESSAGE_LENGTH ] = '\0';
+            }
+
 #ifdef STRICT_ODBC_ERROR
             strcpy((char*) msg, (char*)msg1 );
 #else
@@ -4503,7 +4559,7 @@
 {
     SQLRETURN ret;
     SQLWCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    SQLWCHAR msg1[ SQL_MAX_MESSAGE_LENGTH ];
+    SQLWCHAR msg1[ SQL_MAX_MESSAGE_LENGTH + 1 ];
     SQLWCHAR sqlstate[ 6 ];
     SQLINTEGER native, len;
     SQLINTEGER rec_number;
@@ -4534,6 +4590,14 @@
             ERROR *e = malloc( sizeof( ERROR ));
             SQLWCHAR *tmp;
 
+            /* 
+             * make sure we are truncated in the right place
+             */
+
+            if ( ret == SQL_SUCCESS_WITH_INFO || len >= SQL_MAX_MESSAGE_LENGTH ) {
+                msg1[ SQL_MAX_MESSAGE_LENGTH ] = 0;
+            }
+
 #ifdef STRICT_ODBC_ERROR
             wide_strcpy( msg, msg1 );
 #else
@@ -4737,7 +4801,7 @@
 {
     SQLRETURN ret;
     SQLWCHAR msg[ SQL_MAX_MESSAGE_LENGTH + 32 ];
-    SQLWCHAR msg1[ SQL_MAX_MESSAGE_LENGTH ];
+    SQLWCHAR msg1[ SQL_MAX_MESSAGE_LENGTH + 1 ];
     SQLWCHAR sqlstate[ 6 ];
     SQLINTEGER native;
     SQLSMALLINT len;
@@ -4770,6 +4834,14 @@
              * add our prefix
              */
 
+            /* 
+             * make sure we are truncated in the right place
+             */
+
+            if ( ret == SQL_SUCCESS_WITH_INFO || len >= SQL_MAX_MESSAGE_LENGTH ) {
+                msg1[ SQL_MAX_MESSAGE_LENGTH ] = 0;
+            }
+
 #ifdef STRICT_ODBC_ERROR
             wide_strcpy( msg, msg1 );
 #else
@@ -4822,6 +4894,17 @@
     while( SQL_SUCCEEDED( ret ));
 }
 
+/* Return without collecting diag recs from the handle - to be called if the
+   DM function is returning before calling the driver function. */
+int function_return_nodrv( int level, void *handle, int ret_code) 
+{
+    if ( level != IGNORE_THREAD )
+    {
+        thread_release( level, handle );
+    }
+    return ret_code;
+}
+
 /*
  * capture function returns and check error's if necessary
  */
@@ -5327,7 +5410,7 @@
 
       case ERROR_08003:
         strcpy( sqlstate, "08003" );
-        message = "Connnection does not exist";
+        message = "Connection not open";
         break;
 
       case ERROR_24000:
@@ -5391,10 +5474,17 @@
 
       case ERROR_HY003:
         if ( connection_mode >= SQL_OV_ODBC3 )
+        {
             strcpy( sqlstate, "HY003" );
+            /* Windows DM returns " Program type out of range" instead of 
+               "Invalid application buffer type" */
+            message = "Program type out of range";
+        }
         else
+        {
             strcpy( sqlstate, "S1003" );
         message = "Invalid application buffer type";
+        }
         break;
 
       case ERROR_HY004:
@@ -5482,6 +5572,14 @@
         message = "Invalid attribute/option identifier";
         break;
 
+      case ERROR_HY095:
+        if ( connection_mode >= SQL_OV_ODBC3 )
+            strcpy( sqlstate, "HY095" );
+        else
+            strcpy( sqlstate, "S1095" );
+        message = "Function type out of range";
+        break;
+        
       case ERROR_HY097:
         if ( connection_mode >= SQL_OV_ODBC3 )
             strcpy( sqlstate, "HY097" );
@@ -5671,7 +5769,7 @@
         message = txt;
 
     strcpy((char*) msg, DM_ERROR_PREFIX );
-    strcat((char*) msg, message );
+    strncat((char*) msg, message, sizeof(msg) - sizeof(DM_ERROR_PREFIX) );
 
     error_handle -> return_code = ret;
 
diff -Naur orig/DriverManager/SQLAllocHandle.c patched/DriverManager/SQLAllocHandle.c
--- orig/DriverManager/SQLAllocHandle.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLAllocHandle.c	2017-09-23 17:45:53.051069660 +0200
@@ -273,6 +273,7 @@
     switch( handle_type )
     {
       case SQL_HANDLE_ENV:
+      case SQL_HANDLE_SENV:
         {
             DMHENV environment;
             char pooling_string[ 128 ];
@@ -320,6 +321,7 @@
 
             environment -> state = STATE_E1;
             environment -> requested_version = requested_version;
+            environment -> version_set = !!requested_version;
         	environment -> sql_driver_count = -1;
 
             /*
@@ -390,7 +392,7 @@
                         ERROR_HY009, NULL, 
                         SQL_OV_ODBC3 );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             /*
@@ -411,7 +413,7 @@
 
                 *output_handle = SQL_NULL_HDBC;
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             connection = __alloc_dbc();
@@ -429,7 +431,7 @@
 
                 *output_handle = SQL_NULL_HDBC;
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             /*
@@ -447,9 +449,7 @@
             connection -> cursors = SQL_CUR_DEFAULT;
             connection -> login_timeout = SQL_LOGIN_TIMEOUT_DEFAULT;
             connection -> login_timeout_set = 0;
-            connection -> auto_commit = 0;
-            connection -> auto_commit_set = 0;
-            connection -> auto_commit = 0;
+            connection -> auto_commit = SQL_AUTOCOMMIT_ON;
             connection -> auto_commit_set = 0;
             connection -> async_enable = 0;
             connection -> async_enable_set = 0;
@@ -555,7 +555,7 @@
                         ERROR_HY009, NULL, 
                         connection -> environment -> requested_version  );
 
-                return function_return( SQL_HANDLE_DBC, connection , SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection , SQL_ERROR );
             }
 
             if ( connection -> state == STATE_C1 ||
@@ -574,7 +574,7 @@
 
                 *output_handle = SQL_NULL_HSTMT;
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             statement = __alloc_stmt();
@@ -592,7 +592,7 @@
 
                 *output_handle = SQL_NULL_HSTMT;
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             /*
@@ -638,7 +638,7 @@
 
                     *output_handle = SQL_NULL_HSTMT;
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
@@ -680,7 +680,7 @@
 
                     *output_handle = SQL_NULL_HSTMT;
                 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
 
@@ -1146,7 +1146,7 @@
                     ERROR_HY009, NULL, 
                     connection -> environment -> requested_version  );
 
-            return function_return( SQL_HANDLE_DBC, connection , SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection , SQL_ERROR );
         }
 
         if ( connection -> state == STATE_C1 ||
@@ -1165,7 +1165,7 @@
 
             *output_handle = SQL_NULL_HDESC;
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         descriptor = __alloc_desc();
@@ -1183,7 +1183,7 @@
 
             *output_handle = SQL_NULL_HDESC;
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         /*
@@ -1217,7 +1217,7 @@
 
             *output_handle = SQL_NULL_HDESC;
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( SQL_SUCCEEDED( ret ))
@@ -1269,7 +1269,7 @@
 						ERROR_HY092, NULL,
 						environment -> requested_version );
 
-			return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+			return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
 		}
 		else if ( __validate_dbc( (DMHDBC) input_handle ))
 		{
@@ -1281,11 +1281,11 @@
 					ERROR_HY092, NULL,
 					connection -> environment -> requested_version );
 	
-			return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+			return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
 		}
 		else
 		{
-			return SQL_ERROR;
+			return SQL_INVALID_HANDLE;
 		}
 		break;
     }
diff -Naur orig/DriverManager/SQLAllocHandleStd.c patched/DriverManager/SQLAllocHandleStd.c
--- orig/DriverManager/SQLAllocHandleStd.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLAllocHandleStd.c	2017-09-23 17:45:53.051069660 +0200
@@ -91,6 +91,7 @@
         DMHENV environment = (DMHENV) *output_handle;
 
         environment -> requested_version = SQL_OV_ODBC3;
+        environment -> version_set = 1;
     }
 
     return ret;
diff -Naur orig/DriverManager/SQLBindCol.c patched/DriverManager/SQLBindCol.c
--- orig/DriverManager/SQLBindCol.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLBindCol.c	2017-09-23 17:45:53.051069660 +0200
@@ -130,12 +130,12 @@
 
 static char const rcsid[]= "$RCSfile: SQLBindCol.c,v $ $Revision: 1.8 $";
 
-int check_target_type( int c_type ) 
+int check_target_type( int c_type, int connection_mode) 
 {
     /*
      * driver defined types
      */
-    if ( c_type >= 0x4000 && c_type <= 0x7FFF ) {
+    if ( connection_mode >= SQL_OV_ODBC3_80 && c_type >= 0x4000 && c_type <= 0x7FFF ) {
         return 1;
     }
 
@@ -253,7 +253,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -286,7 +286,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
@@ -294,7 +294,7 @@
      * Its possible to call with the indicator and buffer NULL to unbind without setting the type
 	 */
 
-	if (( target_value || strlen_or_ind ) && !check_target_type( target_type ))
+	if (( target_value || strlen_or_ind ) && !check_target_type( target_type, statement -> connection -> environment -> requested_version ))
 	{
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -306,7 +306,7 @@
                 ERROR_HY003, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
 	}
 
     if ( !CHECK_SQLBINDCOL( statement -> connection ))
@@ -321,7 +321,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLBINDCOL( statement -> connection ,
diff -Naur orig/DriverManager/SQLBindParam.c patched/DriverManager/SQLBindParam.c
--- orig/DriverManager/SQLBindParam.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLBindParam.c	2017-09-23 17:45:53.051069660 +0200
@@ -207,7 +207,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLBINDPARAM );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( parameter_value == NULL &&
@@ -223,7 +223,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -249,14 +249,14 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
 	 * check valid C_TYPE
 	 */
 
-	if ( !check_target_type( value_type ))
+	if ( !check_target_type( value_type, statement -> connection -> environment -> requested_version ))
 	{
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -268,7 +268,7 @@
                 ERROR_HY003, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
 	}
 
     if ( CHECK_SQLBINDPARAM( statement -> connection ))
@@ -301,7 +301,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
diff -Naur orig/DriverManager/SQLBindParameter.c patched/DriverManager/SQLBindParameter.c
--- orig/DriverManager/SQLBindParameter.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLBindParameter.c	2017-09-23 17:45:53.055069707 +0200
@@ -235,10 +235,22 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLBINDPARAMETER );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( cb_value_max < 0 && cb_value_max != SQL_NTS )
+    if ( ((f_c_type == SQL_C_CHAR || f_c_type == SQL_C_BINARY || f_c_type == SQL_C_WCHAR) ||
+            (f_c_type == SQL_C_DEFAULT &&
+                (f_sql_type == SQL_DEFAULT || 
+                 f_sql_type == SQL_CHAR ||
+                 f_sql_type == SQL_BINARY  ||
+                 f_sql_type == SQL_LONGVARCHAR  ||
+                 f_sql_type == SQL_LONGVARBINARY  ||
+                 f_sql_type == SQL_VARBINARY ||
+                 f_sql_type == SQL_VARCHAR ||
+                 f_sql_type == SQL_WCHAR ||
+                 f_sql_type == SQL_WLONGVARCHAR ||
+                 f_sql_type == SQL_WVARCHAR)))
+         && cb_value_max < 0 && cb_value_max != SQL_NTS )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -250,7 +262,7 @@
                 ERROR_HY090, NULL, 
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( rgb_value == NULL &&
@@ -267,7 +279,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> connection -> environment -> requested_version == SQL_OV_ODBC3_80 ) {
@@ -287,7 +299,7 @@
                     ERROR_HY105, NULL,
                     statement -> connection -> environment -> requested_version );
     
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
     else {
@@ -305,7 +317,7 @@
                     ERROR_HY105, NULL,
                     statement -> connection -> environment -> requested_version );
     
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -347,14 +359,14 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
 	 * check valid C_TYPE
 	 */
 
-	if ( !check_target_type( f_c_type ))
+	if ( !check_target_type( f_c_type, statement -> connection -> environment -> requested_version ))
 	{
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -366,7 +378,7 @@
                 ERROR_HY003, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
 	}
 
     if ( CHECK_SQLBINDPARAMETER( statement -> connection ))
@@ -407,7 +419,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLBrowseConnect.c patched/DriverManager/SQLBrowseConnect.c
--- orig/DriverManager/SQLBrowseConnect.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLBrowseConnect.c	2017-09-23 17:45:53.107070329 +0200
@@ -269,7 +269,7 @@
                 ERROR_08002, NULL, 
                 connection -> environment -> requested_version );
 
-        return function_return( IGNORE_THREAD, connection, SQL_ERROR );
+        return function_return_nodrv( IGNORE_THREAD, connection, SQL_ERROR );
     }
 
     thread_protect( SQL_HANDLE_DBC, connection );
@@ -286,7 +286,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -330,7 +330,7 @@
 
                 __release_conn( &con_struct );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             __generate_connection_string( &con_struct, in_str, sizeof( in_str ));
@@ -357,7 +357,7 @@
                         ERROR_IM012, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             __generate_connection_string( &con_struct, in_str, sizeof( in_str ));
@@ -379,7 +379,7 @@
                         connection -> environment -> requested_version );
                 __release_conn( &con_struct );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             strcpy( connection -> dsn, dsn );
@@ -401,7 +401,7 @@
                     LOG_INFO,
                     "Error: connect_part_one fails" );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( !CHECK_SQLBROWSECONNECT( connection ))
@@ -418,7 +418,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else
@@ -479,7 +479,7 @@
         __post_internal_error( &connection -> error,
                                ERROR_IM001, NULL,
                                connection -> environment -> requested_version );
-          return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+          return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     } 
 
     if ( !SQL_SUCCEEDED( ret ) || ret == SQL_NEED_DATA )
@@ -627,5 +627,5 @@
         ret = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret );
 }
diff -Naur orig/DriverManager/SQLBrowseConnectW.c patched/DriverManager/SQLBrowseConnectW.c
--- orig/DriverManager/SQLBrowseConnectW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLBrowseConnectW.c	2017-09-23 17:45:53.155070902 +0200
@@ -230,7 +230,7 @@
                 ERROR_08002, NULL, 
                 connection -> environment -> requested_version );
 
-        return function_return( IGNORE_THREAD, connection, SQL_ERROR );
+        return function_return_nodrv( IGNORE_THREAD, connection, SQL_ERROR );
     }
 
     /*
@@ -275,7 +275,7 @@
                         connection -> environment -> requested_version );
                 __release_conn( &con_struct );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             __generate_connection_string( &con_struct, in_str, sizeof( in_str ));
@@ -302,7 +302,7 @@
                         ERROR_IM012, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             sprintf( in_str, "DSN=%s;", dsn );
@@ -324,7 +324,7 @@
                         connection -> environment -> requested_version );
                 __release_conn( &con_struct );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             __generate_connection_string( &con_struct, in_str, sizeof( in_str ));
@@ -347,7 +347,7 @@
                     LOG_INFO,
                     "Error: connect_part_one fails" );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( !CHECK_SQLBROWSECONNECTW( connection ) &&
@@ -365,7 +365,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else
@@ -662,5 +662,5 @@
         ret = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret );
 }
diff -Naur orig/DriverManager/SQLBulkOperations.c patched/DriverManager/SQLBulkOperations.c
--- orig/DriverManager/SQLBulkOperations.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLBulkOperations.c	2017-09-23 17:45:53.143070759 +0200
@@ -166,7 +166,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S4 )
@@ -181,7 +181,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S7 )
@@ -196,7 +196,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -216,7 +216,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -234,10 +234,14 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
+    if ( statement -> state != STATE_S11 && statement -> state != STATE_S12 )
+    {
+        statement -> interupted_state = statement -> state;
+    }
     /*
      * there are a lot of conditions that should be tested here
      */
@@ -270,7 +274,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( ret == SQL_STILL_EXECUTING )
@@ -286,6 +290,10 @@
         statement -> interupted_state = statement -> state;
         statement -> state = STATE_S8;
     }
+    else
+    {
+        statement -> state = statement -> interupted_state;
+    }
 
     if ( log_info.log_flag )
     {
diff -Naur orig/DriverManager/SQLCancel.c patched/DriverManager/SQLCancel.c
--- orig/DriverManager/SQLCancel.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLCancel.c	2017-09-23 17:45:53.055069707 +0200
@@ -168,14 +168,14 @@
 #if defined( HAVE_LIBPTH ) || defined( HAVE_LIBPTHREAD ) || defined( HAVE_LIBTHREAD )
         if ( statement -> connection -> protection_level == 3 ) 
         {
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else 
         {
-            return function_return( IGNORE_THREAD, statement, SQL_ERROR );
+            return function_return_nodrv( IGNORE_THREAD, statement, SQL_ERROR );
         }
 #else 
-        return function_return( IGNORE_THREAD, statement, SQL_ERROR );
+        return function_return_nodrv( IGNORE_THREAD, statement, SQL_ERROR );
 #endif
     }
 
@@ -184,6 +184,33 @@
 
     if ( SQL_SUCCEEDED( ret ))
     {
+        if (ret == SQL_SUCCESS_WITH_INFO )
+        {
+            SQLULEN nRecs = 0;
+            SQLSMALLINT len;
+            SQLRETURN ret2 = statement->connection->unicode_driver && CHECK_SQLGETDIAGFIELDW( statement->connection ) ?
+                SQLGETDIAGFIELDW ( statement -> connection,  SQL_HANDLE_STMT, statement->driver_stmt, 0, SQL_DIAG_NUMBER, &nRecs, 0, &len ) :
+                SQLGETDIAGFIELD( statement -> connection, SQL_HANDLE_STMT, statement->driver_stmt, 0, SQL_DIAG_NUMBER, &nRecs, 0, &len);
+            if ( SQL_SUCCEEDED( ret2 ) && nRecs )
+            {
+                SQLSMALLINT recNo = 1;
+                while (nRecs--)
+                {
+                    SQLCHAR state[12]; /* use the same buffer for both, length must be long enough to hold 5 SQLWCHARs + NULL */
+                    ret2 = statement->connection->unicode_driver && CHECK_SQLGETDIAGRECW( statement->connection ) ?
+                        SQLGETDIAGRECW( statement->connection, SQL_HANDLE_STMT, statement->driver_stmt, recNo, (SQLWCHAR*)state, NULL, NULL, 0, NULL ) :
+                        SQLGETDIAGREC( statement->connection, SQL_HANDLE_STMT, statement->driver_stmt, recNo, state, NULL, NULL, 0, NULL ) ;
+                    if ( SQL_SUCCEEDED( ret2 ) && (statement->connection->unicode_driver ?
+                        !memcmp(state, "0\0001\000S\0000\0005\0", 10) : !memcmp(state, "01S05", 5)) )
+                    {
+                        ret = SQL_SUCCESS;
+                        break;
+                    }
+                    recNo++;
+                }
+            }
+        }
+    
         if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
             statement -> state == STATE_S10 ||
diff -Naur orig/DriverManager/SQLCancelHandle.c patched/DriverManager/SQLCancelHandle.c
--- orig/DriverManager/SQLCancelHandle.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLCancelHandle.c	2017-09-23 17:45:53.127070568 +0200
@@ -99,14 +99,14 @@
 #if defined( HAVE_LIBPTH ) || defined( HAVE_LIBPTHREAD ) || defined( HAVE_LIBTHREAD )
                     if ( statement -> connection -> protection_level == 3 ) 
                     {
-                        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
                     }
                     else 
                     {
-                        return function_return( IGNORE_THREAD, statement, SQL_ERROR );
+                        return function_return_nodrv( IGNORE_THREAD, statement, SQL_ERROR );
                     }
 #else 
-                    return function_return( IGNORE_THREAD, statement, SQL_ERROR );
+                    return function_return_nodrv( IGNORE_THREAD, statement, SQL_ERROR );
 #endif
                 }
 
@@ -268,7 +268,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( IGNORE_THREAD, connection, SQL_ERROR );
+                    return function_return_nodrv( IGNORE_THREAD, connection, SQL_ERROR );
                 }
 
                 ret = SQLCANCELHANDLE( connection, SQL_HANDLE_DBC,
diff -Naur orig/DriverManager/SQLCloseCursor.c patched/DriverManager/SQLCloseCursor.c
--- orig/DriverManager/SQLCloseCursor.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLCloseCursor.c	2017-09-23 17:45:53.111070377 +0200
@@ -163,7 +163,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -184,7 +184,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( !CHECK_SQLCLOSECURSOR( statement -> connection ))
@@ -201,7 +201,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else
         {
diff -Naur orig/DriverManager/SQLColAttribute.c patched/DriverManager/SQLColAttribute.c
--- orig/DriverManager/SQLColAttribute.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColAttribute.c	2017-09-23 17:45:53.059069755 +0200
@@ -254,6 +254,7 @@
     DMHSTMT statement = (DMHSTMT) statement_handle;
     SQLRETURN ret = 0;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStringAttr;
 
     /*
      * check statement
@@ -313,7 +314,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLCOLATTRIBUTE );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
@@ -347,7 +348,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     /* MS Driver manager passes this to driver
     else if ( statement -> state == STATE_S2 &&
@@ -378,7 +379,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -397,7 +398,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -415,15 +416,61 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
+    switch( field_identifier )
+    {
+        case SQL_DESC_AUTO_UNIQUE_VALUE:
+        case SQL_DESC_CASE_SENSITIVE:
+        case SQL_DESC_CONCISE_TYPE:
+        case SQL_DESC_COUNT:
+        case SQL_DESC_DISPLAY_SIZE:
+        case SQL_DESC_FIXED_PREC_SCALE:
+        case SQL_DESC_LENGTH:
+        case SQL_DESC_NULLABLE:
+        case SQL_DESC_NUM_PREC_RADIX:
+        case SQL_DESC_OCTET_LENGTH:
+        case SQL_DESC_PRECISION:
+        case SQL_DESC_SCALE:
+        case SQL_DESC_SEARCHABLE:
+        case SQL_DESC_TYPE:
+        case SQL_DESC_UNNAMED:
+        case SQL_DESC_UNSIGNED:
+        case SQL_DESC_UPDATABLE:
+            isStringAttr = 0;
+            break;
+        case SQL_COLUMN_QUALIFIER_NAME:
+        case SQL_COLUMN_NAME:
+        case SQL_COLUMN_LABEL:
+        case SQL_COLUMN_OWNER_NAME:
+        case SQL_COLUMN_TABLE_NAME:
+        case SQL_COLUMN_TYPE_NAME:
+        case SQL_DESC_BASE_COLUMN_NAME:
+        case SQL_DESC_BASE_TABLE_NAME:
+        case SQL_DESC_LITERAL_PREFIX:
+        case SQL_DESC_LITERAL_SUFFIX:
+        case SQL_DESC_LOCAL_TYPE_NAME:
+        case SQL_DESC_NAME:
+            if ( buffer_length < 0 && buffer_length != SQL_NTS )
+            {
+                __post_internal_error( &statement -> error,
+                    ERROR_HY090, NULL,
+                    statement -> connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            }
+        default:
+            isStringAttr = buffer_length >= 0;
+            break;
+    }
+
     if ( statement -> connection -> unicode_driver )
     {
         if ( !CHECK_SQLCOLATTRIBUTEW( statement -> connection ))
         {
-            if (( ret = CHECK_SQLCOLATTRIBUTESW( statement -> connection )))
+            if ( CHECK_SQLCOLATTRIBUTESW( statement -> connection ))
             {
                 SQLWCHAR *s1 = NULL;
 
@@ -511,35 +558,19 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
         {
             SQLWCHAR *s1 = NULL;
 
-            switch( field_identifier )
-            {
-              case SQL_DESC_BASE_COLUMN_NAME:
-              case SQL_DESC_BASE_TABLE_NAME:
-              case SQL_DESC_CATALOG_NAME:
-              case SQL_DESC_LABEL:
-              case SQL_DESC_LITERAL_PREFIX:
-              case SQL_DESC_LITERAL_SUFFIX:
-              case SQL_DESC_LOCAL_TYPE_NAME:
-              case SQL_DESC_NAME:
-              case SQL_DESC_SCHEMA_NAME:
-              case SQL_DESC_TABLE_NAME:
-              case SQL_DESC_TYPE_NAME:
-              case SQL_COLUMN_NAME:
-                if ( SQL_SUCCEEDED( ret ) && character_attribute && buffer_length > 0 )
+            SQLSMALLINT unibuf_len;
+            if ( isStringAttr && character_attribute && buffer_length > 0 )
                 {
                     s1 = calloc( sizeof( SQLWCHAR ) * ( buffer_length + 1 ), 1);
-                }
-                break;
-
-              default:
-                break;
+                /* Do not overflow, since SQLSMALLINT can only hold -32768 <= x <= 32767 */
+                unibuf_len = buffer_length > 16383 ? buffer_length : sizeof( SQLWCHAR ) * buffer_length;
             }
 
             ret = SQLCOLATTRIBUTEW( statement -> connection,
@@ -547,36 +578,45 @@
                     column_number,
                     field_identifier,
                     s1 ? s1 : character_attribute,
-                    buffer_length,
+                    s1 ? unibuf_len : buffer_length,
                     string_length,
                     numeric_attribute );
 
-            switch( field_identifier )
+            if ( SQL_SUCCEEDED( ret ) && isStringAttr && buffer_length > 0 )
+            {
+                if ( character_attribute && s1 )
             {
+                    unicode_to_ansi_copy( character_attribute, buffer_length, s1, SQL_NTS, statement -> connection, NULL );
+                }
+                /*
+                    BUGBUG: Windows DM returns the number of bytes for the Unicode string
+                    but only for certain ODBC-defined string fields, and when truncating
+                */
+                switch ( field_identifier )
+                {
+                case SQL_COLUMN_QUALIFIER_NAME:
+                case SQL_COLUMN_NAME:
+                case SQL_COLUMN_LABEL:
+                case SQL_COLUMN_OWNER_NAME:
+                case SQL_COLUMN_TABLE_NAME:
+                case SQL_COLUMN_TYPE_NAME:
               case SQL_DESC_BASE_COLUMN_NAME:
               case SQL_DESC_BASE_TABLE_NAME:
-              case SQL_DESC_CATALOG_NAME:
-              case SQL_DESC_LABEL:
               case SQL_DESC_LITERAL_PREFIX:
               case SQL_DESC_LITERAL_SUFFIX:
               case SQL_DESC_LOCAL_TYPE_NAME:
               case SQL_DESC_NAME:
-              case SQL_DESC_SCHEMA_NAME:
-              case SQL_DESC_TABLE_NAME:
-              case SQL_DESC_TYPE_NAME:
-              case SQL_COLUMN_NAME:
-                if ( SQL_SUCCEEDED( ret ) && character_attribute && s1 )
-                {
-                    unicode_to_ansi_copy( character_attribute, buffer_length, s1, SQL_NTS, statement -> connection, NULL );
-                }
-				if ( SQL_SUCCEEDED( ret ) && string_length ) 
+                    if ( ret == SQL_SUCCESS && string_length )
+                    {
+                        *string_length /= sizeof( SQLWCHAR );	
+                    }
+                    break;
+                default:
+                    if ( string_length )
 				{
 					*string_length /= sizeof( SQLWCHAR );	
 				}
-                break;
-
-              default:
-                break;
+                }
             }
 
             if ( s1 )
@@ -621,7 +661,7 @@
                 __post_internal_error( &statement -> error,
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
diff -Naur orig/DriverManager/SQLColAttributes.c patched/DriverManager/SQLColAttributes.c
--- orig/DriverManager/SQLColAttributes.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColAttributes.c	2017-09-23 17:45:53.063069803 +0200
@@ -241,6 +241,7 @@
     DMHSTMT statement = (DMHSTMT) statement_handle;
     SQLRETURN ret;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStringAttr;
 
     /*
      * check statement
@@ -287,7 +288,7 @@
 
     if ( column_number == 0 &&
             statement -> bookmarks_on == SQL_UB_OFF && statement -> connection -> bookmarks_on == SQL_UB_OFF &&
-            field_identifier != SQL_DESC_COUNT )
+            field_identifier != SQL_COLUMN_COUNT )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -298,9 +299,10 @@
         __post_internal_error_api( &statement -> error,
                 ERROR_07009, NULL,
                 statement -> connection -> environment -> requested_version,
+                
                 SQL_API_SQLCOLATTRIBUTES );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
@@ -340,7 +342,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     /*
     else if ( statement -> state == STATE_S2 &&
@@ -371,7 +373,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -390,7 +392,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -408,10 +410,46 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
+    switch( field_identifier )
+    {
+        case SQL_COLUMN_AUTO_INCREMENT:
+        case SQL_COLUMN_CASE_SENSITIVE:
+        case SQL_COLUMN_COUNT:
+        case SQL_COLUMN_DISPLAY_SIZE:
+        case SQL_COLUMN_LENGTH:
+        case SQL_COLUMN_MONEY:
+        case SQL_COLUMN_NULLABLE:
+        case SQL_COLUMN_PRECISION:
+        case SQL_COLUMN_SCALE:
+        case SQL_COLUMN_SEARCHABLE:
+        case SQL_COLUMN_TYPE:
+        case SQL_COLUMN_UNSIGNED:
+        case SQL_COLUMN_UPDATABLE:
+            isStringAttr = 0;
+            break;
+        case SQL_COLUMN_LABEL:
+        case SQL_COLUMN_NAME:
+        case SQL_COLUMN_OWNER_NAME:
+        case SQL_COLUMN_QUALIFIER_NAME:
+        case SQL_COLUMN_TABLE_NAME:
+        case SQL_COLUMN_TYPE_NAME:
+            if ( buffer_length < 0 )
+            {
+                __post_internal_error( &statement -> error,
+                    ERROR_HY090, NULL,
+                    statement -> connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            }
+        default:
+            isStringAttr = buffer_length >= 0;
+            break;
+    }
+
     if ( statement -> connection -> unicode_driver )
     {
         if ( !CHECK_SQLCOLATTRIBUTESW( statement -> connection ))
@@ -419,16 +457,18 @@
             if ( CHECK_SQLCOLATTRIBUTEW( statement -> connection ))
             {
                 SQLWCHAR *s1 = NULL;
-
+                SQLSMALLINT unibuf_len;
                 /*
                  * map to the ODBC3 function
                  */
 
                 field_identifier = map_ca_odbc2_to_3( field_identifier );
 
-                if ( character_attribute && buffer_length > 0 )
+                if ( isStringAttr && character_attribute && buffer_length > 0 )
                 {
                     s1 = calloc( sizeof( SQLWCHAR ) * ( buffer_length + 1 ), 1);
+                    /* Do not overflow, since SQLSMALLINT can only hold -32768 <= x <= 32767 */
+                    unibuf_len = buffer_length > 16383 ? buffer_length : sizeof( SQLWCHAR ) * buffer_length;
                 }
 
                 ret = SQLCOLATTRIBUTEW( statement -> connection,
@@ -436,18 +476,18 @@
                     column_number,
                     field_identifier,
                     s1 ? s1 : character_attribute,
-                    buffer_length,
+                    s1 ? unibuf_len : buffer_length,
                     string_length,
                     numeric_attribute );
 
-                if ( SQL_SUCCEEDED( ret ) && character_attribute && s1 )
+                if ( SQL_SUCCEEDED( ret ) && isStringAttr && character_attribute && buffer_length > 0 && s1 )
                 {
+                    if ( string_length && ret == SQL_SUCCESS )
+                    {
+                        *string_length /= sizeof ( SQLWCHAR );
+                    }
                     unicode_to_ansi_copy( character_attribute, buffer_length, s1, SQL_NTS, statement -> connection, NULL );
                 }
-				if ( SQL_SUCCEEDED( ret ) && string_length && character_attribute ) 
-				{
-					*string_length = strlen(character_attribute);
-				}
 
                 if ( s1 )
                 {
@@ -466,7 +506,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
@@ -535,7 +575,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
diff -Naur orig/DriverManager/SQLColAttributesW.c patched/DriverManager/SQLColAttributesW.c
--- orig/DriverManager/SQLColAttributesW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColAttributesW.c	2017-09-23 17:45:53.063069803 +0200
@@ -199,7 +199,7 @@
 
     if ( column_number == 0 &&
             statement -> bookmarks_on == SQL_UB_OFF && statement -> connection -> bookmarks_on == SQL_UB_OFF &&
-            field_identifier != SQL_DESC_COUNT )
+            field_identifier != SQL_COLUMN_COUNT )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -212,7 +212,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLCOLATTRIBUTES );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
@@ -252,7 +252,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S2 &&
             field_identifier != SQL_DESC_COUNT )
@@ -267,7 +267,7 @@
                 ERROR_07005, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S4 )
     {
@@ -281,7 +281,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -300,7 +300,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -318,10 +318,28 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
+    switch ( field_identifier )
+    {
+        case SQL_COLUMN_LABEL:
+        case SQL_COLUMN_NAME:
+        case SQL_COLUMN_OWNER_NAME:
+        case SQL_COLUMN_QUALIFIER_NAME:
+        case SQL_COLUMN_TABLE_NAME:
+        case SQL_COLUMN_TYPE_NAME:
+            if ( buffer_length < 0 && buffer_length != SQL_NTS )
+            {
+                __post_internal_error( &statement -> error,
+                    ERROR_HY090, NULL,
+                    statement -> connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            }
+    }
+
     if ( statement -> connection -> unicode_driver || 
 			    CHECK_SQLCOLATTRIBUTESW( statement -> connection ) || 
 			    CHECK_SQLCOLATTRIBUTEW( statement -> connection ))
@@ -357,7 +375,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
@@ -465,7 +483,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
diff -Naur orig/DriverManager/SQLColAttributeW.c patched/DriverManager/SQLColAttributeW.c
--- orig/DriverManager/SQLColAttributeW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColAttributeW.c	2017-09-23 17:45:53.059069755 +0200
@@ -176,7 +176,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLCOLATTRIBUTE );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/*
@@ -210,7 +210,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     /*
     else if ( statement -> state == STATE_S2 &&
@@ -241,7 +241,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -260,7 +260,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -278,10 +278,34 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
+    switch ( field_identifier )
+    {
+        case SQL_COLUMN_QUALIFIER_NAME:
+        case SQL_COLUMN_NAME:
+        case SQL_COLUMN_LABEL:
+        case SQL_COLUMN_OWNER_NAME:
+        case SQL_COLUMN_TABLE_NAME:
+        case SQL_COLUMN_TYPE_NAME:
+        case SQL_DESC_BASE_COLUMN_NAME:
+        case SQL_DESC_BASE_TABLE_NAME:
+        case SQL_DESC_LITERAL_PREFIX:
+        case SQL_DESC_LITERAL_SUFFIX:
+        case SQL_DESC_LOCAL_TYPE_NAME:
+        case SQL_DESC_NAME:
+            if ( buffer_length < 0 && buffer_length != SQL_NTS )
+            {
+                __post_internal_error( &statement -> error,
+                    ERROR_HY090, NULL,
+                    statement -> connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            }
+    }
+
     if ( statement -> connection -> unicode_driver ||
 		CHECK_SQLCOLATTRIBUTEW( statement -> connection ) ||
 		CHECK_SQLCOLATTRIBUTESW( statement -> connection ))
@@ -317,7 +341,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
@@ -418,7 +442,7 @@
                         ERROR_IM001, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
         else
diff -Naur orig/DriverManager/SQLColumnPrivileges.c patched/DriverManager/SQLColumnPrivileges.c
--- orig/DriverManager/SQLColumnPrivileges.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColumnPrivileges.c	2017-09-23 17:45:53.067069851 +0200
@@ -205,6 +205,21 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
+    if ( table_name == NULL ) 
+    {
+        dm_log_write( __FILE__, 
+                __LINE__, 
+                LOG_INFO, 
+                LOG_INFO, 
+                "Error: HY009" );
+
+        __post_internal_error( &statement -> error,
+                ERROR_HY009, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+    
     if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
             ( name_length2 < 0 && name_length2 != SQL_NTS ) ||
             ( name_length3 < 0 && name_length3 != SQL_NTS ) ||
@@ -220,7 +235,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -246,7 +261,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -265,7 +280,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -283,25 +298,10 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
-    if ( table_name == NULL ) 
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY009" );
-
-        __post_internal_error( &statement -> error,
-                ERROR_HY009, NULL,
-                statement -> connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
-    }
-
     /*
      * TO_DO Check the SQL_ATTR_METADATA_ID settings
      */
@@ -323,7 +323,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( catalog_name, name_length1, statement -> connection, &wlen );
@@ -369,7 +369,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLCOLUMNPRIVILEGES( statement -> connection ,
diff -Naur orig/DriverManager/SQLColumnPrivilegesW.c patched/DriverManager/SQLColumnPrivilegesW.c
--- orig/DriverManager/SQLColumnPrivilegesW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColumnPrivilegesW.c	2017-09-23 17:45:53.067069851 +0200
@@ -177,6 +177,21 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
+    if ( table_name == NULL ) 
+    {
+        dm_log_write( __FILE__, 
+                __LINE__, 
+                LOG_INFO, 
+                LOG_INFO, 
+                "Error: HY009" );
+
+        __post_internal_error( &statement -> error,
+                ERROR_HY009, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+
     if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
             ( name_length2 < 0 && name_length2 != SQL_NTS ) ||
             ( name_length3 < 0 && name_length3 != SQL_NTS ) ||
@@ -192,7 +207,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -218,7 +233,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -237,7 +252,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -255,25 +270,10 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
-    if ( table_name == NULL ) 
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY009" );
-
-        __post_internal_error( &statement -> error,
-                ERROR_HY009, NULL,
-                statement -> connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
-    }
-
     /*
      * TO_DO Check the SQL_ATTR_METADATA_ID settings
      */
@@ -293,7 +293,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLCOLUMNPRIVILEGESW( statement -> connection ,
@@ -324,7 +324,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
diff -Naur orig/DriverManager/SQLColumns.c patched/DriverManager/SQLColumns.c
--- orig/DriverManager/SQLColumns.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColumns.c	2017-09-23 17:45:53.067069851 +0200
@@ -220,10 +220,10 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
-            ( name_length2 < 0 && name_length2 != SQL_NTS ) ||
-            ( name_length3 < 0 && name_length3 != SQL_NTS ) ||
-            ( name_length4 < 0 && name_length4 != SQL_NTS ))
+    if (( catalog_name && name_length1 < 0 && name_length1 != SQL_NTS ) ||
+            ( schema_name && name_length2 < 0 && name_length2 != SQL_NTS ) ||
+            ( table_name && name_length3 < 0 && name_length3 != SQL_NTS ) ||
+            ( column_name && name_length4 < 0 && name_length4 != SQL_NTS ))
     {
         dm_log_write( __FILE__,
                 __LINE__,
@@ -235,7 +235,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -261,7 +261,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -280,7 +280,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -292,7 +292,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -317,7 +317,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( catalog_name, name_length1, statement -> connection, &wlen );
@@ -363,7 +363,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLCOLUMNS( statement -> connection ,
diff -Naur orig/DriverManager/SQLColumnsW.c patched/DriverManager/SQLColumnsW.c
--- orig/DriverManager/SQLColumnsW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLColumnsW.c	2017-09-23 17:45:53.067069851 +0200
@@ -175,16 +175,16 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
-            ( name_length2 < 0 && name_length2 != SQL_NTS ) ||
-            ( name_length3 < 0 && name_length3 != SQL_NTS ) ||
-            ( name_length4 < 0 && name_length4 != SQL_NTS ))
+    if (( catalog_name && name_length1 < 0 && name_length1 != SQL_NTS ) ||
+            ( schema_name && name_length2 < 0 && name_length2 != SQL_NTS ) ||
+            ( table_name && name_length3 < 0 && name_length3 != SQL_NTS ) ||
+            ( column_name && name_length4 < 0 && name_length4 != SQL_NTS ))
     {
         __post_internal_error( &statement -> error,
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -210,7 +210,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -229,7 +229,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -241,7 +241,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -264,7 +264,7 @@
                 ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLCOLUMNSW( statement -> connection ,
@@ -295,7 +295,7 @@
                 ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( catalog_name, name_length1, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLConnect.c patched/DriverManager/SQLConnect.c
--- orig/DriverManager/SQLConnect.c	2015-08-31 11:59:27.134739579 +0200
+++ patched/DriverManager/SQLConnect.c	2017-09-23 17:45:53.051069660 +0200
@@ -2435,7 +2435,7 @@
 
         mutex_lib_entry();
 
-        if ( connection -> env_list_ent )
+        if ( connection -> env_list_ent && connection -> environment )
         {
             env_lib_list = connection -> environment -> env_lib_list;
             while( env_lib_list )
@@ -2989,6 +2989,38 @@
     __clean_desc_from_dbc( &ptr -> connection );
 }
 
+/*
+ * if a environment gets released from the application, we need to remove any referenvce to that environment 
+ * in pooled connections that belong to that environment
+ */
+
+void __strip_from_pool( DMHENV env )
+{
+    time_t current_time;
+    SQLINTEGER dead;
+    CPOOL *ptr, *prev;
+    int has_checked = 0;
+
+    mutex_pool_entry();
+
+    current_time = time( NULL );
+
+    /*
+     * look in the list of connections for one that matches
+     */
+
+    for( ptr = pool_head, prev = NULL; ptr; prev = ptr, ptr = ptr -> next )
+    {
+        if ( ptr -> connection.environment == env ) {
+
+            ptr -> connection.environment = NULL;
+        }
+    }
+
+    mutex_pool_exit();
+}
+
+
 int search_for_pool( DMHDBC connection,
            SQLCHAR *server_name,
            SQLSMALLINT name_length1,
@@ -3380,6 +3412,7 @@
         connection -> state = ptr -> connection.state;
         connection -> dl_handle = ptr -> connection.dl_handle;
         connection -> functions = ptr -> connection.functions;
+        connection -> unicode_driver = ptr -> connection.unicode_driver;
         connection -> driver_env = ptr -> connection.driver_env;
         connection -> driver_dbc = ptr -> connection.driver_dbc;
         connection -> driver_version = ptr -> connection.driver_version;
@@ -3416,7 +3449,12 @@
         connection -> ex_fetch_mapping = ptr -> connection.ex_fetch_mapping;
         connection -> dont_dlclose = ptr -> connection.dont_dlclose;
         connection -> bookmarks_on = ptr -> connection.bookmarks_on;
-        connection -> environment = ptr -> connection.environment;
+
+        /*
+         * copy current environment into the pooled connection
+         */
+
+        ptr -> connection.environment = connection -> environment;
 
         strcpy( connection -> dsn, ptr -> connection.dsn );
 
@@ -3751,7 +3789,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -3769,7 +3807,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( name_length1 && server_name )
@@ -3790,7 +3828,7 @@
                         ERROR_HY090, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         else
@@ -3809,7 +3847,7 @@
                         ERROR_HY090, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
 
@@ -3828,7 +3866,7 @@
                 ERROR_IM010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else
     {
@@ -3864,7 +3902,7 @@
 
         connection -> state = STATE_C4;
 
-        return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, ret_from_connect );
     }
 
     /*
@@ -3927,7 +3965,7 @@
         connection -> password_length = name_length3;
     }
 
-    if ( !__find_lib_name( dsn, lib_name, driver_name ))
+    if ( !*dsn || !__find_lib_name( dsn, lib_name, driver_name ))
     {
         /*
          * if not found look for a default
@@ -3945,7 +3983,7 @@
                     ERROR_IM002, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -3966,7 +4004,7 @@
     {
         __disconnect_part_four( connection );       /* release unicode handles */
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( !CHECK_SQLCONNECT( connection ) &&
@@ -3984,7 +4022,7 @@
                 ERROR_IM001, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( CHECK_SQLCONNECT( connection ))
@@ -4317,7 +4355,7 @@
         ret_from_connect = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret_from_connect );
 }
 
 /*
diff -Naur orig/DriverManager/SQLConnectW.c patched/DriverManager/SQLConnectW.c
--- orig/DriverManager/SQLConnectW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLConnectW.c	2017-09-23 17:45:53.071069899 +0200
@@ -223,7 +223,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -241,7 +241,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( name_length1 && server_name )
@@ -262,7 +262,7 @@
                         ERROR_HY090, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         else
@@ -281,7 +281,7 @@
                         ERROR_HY090, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         memcpy( dsn, server_name, sizeof( dsn[ 0 ] ) * len );
@@ -299,7 +299,7 @@
                 ERROR_IM010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else
     {
@@ -317,7 +317,7 @@
 
     unicode_to_ansi_copy((char*) ansi_dsn, sizeof( ansi_dsn ), dsn, sizeof( ansi_dsn ), NULL, NULL );
 
-    if ( !__find_lib_name((char*) ansi_dsn, lib_name, driver_name ))
+    if ( !*ansi_dsn || !__find_lib_name((char*) ansi_dsn, lib_name, driver_name ))
     {
         /*
          * if not found look for a default
@@ -335,7 +335,7 @@
                     ERROR_IM002, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -355,7 +355,7 @@
     {
         __disconnect_part_four( connection );       /* release unicode handles */
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( !CHECK_SQLCONNECTW( connection ) &&
@@ -373,7 +373,7 @@
                 ERROR_IM001, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( CHECK_SQLCONNECTW( connection ))
@@ -679,5 +679,5 @@
         ret_from_connect = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret_from_connect );
 }
diff -Naur orig/DriverManager/SQLCopyDesc.c patched/DriverManager/SQLCopyDesc.c
--- orig/DriverManager/SQLCopyDesc.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLCopyDesc.c	2017-09-23 17:45:53.071069899 +0200
@@ -228,8 +228,8 @@
                 ERROR_HY010, NULL,
                 src_descriptor -> connection -> environment -> requested_version );
 
-			function_return( SQL_HANDLE_DESC, target_descriptor, SQL_SUCCESS );
-        	return function_return( SQL_HANDLE_DESC, src_descriptor, SQL_ERROR );
+			function_return_nodrv( SQL_HANDLE_DESC, target_descriptor, SQL_SUCCESS );
+        	return function_return_nodrv( SQL_HANDLE_DESC, src_descriptor, SQL_ERROR );
     	}
 	}
 
@@ -252,17 +252,18 @@
                 ERROR_HY010, NULL,
                 target_descriptor -> connection -> environment -> requested_version );
 
-        	return function_return( IGNORE_THREAD, src_descriptor, SQL_ERROR );
+        	return function_return_nodrv( IGNORE_THREAD, src_descriptor, SQL_ERROR );
     	}
 	}
 
     /*
-     * if both descriptors are from the same connection the we can just
+     * if both descriptors are from the same driver then we can just
      * pass it on
      */
 
-    if ( src_descriptor -> connection == 
-            target_descriptor -> connection && 
+    if ( (src_descriptor -> connection == target_descriptor -> connection ||
+          !strcmp(src_descriptor -> connection -> dl_name,
+                  target_descriptor -> connection -> dl_name) ) && 
             CHECK_SQLCOPYDESC( src_descriptor -> connection ))
     {
         SQLRETURN ret;
@@ -279,7 +280,7 @@
 
         if ( log_info.log_flag )
         {
-            sprintf( src_descriptor -> msg, 
+            sprintf( target_descriptor -> msg, 
                     "\n\t\tExit:[%s]",
                         __get_return_status( ret, s1 ));
 
@@ -287,10 +288,10 @@
                     __LINE__, 
                     LOG_INFO, 
                     LOG_INFO, 
-                    src_descriptor -> msg );
+                    target_descriptor -> msg );
         }
 
-        return function_return( IGNORE_THREAD, src_descriptor, ret );
+        return function_return( IGNORE_THREAD, target_descriptor, ret );
     }
     else
     {
@@ -328,7 +329,7 @@
             else
                 thread_release( SQL_HANDLE_ENV, src_descriptor -> connection -> environment );
 
-            return function_return( IGNORE_THREAD, target_descriptor, SQL_ERROR );
+            return function_return_nodrv( IGNORE_THREAD, target_descriptor, SQL_ERROR );
         }
 
         /*
diff -Naur orig/DriverManager/SQLDataSources.c patched/DriverManager/SQLDataSources.c
--- orig/DriverManager/SQLDataSources.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLDataSources.c	2017-09-23 17:45:53.119070472 +0200
@@ -219,7 +219,7 @@
                 ERROR_HY010, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( buffer_length1 < 0 || buffer_length2 < 0 )
@@ -234,7 +234,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( direction != SQL_FETCH_FIRST &&
@@ -252,7 +252,7 @@
                 ERROR_HY103, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     /*
@@ -292,6 +292,7 @@
                 environment -> entry,
                 object, sizeof( object )) != INI_SUCCESS )
     {
+        environment -> entry = 0;
         ret = SQL_NO_DATA;
     }
     else
@@ -397,5 +398,5 @@
                 environment -> msg );
     }
 
-    return function_return( SQL_HANDLE_ENV, environment, ret );
+    return function_return_nodrv( SQL_HANDLE_ENV, environment, ret );
 }
diff -Naur orig/DriverManager/SQLDataSourcesW.c patched/DriverManager/SQLDataSourcesW.c
--- orig/DriverManager/SQLDataSourcesW.c	2014-05-09 23:10:45.134739579 +0200
+++ patched/DriverManager/SQLDataSourcesW.c	2017-09-23 17:45:53.083070042 +0200
@@ -143,7 +143,7 @@
                 ERROR_HY010, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( buffer_length1 < 0 || buffer_length2 < 0 )
@@ -158,7 +158,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( direction != SQL_FETCH_FIRST &&
@@ -176,7 +176,7 @@
                 ERROR_HY103, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     /*
@@ -216,6 +216,7 @@
                 environment -> entry,
                 object, sizeof( object )) != INI_SUCCESS )
     {
+        environment -> entry = 0;
         ret = SQL_NO_DATA;
     }
     else
@@ -325,5 +326,5 @@
                 environment -> msg );
     }
 
-    return function_return( SQL_HANDLE_ENV, environment, ret );
+    return function_return_nodrv( SQL_HANDLE_ENV, environment, ret );
 }
diff -Naur orig/DriverManager/SQLDescribeCol.c patched/DriverManager/SQLDescribeCol.c
--- orig/DriverManager/SQLDescribeCol.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDescribeCol.c	2017-09-23 17:45:53.115070424 +0200
@@ -266,7 +266,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLDESCRIBECOL );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -294,7 +294,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -319,7 +319,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     /* 
      * This seems to be down to the driver in the MS DM
@@ -351,7 +351,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -367,7 +367,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -385,7 +385,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -405,7 +405,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( column_name && buffer_length > 0 )
@@ -448,7 +448,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLDESCRIBECOL( statement -> connection,
diff -Naur orig/DriverManager/SQLDescribeColW.c patched/DriverManager/SQLDescribeColW.c
--- orig/DriverManager/SQLDescribeColW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDescribeColW.c	2017-09-23 17:45:53.159070950 +0200
@@ -228,7 +228,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLDESCRIBECOL );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -256,7 +256,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -281,7 +281,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     /* 
      * This seems to be down to the driver in the MS DM
@@ -313,7 +313,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -329,7 +329,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -347,7 +347,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -366,7 +366,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLDESCRIBECOLW( statement -> connection,
@@ -396,7 +396,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( buffer_length > 0 && column_name )
diff -Naur orig/DriverManager/SQLDescribeParam.c patched/DriverManager/SQLDescribeParam.c
--- orig/DriverManager/SQLDescribeParam.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDescribeParam.c	2017-09-23 17:45:53.075069946 +0200
@@ -202,7 +202,7 @@
                 ERROR_07009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -221,12 +221,9 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if (( statement -> state == STATE_S4 ||
-            statement -> state == STATE_S5 ||
-            statement -> state == STATE_S6 ||
-            statement -> state == STATE_S7 ||
             statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
             statement -> state == STATE_S10 ||
@@ -245,7 +242,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if (( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -265,7 +262,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S11 ||
             statement -> state == STATE_S12 )
@@ -282,7 +279,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -298,7 +295,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLDESCRIBEPARAM( statement -> connection,
diff -Naur orig/DriverManager/SQLDisconnect.c patched/DriverManager/SQLDisconnect.c
--- orig/DriverManager/SQLDisconnect.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDisconnect.c	2017-09-23 17:45:53.127070568 +0200
@@ -229,7 +229,7 @@
                 ERROR_25000, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C2 )
     {
@@ -243,7 +243,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -262,7 +262,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if( __check_stmt_from_dbc( connection, STATE_S13 )) {
@@ -277,7 +277,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -304,7 +304,7 @@
                     connection -> msg );
         }
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else if ( pooling_enabled && connection -> pooling_timeout > 0 ) 
     {
@@ -326,7 +326,7 @@
                     connection -> msg );
         }
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
 
     /*
@@ -345,7 +345,7 @@
                 ERROR_IM001, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     ret = SQLDISCONNECT( connection,
diff -Naur orig/DriverManager/SQLDriverConnect.c patched/DriverManager/SQLDriverConnect.c
--- orig/DriverManager/SQLDriverConnect.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDriverConnect.c	2017-09-23 17:45:53.087070090 +0200
@@ -333,10 +333,28 @@
     cp = con_str -> list;
     while( cp )
     {
-        tmp = malloc( strlen( cp -> keyword ) + strlen( cp -> attribute ) + 10 );
-        if( strcasecmp( cp -> keyword, "DRIVER" ) == 0 )
-        {
-            sprintf( tmp, "%s={%s};", cp -> keyword, cp -> attribute );
+        size_t attrlen = strlen( cp -> attribute );
+        int use_esc = isspace( *(cp -> attribute ) ) || attrlen && isspace( cp->attribute[attrlen - 1] );
+        for ( tmp = cp -> attribute; *tmp; tmp++ )
+        {
+            use_esc |= (*tmp == '{') || (*tmp == '}');
+            attrlen += (*tmp == '}');
+        }
+        tmp = malloc( strlen( cp -> keyword ) + attrlen + 10 );
+        if( use_esc )
+        {
+            char *tmp2 = tmp + sprintf( tmp, "%s={", cp -> keyword );
+            char *tmp3;
+            for( tmp3 = cp -> attribute; *tmp3 ; tmp3++ )
+            {
+                *tmp2++ = *tmp3;
+                if ( '}' == *tmp3++ )
+                {
+                    *tmp2++ = '}';
+                }
+            }
+            *tmp2++ = '}';
+            *tmp2++ = 0;
         }
         else
         {
@@ -364,17 +382,22 @@
 
     *keyword = *value = NULL;
 
-    ptr = *cp;
+    while ( isspace( **cp ) || **cp == ';' )
+    {
+        (*cp)++;
+    }
 
     if ( !**cp )
         return;
 
+    ptr = *cp;
+
     /* 
      * To handle the case attribute in which the attribute is of the form
      * "ATTR;" instead of "ATTR=VALUE;"
      */
 
-    while ( **cp && **cp != ';' && **cp != '=' )
+    while ( **cp && **cp != '=' )
     {
         (*cp)++;
     }
@@ -387,51 +410,48 @@
     memcpy( *keyword, ptr, len );
     (*keyword)[ len ] = '\0';
 
-    if (**cp != ';') {
 		(*cp)++;
-	}
-
-    ptr = *cp;
 
-    if ( strcasecmp( *keyword, "DRIVER" ) == 0 )
+    if ( **cp == '{' )
     {
-        if ( **cp && **cp == '{' )
+        /* escaped with '{' - all characters until next '}' not followed by '}', or
+           end of string, are part of the value */
+        int i = 0;
+        ptr = ++*cp;
+        while ( **cp && (**cp != '}' || (*cp)[1] == '}') )
         {
+            if ( **cp == '}' )
             (*cp)++;
-            ptr ++;
-            while ( **cp && **cp != '}' )
                 (*cp)++;
-
+        }
             len = *cp - ptr;
             *value = malloc( len + 1 );
-            memcpy( *value, ptr , len );
-            (*value)[ len ] = '\0';
-            (*cp)++;
+        while( ptr < *cp )
+        {
+            if ( ((*value)[i++] = *ptr++) == '}')
+            {
+                ptr++;
         }
-        else
+        }
+        (*value)[i] = 0;
+        if ( **cp == '}' )
         {
-            while ( **cp && **cp != ';' )
                 (*cp)++;
-
-            len = *cp - ptr;
-            *value = malloc( len + 1 );
-            memcpy( *value, ptr, len );
-            (*value)[ len ] = '\0';
         }
     }
     else
     {
+        /* non-escaped: all characters until ';' or end of string are value */
+        ptr = *cp;
         while ( **cp && **cp != ';' )
+        {
             (*cp)++;
-
+        }
         len = *cp - ptr;
         *value = malloc( len + 1 );
         memcpy( *value, ptr, len );
-        (*value)[ len ] = '\0';
+        (*value)[ len ] = 0;
     }
-
-    if ( **cp )
-        (*cp)++;
 }
 
 struct con_pair * __get_pair( char ** cp )
@@ -1123,6 +1143,7 @@
                                         ERROR_01004, NULL,
                                         connection -> environment -> requested_version );
                             }
+                            free( str1 );
                         }
                         cp = cp -> next;
                     }
@@ -1142,6 +1163,10 @@
             __parse_connection_string( &con_struct,
                     (char*)conn_str_in, len_conn_str_in );
         }
+        else
+        {
+            save_filedsn = NULL;
+        }
     }
     else
     {
@@ -1387,7 +1412,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex( &connection -> error,
+                        __post_internal_error_ex_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -1420,7 +1445,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex( &connection -> error,
+                        __post_internal_error_ex_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -1534,7 +1559,7 @@
                     {
                         SQLCHAR *as1, *as2;
 
-                        __post_internal_error_ex_w( &connection -> error,
+                        __post_internal_error_ex_w_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -1575,7 +1600,7 @@
                     {
                         SQLCHAR *as1, *as2;
 
-                        __post_internal_error_ex_w( &connection -> error,
+                        __post_internal_error_ex_w_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -1620,6 +1645,11 @@
                 free( save_filedsn );
             }
 
+            if ( s1 )
+            {
+                free( s1 );
+            }
+
             return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
         }
         else
@@ -1812,5 +1842,5 @@
         ret_from_connect = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret_from_connect );
 }
diff -Naur orig/DriverManager/SQLDriverConnectW.c patched/DriverManager/SQLDriverConnectW.c
--- orig/DriverManager/SQLDriverConnectW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLDriverConnectW.c	2017-09-23 17:45:53.087070090 +0200
@@ -152,7 +152,7 @@
         local_str = malloc( len + 1 );
     }
 
-    unicode_to_ansi_copy( local_str, len, str, len, NULL, NULL );
+    unicode_to_ansi_copy( local_str, len+1, str, len, NULL, NULL );
 
     if ( !local_str || strlen( local_str ) == 0 ||
         ( strlen( local_str ) == 1 && *local_str == ';' ))
@@ -643,7 +643,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex_w( &connection -> error,
+                        __post_internal_error_ex_w_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -671,7 +671,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex_w( &connection -> error,
+                        __post_internal_error_ex_w_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -792,7 +792,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex( &connection -> error,
+                        __post_internal_error_ex_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -819,7 +819,7 @@
 
                     if ( SQL_SUCCEEDED( ret ))
                     {
-                        __post_internal_error_ex( &connection -> error,
+                        __post_internal_error_ex_noprefix( &connection -> error,
                                 sqlstate,
                                 native_error,
                                 message_text,
@@ -920,5 +920,5 @@
         ret_from_connect = SQL_SUCCESS_WITH_INFO;
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret_from_connect );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret_from_connect );
 }
diff -Naur orig/DriverManager/SQLDrivers.c patched/DriverManager/SQLDrivers.c
--- orig/DriverManager/SQLDrivers.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLDrivers.c	2017-09-23 17:45:53.091070138 +0200
@@ -244,7 +244,7 @@
      * check that a version has been requested
      */
 
-    if ( environment -> requested_version == 0 )
+    if ( ! environment -> version_set )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -256,7 +256,7 @@
                 ERROR_HY010, NULL,
                 SQL_OV_ODBC3 );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( cb_driver_desc_max < 0 )
@@ -271,7 +271,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( cb_drvr_attr_max < 0
@@ -287,7 +287,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( fdirection != SQL_FETCH_FIRST &&
@@ -303,7 +303,7 @@
                 ERROR_HY103, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( fdirection == SQL_FETCH_FIRST )
@@ -373,9 +373,10 @@
             char buffer[ 1024 ];
             int total_len = 0;
 			char b1[ 256 ], b2[ 256 ];
+            int found = 0;
 
             /*
-             * enumerate the driver attributes
+             * enumerate the driver attributes, first in system odbcinst.ini and if not found in user odbcinst.ini
              */
 
             sprintf( szIniName, "%s/%s", odbcinst_system_file_path( b1 ), odbcinst_system_file_name( b2 ));
@@ -398,6 +399,8 @@
                     sprintf( buffer, "%s=%s", szPropertyName, 
                             szValue );
 
+                    found = 1;
+
                     if ( sz_driver_attributes ) {
 
                         if ( total_len + strlen( buffer ) + 1 > cb_drvr_attr_max )
@@ -427,6 +430,60 @@
 
                 iniClose( hIni );
             }
+
+            if ( !found ) 
+            {
+
+                sprintf( szIniName, "%s/%s", odbcinst_user_file_path( b1 ), odbcinst_user_file_name( b2 ));
+
+                memset( buffer, '\0', sizeof( buffer ));
+    #ifdef __OS2__
+                if ( iniOpen( &hIni, szIniName, "#;", '[', ']', '=', FALSE, 1L ) == 
+                        INI_SUCCESS )
+    #else
+                if ( iniOpen( &hIni, szIniName, "#;", '[', ']', '=', FALSE ) == 
+                        INI_SUCCESS )
+    #endif
+                {
+                    iniObjectSeek( hIni, (char *)object );
+                    iniPropertyFirst( hIni );
+                    while ( iniPropertyEOL( hIni ) != TRUE )
+                    {
+                        iniProperty( hIni, szPropertyName );
+                        iniValue( hIni, szValue );
+                        sprintf( buffer, "%s=%s", szPropertyName, 
+                                szValue );
+
+                        if ( sz_driver_attributes ) {
+
+                            if ( total_len + strlen( buffer ) + 1 > cb_drvr_attr_max )
+                            {
+                                ret = SQL_SUCCESS_WITH_INFO;
+                            }
+                            else
+                            {
+                                strcpy((char*) sz_driver_attributes, buffer );
+                                sz_driver_attributes += strlen( buffer ) + 1;
+                            }
+                        }
+                        total_len += strlen( buffer ) + 1;
+
+                        iniPropertyNext( hIni );
+                    }
+                    /*
+                     * add extra null 
+                     */
+                    if ( sz_driver_attributes )
+                        *sz_driver_attributes = '\0';
+
+                    if ( pcb_drvr_attr )
+                    {
+                        *pcb_drvr_attr = total_len;
+                    }
+
+                    iniClose( hIni );
+                }
+            }
 		}
 	}
 
@@ -456,5 +513,5 @@
                 environment -> msg );
     }
 
-    return function_return( SQL_HANDLE_ENV, environment, ret );
+    return function_return_nodrv( SQL_HANDLE_ENV, environment, ret );
 }
diff -Naur orig/DriverManager/SQLDriversW.c patched/DriverManager/SQLDriversW.c
--- orig/DriverManager/SQLDriversW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLDriversW.c	2017-09-23 17:45:53.095070185 +0200
@@ -161,19 +161,19 @@
      * check that a version has been requested
      */
 
-    if ( environment -> requested_version == 0 )
+    if ( ! environment -> version_set )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
                 LOG_INFO, 
                 LOG_INFO, 
-                "Error: HY090" );
+                "Error: HY010" );
 
         __post_internal_error( &environment -> error,
                 ERROR_HY010, NULL,
-                environment -> requested_version );
+                SQL_OV_ODBC3 );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( cb_driver_desc_max < 0 )
@@ -188,7 +188,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( cb_drvr_attr_max < 0
@@ -204,7 +204,7 @@
                 ERROR_HY090, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( fdirection != SQL_FETCH_FIRST &&
@@ -220,7 +220,7 @@
                 ERROR_HY103, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( fdirection == SQL_FETCH_FIRST )
@@ -239,7 +239,10 @@
                 environment -> sql_driver_count,
                 object, sizeof( object )) != INI_SUCCESS )
 	{
-        environment -> sql_driver_count = 0; 
+		/*
+		 * Set up for the next time
+		 */
+        environment -> sql_driver_count = -1; 
 		ret = SQL_NO_DATA;
 	}
 	else
@@ -294,9 +297,10 @@
             char buffer[ 1024 ];
             int total_len = 0;
 			char b1[ 512 ], b2[ 512 ];
+            int found = 0;
 
             /*
-             * enumerate the driver attributes
+             * enumerate the driver attributes, first in system odbcinst.ini and if not found in user odbcinst.ini
              */
 
             sprintf( szIniName, "%s/%s", odbcinst_system_file_path( b1 ), odbcinst_system_file_name( b2 ));
@@ -319,6 +323,8 @@
                     sprintf( buffer, "%s=%s", szPropertyName, 
                             szValue );
 
+                    found = 1;
+
                     if ( sz_driver_attributes ) {
 
                         if ( total_len + strlen( buffer ) + 1 > cb_drvr_attr_max )
@@ -357,6 +363,68 @@
 
                 iniClose( hIni );
             }
+
+            if ( !found ) 
+            {
+                sprintf( szIniName, "%s/%s", odbcinst_system_file_path( b1 ), odbcinst_system_file_name( b2 ));
+
+                memset( buffer, '\0', sizeof( buffer ));
+    #ifdef __OS2__
+                if ( iniOpen( &hIni, szIniName, "#;", '[', ']', '=', FALSE, 1L ) == 
+                        INI_SUCCESS )
+    #else
+                if ( iniOpen( &hIni, szIniName, "#;", '[', ']', '=', FALSE ) == 
+                        INI_SUCCESS )
+    #endif
+                {
+                    iniObjectSeek( hIni, (char *)object );
+                    iniPropertyFirst( hIni );
+                    while ( iniPropertyEOL( hIni ) != TRUE )
+                    {
+                        iniProperty( hIni, szPropertyName );
+                        iniValue( hIni, szValue );
+                        sprintf( buffer, "%s=%s", szPropertyName, 
+                                szValue );
+
+                        if ( sz_driver_attributes ) {
+
+                            if ( total_len + strlen( buffer ) + 1 > cb_drvr_attr_max )
+                            {
+                                ret = SQL_SUCCESS_WITH_INFO;
+                            }
+                            else
+                            {
+                                SQLWCHAR *s1;
+        
+                                s1 = ansi_to_unicode_alloc((SQLCHAR*) buffer, SQL_NTS, NULL, NULL );
+        
+                                if ( s1 )
+                                {
+                                    wide_strcpy( sz_driver_attributes, s1 );
+                                    free( s1 );
+                                }
+                                sz_driver_attributes += strlen( buffer ) + 1;
+                            }
+                        }
+
+                        total_len += strlen( buffer ) + 1;
+
+                        iniPropertyNext( hIni );
+                    }
+                    /*
+                     * add extra null 
+                     */
+                    if ( sz_driver_attributes )
+                        *sz_driver_attributes = '\0';
+
+                    if ( pcb_drvr_attr )
+                    {
+                        *pcb_drvr_attr = total_len;
+                    }
+
+                    iniClose( hIni );
+                }
+            }
 		}
 	}
 
@@ -386,5 +454,5 @@
                 environment -> msg );
     }
 
-    return function_return( SQL_HANDLE_ENV, environment, ret );
+    return function_return_nodrv( SQL_HANDLE_ENV, environment, ret );
 }
diff -Naur orig/DriverManager/SQLEndTran.c patched/DriverManager/SQLEndTran.c
--- orig/DriverManager/SQLEndTran.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLEndTran.c	2017-09-23 17:45:53.115070424 +0200
@@ -180,7 +180,7 @@
                     ERROR_HY092, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( handle_type == SQL_HANDLE_DESC ) {
             if ( !__validate_desc(( DMHDESC ) handle ))
@@ -208,7 +208,7 @@
                     ERROR_HY092, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
         else {
              dm_log_write( __FILE__, 
@@ -270,7 +270,7 @@
                     ERROR_HY012, NULL,
                     environment -> requested_version );
 
-            return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
         }
 
         if ( environment -> state == STATE_E2 )
@@ -298,7 +298,7 @@
                                 ERROR_HY010, NULL,
                                 environment -> requested_version );
             
-                        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
                     }
                 }
 
@@ -372,7 +372,7 @@
                                 ERROR_IM001, NULL,
                                 environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
                     }
                 }
 
@@ -435,7 +435,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         /*
@@ -454,7 +454,7 @@
                     ERROR_HY010, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( completion_type != SQL_COMMIT &&
@@ -470,7 +470,7 @@
                     ERROR_HY012, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( CHECK_SQLENDTRAN( connection ))
@@ -499,7 +499,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
 	    if( SQL_SUCCEEDED(ret) )
diff -Naur orig/DriverManager/SQLError.c patched/DriverManager/SQLError.c
--- orig/DriverManager/SQLError.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLError.c	2017-09-23 17:45:53.119070472 +0200
@@ -231,7 +231,7 @@
 
     str = unicode_to_ansi_alloc( err -> msg, SQL_NTS, connection, NULL );
 
-    if ( buffer_length < strlen( str ) + 1 )
+    if ( message_text && buffer_length < strlen( str ) + 1 )
     {
         ret = SQL_SUCCESS_WITH_INFO;
     }
diff -Naur orig/DriverManager/SQLErrorW.c patched/DriverManager/SQLErrorW.c
--- orig/DriverManager/SQLErrorW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLErrorW.c	2017-09-23 17:45:53.159070950 +0200
@@ -141,7 +141,7 @@
     {
         wide_strcpy( sqlstate, err -> sqlstate );
     }
-    if ( buffer_length < wide_strlen( err -> msg ) + 1 )
+    if ( message_text && buffer_length < wide_strlen( err -> msg ) + 1 )
     {
         ret = SQL_SUCCESS_WITH_INFO;
     }
diff -Naur orig/DriverManager/SQLExecDirect.c patched/DriverManager/SQLExecDirect.c
--- orig/DriverManager/SQLExecDirect.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLExecDirect.c	2017-09-23 17:45:53.087070090 +0200
@@ -257,7 +257,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( text_length <= 0 && text_length != SQL_NTS )
@@ -272,7 +272,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -298,7 +298,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -317,7 +317,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -335,7 +335,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -358,7 +358,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #else
         if ( !CHECK_SQLEXECDIRECTW( statement -> connection ))
@@ -373,7 +373,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #endif
 
@@ -405,7 +405,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #else
         if ( !CHECK_SQLEXECDIRECT( statement -> connection ))
@@ -420,7 +420,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #endif
 
@@ -500,10 +500,16 @@
 
         statement -> prepared = 0;
     }
-    else
+    else if ( statement -> state >= STATE_S2 && statement -> state <= STATE_S4 ||
+              statement -> state >= STATE_S11 && statement -> state <= STATE_S12 &&
+              statement -> interupted_state >= STATE_S2 && statement -> interupted_state <= STATE_S4)
     {
         statement -> state = STATE_S1;
     }
+    else if ( statement -> state >= STATE_S11 && statement -> state <= STATE_S12 )
+    {
+        statement -> state = statement -> interupted_state;
+    }
 
     if ( log_info.log_flag )
     {
diff -Naur orig/DriverManager/SQLExecDirectW.c patched/DriverManager/SQLExecDirectW.c
--- orig/DriverManager/SQLExecDirectW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLExecDirectW.c	2017-09-23 17:45:53.143070759 +0200
@@ -194,7 +194,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( text_length <= 0 && text_length != SQL_NTS )
@@ -209,7 +209,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -235,7 +235,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -251,7 +251,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -269,7 +269,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -290,7 +290,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #else
         if ( !CHECK_SQLEXECDIRECTW( statement -> connection ))
@@ -305,7 +305,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #endif
 
@@ -333,7 +333,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #else
         if ( !CHECK_SQLEXECDIRECT( statement -> connection ))
@@ -348,7 +348,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 #endif
 
@@ -407,6 +407,11 @@
         statement -> connection -> state = STATE_C6;
          */
     }
+    else if ( ret == SQL_NO_DATA )
+    {
+        statement -> state = STATE_S4;
+        statement -> prepared = 0;
+    }
     else if ( ret == SQL_NEED_DATA )
     {
         statement -> interupted_func = SQL_API_SQLEXECDIRECT;
@@ -430,10 +435,16 @@
 
         statement -> prepared = 0;
     }
-    else
+    else if ( statement -> state >= STATE_S2 && statement -> state <= STATE_S4 ||
+              statement -> state >= STATE_S11 && statement -> state <= STATE_S12 &&
+              statement -> interupted_state >= STATE_S2 && statement -> interupted_state <= STATE_S4)
     {
         statement -> state = STATE_S1;
     }
+    else if ( statement -> state >= STATE_S11 && statement -> state <= STATE_S12 )
+    {
+        statement -> state = statement -> interupted_state;
+    }
 
     if ( log_info.log_flag )
     {
diff -Naur orig/DriverManager/SQLExecute.c patched/DriverManager/SQLExecute.c
--- orig/DriverManager/SQLExecute.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLExecute.c	2017-09-23 17:45:53.131070616 +0200
@@ -230,7 +230,7 @@
                     statement -> connection -> environment -> requested_version );
         }
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S1 ||
             statement -> state == STATE_S8 ||
@@ -250,7 +250,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -268,7 +268,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -284,7 +284,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLEXECUTE( statement -> connection ,
diff -Naur orig/DriverManager/SQLExtendedFetch.c patched/DriverManager/SQLExtendedFetch.c
--- orig/DriverManager/SQLExtendedFetch.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLExtendedFetch.c	2017-09-23 17:45:53.119070472 +0200
@@ -189,7 +189,7 @@
                 ERROR_HY106, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -210,7 +210,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S4 )
@@ -225,7 +225,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S6 )
@@ -240,7 +240,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -260,7 +260,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -278,7 +278,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -294,7 +294,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLEXTENDEDFETCH( statement -> connection,
@@ -309,16 +309,25 @@
         statement -> interupted_func = SQL_API_SQLEXTENDEDFETCH;
         if ( statement -> state != STATE_S11 &&
                 statement -> state != STATE_S12 )
+        {
+            statement -> interupted_state = statement -> state;
             statement -> state = STATE_S11;
     }
+    }
     else if ( SQL_SUCCEEDED( ret ))
     {
+        statement -> eod = 0;
         statement -> state = STATE_S7;
     }
     else if ( ret == SQL_NO_DATA )
     {
+        statement -> eod = 1;
         statement -> state = STATE_S7;
     }
+    else if (statement -> state == STATE_S11 || statement -> state == STATE_S12 )
+    {
+        statement -> state = statement -> interupted_state;
+    }
 
     if ( log_info.log_flag )
     {
diff -Naur orig/DriverManager/SQLFetch.c patched/DriverManager/SQLFetch.c
--- orig/DriverManager/SQLFetch.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLFetch.c	2017-09-23 17:45:53.095070185 +0200
@@ -185,7 +185,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S4 )
@@ -200,10 +200,11 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( statement -> state == STATE_S8 ||
+    if (    statement -> state == STATE_S7 ||
+            statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
             statement -> state == STATE_S10 ||
             statement -> state == STATE_S13 ||
@@ -220,7 +221,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -238,7 +239,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -322,7 +323,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( ret == SQL_STILL_EXECUTING )
diff -Naur orig/DriverManager/SQLFetchScroll.c patched/DriverManager/SQLFetchScroll.c
--- orig/DriverManager/SQLFetchScroll.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLFetchScroll.c	2017-09-23 17:45:53.095070185 +0200
@@ -170,7 +170,9 @@
             fetch_orientation != SQL_FETCH_LAST &&
             fetch_orientation != SQL_FETCH_ABSOLUTE &&
             fetch_orientation != SQL_FETCH_RELATIVE &&
-            fetch_orientation != SQL_FETCH_BOOKMARK )
+            fetch_orientation != SQL_FETCH_BOOKMARK ||
+          (fetch_orientation == SQL_FETCH_BOOKMARK
+           && statement -> bookmarks_on == SQL_UB_OFF) )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -182,7 +184,7 @@
                 ERROR_HY106, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -203,7 +205,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S4 )
@@ -218,7 +220,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S7 )
@@ -233,7 +235,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -253,7 +255,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -271,7 +273,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -324,7 +326,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( ret == SQL_STILL_EXECUTING )
@@ -336,6 +338,7 @@
     }
     else if ( SQL_SUCCEEDED( ret ))
     {
+        statement -> eod = 0;
         statement -> state = STATE_S6;
     }
     else if ( ret == SQL_NO_DATA ) {
diff -Naur orig/DriverManager/SQLForeignKeys.c patched/DriverManager/SQLForeignKeys.c
--- orig/DriverManager/SQLForeignKeys.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLForeignKeys.c	2017-09-23 17:45:53.107070329 +0200
@@ -231,6 +231,15 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
+    if ( !szpk_table_name && !szfk_table_name )
+    {
+        __post_internal_error( &statement -> error,
+                ERROR_HY009, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+    
     if (( cbpk_catalog_name < 0 && cbpk_catalog_name != SQL_NTS ) ||
             ( cbpk_schema_name < 0 && cbpk_schema_name != SQL_NTS ) ||
             ( cbpk_table_name < 0 && cbpk_table_name != SQL_NTS ) ||
@@ -242,7 +251,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -268,7 +277,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -287,7 +296,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -305,7 +314,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -330,7 +339,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( szpk_catalog_name, cbpk_catalog_name, statement -> connection, &wlen );
@@ -388,7 +397,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLFOREIGNKEYS( statement -> connection ,
diff -Naur orig/DriverManager/SQLForeignKeysW.c patched/DriverManager/SQLForeignKeysW.c
--- orig/DriverManager/SQLForeignKeysW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLForeignKeysW.c	2017-09-23 17:45:53.039069516 +0200
@@ -190,6 +190,15 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
+    if ( !szpk_table_name && !szfk_table_name )
+    {
+        __post_internal_error( &statement -> error,
+                ERROR_HY009, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+    
     if (( cbpk_catalog_name < 0 && cbpk_catalog_name != SQL_NTS ) ||
             ( cbpk_schema_name < 0 && cbpk_schema_name != SQL_NTS ) ||
             ( cbpk_table_name < 0 && cbpk_table_name != SQL_NTS ) ||
@@ -201,7 +210,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -227,7 +236,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -246,7 +255,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -264,7 +273,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -287,7 +296,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLFOREIGNKEYSW( statement -> connection ,
@@ -322,7 +331,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( szpk_catalog_name, cbpk_catalog_name, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLFreeHandle.c patched/DriverManager/SQLFreeHandle.c
--- orig/DriverManager/SQLFreeHandle.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLFreeHandle.c	2017-09-23 17:45:53.107070329 +0200
@@ -188,6 +188,7 @@
     switch( handle_type )
     {
       case SQL_HANDLE_ENV:
+      case SQL_HANDLE_SENV:
         {
             DMHENV environment = (DMHENV)handle;
 
@@ -239,11 +240,16 @@
                         ERROR_HY010, NULL,
                         environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             thread_release( SQL_HANDLE_ENV, environment );
 
+            /*
+             * release any pooled connections that are using this environment
+             */
+            __strip_from_pool( environment );
+
             __release_env( environment );
             return SQL_SUCCESS;
         }
@@ -304,7 +310,7 @@
                         ERROR_HY010, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             environment -> connection_count --;
@@ -408,7 +414,7 @@
                           ERROR_HY010, NULL,
                           statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
 
             if ( !CHECK_SQLFREEHANDLE( statement -> connection ))
@@ -425,7 +431,7 @@
                             ERROR_IM001, NULL,
                             statement -> connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
                 }
                 else
                 {
@@ -444,16 +450,6 @@
             if ( SQL_SUCCEEDED( ret ))
             {
                 /*
-                 * break any association
-                 */
-
-                if ( statement -> ard ) {
-                    statement -> ard -> associated_with = NULL;
-                }
-                if ( statement -> apd ) {
-                    statement -> apd -> associated_with = NULL;
-                }
-                /*
                  * release the implicit descriptors, 
 				 * this matches the tests in SQLAllocHandle
                  */
@@ -545,7 +541,7 @@
 						ERROR_HY017, NULL,
 						connection -> environment -> requested_version );
 		
-				return function_return( IGNORE_THREAD, descriptor, SQL_ERROR );
+				return function_return_nodrv( IGNORE_THREAD, descriptor, SQL_ERROR );
 			}
 		
             thread_protect( SQL_HANDLE_DESC, descriptor );
@@ -562,7 +558,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
             }
             else
             {
@@ -622,7 +618,7 @@
         /*
          * there is nothing to report a error on
          */
-        return SQL_ERROR;
+        return SQL_INVALID_HANDLE;
     }
 }
 
diff -Naur orig/DriverManager/SQLFreeStmt.c patched/DriverManager/SQLFreeStmt.c
--- orig/DriverManager/SQLFreeStmt.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLFreeStmt.c	2017-09-23 17:45:53.087070090 +0200
@@ -168,7 +168,7 @@
                 ERROR_HY092, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if (  statement -> state == STATE_S8 ||
@@ -190,7 +190,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( !CHECK_SQLFREESTMT( statement -> connection ))
@@ -205,7 +205,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -227,7 +227,7 @@
                 else
                     statement -> state = STATE_S1;
             }
-            else
+            else if ( statement -> state >= STATE_S5 && statement -> state <= STATE_S7 )
             {
                 if ( statement -> prepared )
                     statement -> state = STATE_S3;
diff -Naur orig/DriverManager/SQLGetConnectAttr.c patched/DriverManager/SQLGetConnectAttr.c
--- orig/DriverManager/SQLGetConnectAttr.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetConnectAttr.c	2017-09-23 17:45:53.043069564 +0200
@@ -309,7 +309,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 )
@@ -325,7 +325,58 @@
           case SQL_ATTR_ASYNC_ENABLE:
             break;
 
+          case SQL_ATTR_PACKET_SIZE:
+            if ( connection -> packet_size_set )
+                break;
+          case SQL_ATTR_QUIET_MODE:
+            if ( connection -> quite_mode_set )
+                break;
+
           default:
+            {
+                struct save_attr *sa = connection -> save_attr;
+                while (sa)
+                {
+                    if (sa -> attr_type == attribute)
+                    {
+                        SQLRETURN rc = SQL_SUCCESS;
+                        if (sa -> str_len == SQL_NTS || sa -> str_len > 0)
+                        {
+                            SQLLEN realLen = sa->str_attr ? strlen(sa->str_attr) : 0;
+                            if(value && sa->str_attr)
+                            {
+                                strncpy(value, sa->str_attr, buffer_length - 1);
+                                ((SQLCHAR*)value)[buffer_length - 1] = 0;
+                            }
+                            if(string_length)
+                            {
+                                *string_length = realLen;
+                            }
+                            if(realLen > buffer_length - 1)
+                            {
+                                __post_internal_error( &connection -> error,
+                                ERROR_01004, NULL,
+                                connection -> environment -> requested_version );
+                                rc = SQL_SUCCESS_WITH_INFO;
+                            }
+                        }
+                        else if(buffer_length >= sizeof(SQLLEN))
+                        {
+                            *(SQLLEN*)value = sa -> int_attr;
+                            if(string_length)
+                            {
+                                *string_length = sizeof(SQLLEN);
+                            }
+                        }
+                        else
+                        {
+                            memcpy(value, &sa->int_attr, buffer_length);
+                        }
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, rc );
+                    }
+                    sa = sa -> next;
+                }
+            }
             dm_log_write( __FILE__, 
                     __LINE__, 
                     LOG_INFO, 
@@ -336,7 +387,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -556,7 +607,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, ret );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, ret );
     }
     else
     {
@@ -590,7 +641,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     switch( attribute )
@@ -643,7 +694,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
@@ -666,7 +717,7 @@
                     connection -> driver_dbc,
                     attribute,
                     s1 ? s1 : value,
-                    buffer_length,
+                    s1 ? sizeof( SQLWCHAR ) * buffer_length : buffer_length,
                     string_length );
 
                 switch( attribute )
@@ -714,7 +765,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     ret = SQLGETCONNECTOPTION( connection,
@@ -734,7 +785,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
diff -Naur orig/DriverManager/SQLGetConnectAttrW.c patched/DriverManager/SQLGetConnectAttrW.c
--- orig/DriverManager/SQLGetConnectAttrW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetConnectAttrW.c	2017-09-23 17:45:53.115070424 +0200
@@ -147,7 +147,7 @@
             }
             else
             {
-                *((SQLINTEGER*)value) = SQL_OPT_TRACE_ON;
+                *((SQLINTEGER*)value) = SQL_OPT_TRACE_OFF;
             }
         }
 
@@ -253,7 +253,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 )
@@ -269,7 +269,58 @@
           case SQL_ATTR_ASYNC_ENABLE:
             break;
 
+          case SQL_ATTR_PACKET_SIZE:
+            if ( connection -> packet_size_set )
+                break;
+          case SQL_ATTR_QUIET_MODE:
+            if ( connection -> quite_mode_set )
+                break;
+
           default:
+            {
+                struct save_attr *sa = connection -> save_attr;
+                while (sa)
+                {
+                    if (sa -> attr_type == attribute)
+                    {
+                        SQLRETURN rc = SQL_SUCCESS;
+                        if (sa -> str_len == SQL_NTS || sa -> str_len > 0)
+                        {
+                            SQLLEN realLen = sa->str_attr ? strlen(sa->str_attr) : 0;
+                            if(value && sa->str_attr)
+                            {
+                                strncpy(value, sa->str_attr, buffer_length - 1);
+                                ((SQLCHAR*)value)[buffer_length - 1] = 0;
+                            }
+                            if(string_length)
+                            {
+                                *string_length = realLen;
+                            }
+                            if(realLen > buffer_length - 1)
+                            {
+                                __post_internal_error( &connection -> error,
+                                ERROR_01004, NULL,
+                                connection -> environment -> requested_version );
+                                rc = SQL_SUCCESS_WITH_INFO;
+                            }
+                        }
+                        else if(buffer_length >= sizeof(SQLLEN))
+                        {
+                            *(SQLLEN*)value = sa -> int_attr;
+                            if(string_length)
+                            {
+                                *string_length = sizeof(SQLLEN);
+                            }
+                        }
+                        else
+                        {
+                            memcpy(value, &sa->int_attr, buffer_length);
+                        }
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, rc );
+                    }
+                    sa = sa -> next;
+                }
+            }
             dm_log_write( __FILE__, 
                     __LINE__, 
                     LOG_INFO, 
@@ -280,7 +331,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -500,7 +551,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, ret );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, ret );
     }
     else
     {
@@ -534,7 +585,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     ret = SQLGETCONNECTOPTIONW( connection,
@@ -554,7 +605,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
@@ -592,7 +643,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     switch( attribute )
@@ -644,7 +695,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
diff -Naur orig/DriverManager/SQLGetConnectOption.c patched/DriverManager/SQLGetConnectOption.c
--- orig/DriverManager/SQLGetConnectOption.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetConnectOption.c	2017-09-23 17:45:53.047069612 +0200
@@ -246,7 +246,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 )
@@ -255,6 +255,8 @@
         {
           case SQL_ACCESS_MODE:
           case SQL_AUTOCOMMIT:
+          case SQL_LOGIN_TIMEOUT:
+          case SQL_ODBC_CURSORS:
             break;
 
           default:
@@ -268,7 +270,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -344,7 +346,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -449,7 +451,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         else
@@ -510,7 +512,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
 
diff -Naur orig/DriverManager/SQLGetConnectOptionW.c patched/DriverManager/SQLGetConnectOptionW.c
--- orig/DriverManager/SQLGetConnectOptionW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetConnectOptionW.c	2017-09-23 17:45:53.115070424 +0200
@@ -215,7 +215,7 @@
                 ERROR_HY010, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 )
@@ -224,6 +224,8 @@
         {
           case SQL_ACCESS_MODE:
           case SQL_AUTOCOMMIT:
+          case SQL_LOGIN_TIMEOUT:
+          case SQL_ODBC_CURSORS:
             break;
 
           default:
@@ -237,7 +239,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -314,7 +316,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -383,7 +385,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         else
@@ -487,7 +489,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
 
diff -Naur orig/DriverManager/SQLGetCursorName.c patched/DriverManager/SQLGetCursorName.c
--- orig/DriverManager/SQLGetCursorName.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetCursorName.c	2017-09-23 17:45:53.123070520 +0200
@@ -201,7 +201,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -227,7 +227,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     if ( statement -> connection -> unicode_driver )
@@ -246,7 +246,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( cursor_name && buffer_length > 0 )
@@ -284,7 +284,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETCURSORNAME( statement -> connection,
diff -Naur orig/DriverManager/SQLGetCursorNameW.c patched/DriverManager/SQLGetCursorNameW.c
--- orig/DriverManager/SQLGetCursorNameW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetCursorNameW.c	2017-09-23 17:45:53.127070568 +0200
@@ -184,7 +184,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -210,7 +210,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     if ( statement -> connection -> unicode_driver ||
@@ -228,7 +228,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETCURSORNAMEW( statement -> connection,
@@ -253,7 +253,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( cursor_name && buffer_length > 0 )
diff -Naur orig/DriverManager/SQLGetData.c patched/DriverManager/SQLGetData.c
--- orig/DriverManager/SQLGetData.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetData.c	2017-09-23 17:45:53.051069660 +0200
@@ -256,7 +256,7 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLGETDATA );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -296,10 +296,12 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S4 ||
-            statement -> state == STATE_S5 )
+            statement -> state == STATE_S5 ||
+            ( statement -> state == STATE_S6 || statement -> state == STATE_S7 )
+            && statement -> eod )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -311,7 +313,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -328,7 +330,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -346,7 +348,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -361,7 +363,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( buffer_length < 0 ) {
@@ -375,7 +377,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -387,7 +389,7 @@
 	 * check valid C_TYPE
 	 */
 
-	if ( !check_target_type( target_type ))
+	if ( !check_target_type( target_type, statement -> connection -> environment -> requested_version ))
 	{
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -399,7 +401,7 @@
                 ERROR_HY003, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
 	}
 
     if ( !CHECK_SQLGETDATA( statement -> connection ))
@@ -414,7 +416,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if (statement -> connection -> driver_act_ver==SQL_OV_ODBC2)
@@ -480,11 +482,14 @@
 
     if ( ret == SQL_STILL_EXECUTING )
     {
-        statement -> interupted_func = SQL_API_SQLCOLATTRIBUTE;
+        statement -> interupted_func = SQL_API_SQLGETDATA;
         if ( statement -> state != STATE_S11 &&
                 statement -> state != STATE_S12 )
+        {
+            statement -> interupted_state = statement -> state;
             statement -> state = STATE_S11;
     }
+    }
     else if ( SQL_SUCCEEDED( ret ) && unicode_switch )
     {
         if ( target_value && ind_value >= 0 && as1 )
@@ -515,6 +520,12 @@
         }
     }
 
+    if ( ret != SQL_STILL_EXECUTING
+        && (statement -> state == STATE_S11 || statement -> state == STATE_S12) )
+    {
+        statement -> state = statement -> interupted_state;
+    }
+
     if ( statement -> state == STATE_S14 ) {
         statement -> state = STATE_S15;
     }
diff -Naur orig/DriverManager/SQLGetDescField.c patched/DriverManager/SQLGetDescField.c
--- orig/DriverManager/SQLGetDescField.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetDescField.c	2017-09-23 17:45:53.091070138 +0200
@@ -170,6 +170,7 @@
     DMHDESC descriptor = (DMHDESC) descriptor_handle;
     SQLRETURN ret;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStrField = 0;
 
     /*
      * check descriptor
@@ -225,7 +226,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -251,7 +252,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if( __check_stmt_from_desc_ird( descriptor, STATE_S1 )) {
@@ -266,30 +267,54 @@
                 ERROR_HY007, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
-    if ( descriptor -> connection -> unicode_driver )
-    {
-        SQLWCHAR *s1 = NULL;
-
-        if ( !CHECK_SQLGETDESCFIELDW( descriptor -> connection ))
+    if ( rec_number < 0 )
         {
-            dm_log_write( __FILE__, 
-                    __LINE__, 
-                    LOG_INFO, 
-                    LOG_INFO, 
-                    "Error: IM001" );
-
             __post_internal_error( &descriptor -> error,
-                    ERROR_IM001, NULL,
+                ERROR_07009, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
-        switch( field_identifier )
+    switch ( field_identifier )
         {
+    /* Fixed-length fields: buffer_length is ignored */
+    case SQL_DESC_ALLOC_TYPE:
+    case SQL_DESC_ARRAY_SIZE:
+    case SQL_DESC_ARRAY_STATUS_PTR:
+    case SQL_DESC_BIND_OFFSET_PTR:
+    case SQL_DESC_BIND_TYPE:
+    case SQL_DESC_COUNT:
+    case SQL_DESC_ROWS_PROCESSED_PTR:
+    case SQL_DESC_AUTO_UNIQUE_VALUE:
+    case SQL_DESC_CASE_SENSITIVE:
+    case SQL_DESC_CONCISE_TYPE:
+    case SQL_DESC_DATA_PTR:
+    case SQL_DESC_DATETIME_INTERVAL_CODE:
+    case SQL_DESC_DATETIME_INTERVAL_PRECISION:
+    case SQL_DESC_DISPLAY_SIZE:
+    case SQL_DESC_FIXED_PREC_SCALE:
+    case SQL_DESC_INDICATOR_PTR:
+    case SQL_DESC_LENGTH:
+    case SQL_DESC_NULLABLE:
+    case SQL_DESC_NUM_PREC_RADIX:
+    case SQL_DESC_OCTET_LENGTH:
+    case SQL_DESC_OCTET_LENGTH_PTR:
+    case SQL_DESC_PARAMETER_TYPE:
+    case SQL_DESC_PRECISION:
+    case SQL_DESC_ROWVER:
+    case SQL_DESC_SCALE:
+    case SQL_DESC_SEARCHABLE:
+    case SQL_DESC_TYPE:
+    case SQL_DESC_UNNAMED:
+    case SQL_DESC_UNSIGNED:
+    case SQL_DESC_UPDATABLE:
+        isStrField = 0;
+        break;
+    /* Pointer to data: buffer_length must be valid */
           case SQL_DESC_BASE_COLUMN_NAME:
           case SQL_DESC_BASE_TABLE_NAME:
           case SQL_DESC_CATALOG_NAME:
@@ -301,11 +326,45 @@
           case SQL_DESC_SCHEMA_NAME:
           case SQL_DESC_TABLE_NAME:
           case SQL_DESC_TYPE_NAME:
-            if ( buffer_length > 0 && value )
+        isStrField = 1;
+        break;
+    default:
+        isStrField = buffer_length != SQL_IS_POINTER && buffer_length != SQL_IS_INTEGER
+            && buffer_length != SQL_IS_UINTEGER && buffer_length != SQL_IS_SMALLINT &&
+            buffer_length != SQL_IS_USMALLINT;
+    }
+    
+    if ( isStrField && buffer_length < 0 )
             {
-                s1 = malloc( sizeof( SQLWCHAR ) * ( buffer_length + 1 ));
+        __post_internal_error( &descriptor -> error,
+            ERROR_HY090, NULL,
+            descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
             }
-            break;
+
+    if ( descriptor -> connection -> unicode_driver )
+    {
+        SQLWCHAR *s1 = NULL;
+
+        if ( !CHECK_SQLGETDESCFIELDW( descriptor -> connection ))
+        {
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: IM001" );
+
+            __post_internal_error( &descriptor -> error,
+                    ERROR_IM001, NULL,
+                    descriptor -> connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        }
+
+        if ( isStrField && buffer_length > 0 && value )
+        {
+            s1 = malloc( sizeof( SQLWCHAR ) * ( buffer_length + 1 ));
         }
 
         ret = SQLGETDESCFIELDW( descriptor -> connection,
@@ -313,31 +372,15 @@
                 rec_number, 
                 field_identifier,
                 s1 ? s1 : value, 
-                buffer_length,
+                s1 ? (sizeof ( SQLWCHAR ) * (buffer_length + 1)) : buffer_length,
                 string_length );
 
-        switch( field_identifier )
+        if ( isStrField && SQL_SUCCEEDED( ret ) )
         {
-          case SQL_DESC_BASE_COLUMN_NAME:
-          case SQL_DESC_BASE_TABLE_NAME:
-          case SQL_DESC_CATALOG_NAME:
-          case SQL_DESC_LABEL:
-          case SQL_DESC_LITERAL_PREFIX:
-          case SQL_DESC_LITERAL_SUFFIX:
-          case SQL_DESC_LOCAL_TYPE_NAME:
-          case SQL_DESC_NAME:
-          case SQL_DESC_SCHEMA_NAME:
-          case SQL_DESC_TABLE_NAME:
-          case SQL_DESC_TYPE_NAME:
-            if ( SQL_SUCCEEDED( ret ) && value && s1 )
+            if ( value && s1 )
             {
                 unicode_to_ansi_copy( value, buffer_length, s1, SQL_NTS, descriptor -> connection, NULL );
             }
-			if ( SQL_SUCCEEDED( ret ) && string_length ) 
-			{
-				*string_length /= sizeof( SQLWCHAR );	
-			}
-            break;
         }
 
         if ( s1 )
@@ -359,7 +402,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         ret = SQLGETDESCFIELD( descriptor -> connection,
diff -Naur orig/DriverManager/SQLGetDescFieldW.c patched/DriverManager/SQLGetDescFieldW.c
--- orig/DriverManager/SQLGetDescFieldW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetDescFieldW.c	2017-09-23 17:45:53.151070855 +0200
@@ -107,6 +107,7 @@
     DMHDESC descriptor = (DMHDESC) descriptor_handle;
     SQLRETURN ret;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStrField = 0;
 
     /*
      * check descriptor
@@ -194,7 +195,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -220,7 +221,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if( __check_stmt_from_desc_ird( descriptor, STATE_S1 )) {
@@ -235,9 +236,81 @@
                 ERROR_HY007, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
+    if ( rec_number < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_07009, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+    
+    switch ( field_identifier )
+    {
+    /* Fixed-length fields: buffer_length is ignored */
+    case SQL_DESC_ALLOC_TYPE:
+    case SQL_DESC_ARRAY_SIZE:
+    case SQL_DESC_ARRAY_STATUS_PTR:
+    case SQL_DESC_BIND_OFFSET_PTR:
+    case SQL_DESC_BIND_TYPE:
+    case SQL_DESC_COUNT:
+    case SQL_DESC_ROWS_PROCESSED_PTR:
+    case SQL_DESC_AUTO_UNIQUE_VALUE:
+    case SQL_DESC_CASE_SENSITIVE:
+    case SQL_DESC_CONCISE_TYPE:
+    case SQL_DESC_DATA_PTR:
+    case SQL_DESC_DATETIME_INTERVAL_CODE:
+    case SQL_DESC_DATETIME_INTERVAL_PRECISION:
+    case SQL_DESC_DISPLAY_SIZE:
+    case SQL_DESC_FIXED_PREC_SCALE:
+    case SQL_DESC_INDICATOR_PTR:
+    case SQL_DESC_LENGTH:
+    case SQL_DESC_NULLABLE:
+    case SQL_DESC_NUM_PREC_RADIX:
+    case SQL_DESC_OCTET_LENGTH:
+    case SQL_DESC_OCTET_LENGTH_PTR:
+    case SQL_DESC_PARAMETER_TYPE:
+    case SQL_DESC_PRECISION:
+    case SQL_DESC_ROWVER:
+    case SQL_DESC_SCALE:
+    case SQL_DESC_SEARCHABLE:
+    case SQL_DESC_TYPE:
+    case SQL_DESC_UNNAMED:
+    case SQL_DESC_UNSIGNED:
+    case SQL_DESC_UPDATABLE:
+        isStrField = 0;
+        break;
+    /* Pointer to data: buffer_length must be valid */
+    case SQL_DESC_BASE_COLUMN_NAME:
+    case SQL_DESC_BASE_TABLE_NAME:
+    case SQL_DESC_CATALOG_NAME:
+    case SQL_DESC_LABEL:
+    case SQL_DESC_LITERAL_PREFIX:
+    case SQL_DESC_LITERAL_SUFFIX:
+    case SQL_DESC_LOCAL_TYPE_NAME:
+    case SQL_DESC_NAME:
+    case SQL_DESC_SCHEMA_NAME:
+    case SQL_DESC_TABLE_NAME:
+    case SQL_DESC_TYPE_NAME:
+        isStrField = 1;
+        break;
+    default:
+        isStrField = buffer_length != SQL_IS_POINTER && buffer_length != SQL_IS_INTEGER
+            && buffer_length != SQL_IS_UINTEGER && buffer_length != SQL_IS_SMALLINT &&
+            buffer_length != SQL_IS_USMALLINT;
+    }
+    
+    if ( isStrField && buffer_length < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+            ERROR_HY090, NULL,
+            descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
 
     if ( descriptor -> connection -> unicode_driver ||
 		    CHECK_SQLGETDESCFIELDW( descriptor -> connection ))
@@ -254,7 +327,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         ret = SQLGETDESCFIELDW( descriptor -> connection,
@@ -281,28 +354,13 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
-        switch( field_identifier )
-        {
-          case SQL_DESC_BASE_COLUMN_NAME:
-          case SQL_DESC_BASE_TABLE_NAME:
-          case SQL_DESC_CATALOG_NAME:
-          case SQL_DESC_LABEL:
-          case SQL_DESC_LITERAL_PREFIX:
-          case SQL_DESC_LITERAL_SUFFIX:
-          case SQL_DESC_LOCAL_TYPE_NAME:
-          case SQL_DESC_NAME:
-          case SQL_DESC_SCHEMA_NAME:
-          case SQL_DESC_TABLE_NAME:
-          case SQL_DESC_TYPE_NAME:
-            if ( buffer_length > 0 && value )
+        if ( isStrField && buffer_length > 0 && value )
             {
                 as1 = malloc( buffer_length + 1 );
             }
-            break;
-        }
 
         ret = SQLGETDESCFIELD( descriptor -> connection,
                 descriptor -> driver_desc,
@@ -312,31 +370,12 @@
                 buffer_length,
                 string_length );
 
-        if ( SQL_SUCCEEDED( ret ) && value )
+        if ( isStrField && SQL_SUCCEEDED( ret ) && value )
         {
-            switch( field_identifier )
-            {
-              case SQL_DESC_BASE_COLUMN_NAME:
-              case SQL_DESC_BASE_TABLE_NAME:
-              case SQL_DESC_CATALOG_NAME:
-              case SQL_DESC_LABEL:
-              case SQL_DESC_LITERAL_PREFIX:
-              case SQL_DESC_LITERAL_SUFFIX:
-              case SQL_DESC_LOCAL_TYPE_NAME:
-              case SQL_DESC_NAME:
-              case SQL_DESC_SCHEMA_NAME:
-              case SQL_DESC_TABLE_NAME:
-              case SQL_DESC_TYPE_NAME:
-                if ( as1 && buffer_length > 0 && value )
+            if ( as1 && buffer_length > 0)
                 {
                     ansi_to_unicode_copy( value, (char*) as1, SQL_NTS, descriptor -> connection, NULL );
                 }
-				if ( string_length )
-				{
-					*string_length *= sizeof( SQLWCHAR );
-				}
-                break;
-            }
         }
 
         if ( as1 )
diff -Naur orig/DriverManager/SQLGetDescRec.c patched/DriverManager/SQLGetDescRec.c
--- orig/DriverManager/SQLGetDescRec.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetDescRec.c	2017-09-23 17:45:53.119070472 +0200
@@ -270,7 +270,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -296,7 +296,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if( __check_stmt_from_desc_ird( descriptor, STATE_S1 )) {
@@ -311,7 +311,7 @@
                 ERROR_HY007, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if ( descriptor -> connection -> unicode_driver )
@@ -330,7 +330,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         if ( name && buffer_length > 0 )
@@ -359,7 +359,7 @@
         {
             free( s1 );
         }
-		if ( SQL_SUCCEEDED( ret ) && string_length ) 
+		if ( SQL_SUCCEEDED( ret ) && string_length && name ) 
 		{
 			*string_length = strlen((char*)name);
 		}
@@ -378,7 +378,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         ret = SQLGETDESCREC( descriptor -> connection,
diff -Naur orig/DriverManager/SQLGetDescRecW.c patched/DriverManager/SQLGetDescRecW.c
--- orig/DriverManager/SQLGetDescRecW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetDescRecW.c	2017-09-23 17:45:53.159070950 +0200
@@ -239,7 +239,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if( __check_stmt_from_desc_ird( descriptor, STATE_S1 )) {
@@ -254,7 +254,7 @@
                 ERROR_HY007, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
 
@@ -273,7 +273,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         ret = SQLGETDESCRECW( descriptor -> connection,
@@ -305,7 +305,7 @@
                     ERROR_IM001, NULL,
                     descriptor -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
         }
 
         if ( name && buffer_length > 0 )
diff -Naur orig/DriverManager/SQLGetDiagField.c patched/DriverManager/SQLGetDiagField.c
--- orig/DriverManager/SQLGetDiagField.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetDiagField.c	2017-09-23 17:45:53.123070520 +0200
@@ -215,6 +215,7 @@
     switch( diag_identifier ) {
         case SQL_DIAG_CLASS_ORIGIN:
         case SQL_DIAG_CONNECTION_NAME:
+        case SQL_DIAG_DYNAMIC_FUNCTION:
         case SQL_DIAG_MESSAGE_TEXT:
         case SQL_DIAG_SERVER_NAME:
         case SQL_DIAG_SQLSTATE:
@@ -235,6 +236,11 @@
 {
     ERROR *ptr;
 
+    if ( is_char_diag( diag_identifier ) && buffer_length < 0 )
+    {
+        return SQL_ERROR;
+    }
+    
     /*
      * check the header fields first
      */
@@ -247,7 +253,7 @@
             SQLLEN val;
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0 || head -> handle_type != SQL_HANDLE_STMT )
             {
                 return SQL_ERROR;
             }
@@ -325,15 +331,27 @@
         {
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0 )
             {
                 return SQL_ERROR;
             }
+            else if ( head -> handle_type != SQL_HANDLE_STMT )
+            {
+                if ( diag_info_ptr )
+                {
+                    strcpy( diag_info_ptr, "" );
+                }
+                if ( string_length_ptr )
+                {
+                    *string_length_ptr = 0;
+                }
+                return SQL_SUCCESS;
+            }
             else if ( head -> header_set )
             {
                 if ( SQL_SUCCEEDED( head -> diag_dynamic_function_ret ) && diag_info_ptr )
                 {
-                    unicode_to_ansi_copy( diag_info_ptr, buffer_length, head -> diag_dynamic_function, buffer_length, __get_connection( head ), NULL );
+                    unicode_to_ansi_copy( diag_info_ptr, buffer_length, head -> diag_dynamic_function, SQL_NTS, __get_connection( head ), NULL );
                     if ( string_length_ptr )
                     {
                         *string_length_ptr = wide_strlen( head -> diag_dynamic_function );
@@ -357,7 +375,7 @@
                         0,
                         diag_identifier,
                         s1 ? s1 : diag_info_ptr,
-                        buffer_length,
+                        buffer_length * sizeof ( SQLWCHAR ),
                         string_length_ptr );
 
                 if ( SQL_SUCCEEDED( ret ) && diag_info_ptr && s1 )
@@ -365,6 +383,11 @@
                     unicode_to_ansi_copy( diag_info_ptr, buffer_length, s1, buffer_length, __get_connection( head ), NULL );
                 }
 
+                if ( string_length_ptr && *string_length_ptr > 0 )
+                {
+                    *string_length_ptr /= sizeof ( SQLWCHAR );
+                }
+
                 if ( s1 )
                 {
                     free( s1 );
@@ -398,10 +421,15 @@
             SQLINTEGER val;
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0  )
             {
                 return SQL_ERROR;
             }
+            else if ( head -> handle_type != SQL_HANDLE_STMT )
+            {
+                *((SQLINTEGER*)diag_info_ptr) = 0;
+                return SQL_SUCCESS;
+            }
             else if ( head -> header_set )
             {
                 if ( SQL_SUCCEEDED( head -> diag_dynamic_function_code_ret ) && diag_info_ptr )
@@ -454,6 +482,10 @@
         {
             SQLINTEGER val;
             
+            if ( rec_number > 0 )
+            {
+                return SQL_ERROR;
+            }
             val = head -> sql_diag_head.internal_count + 
                 head -> sql_diag_head.error_count;
 
@@ -479,7 +511,9 @@
      * else check the records
      */
 
-    if ( rec_number < 1 )
+    if ( rec_number < 1 ||
+        ( diag_identifier == SQL_DIAG_COLUMN_NUMBER ||
+          diag_identifier == SQL_DIAG_ROW_NUMBER ) && head -> handle_type != SQL_HANDLE_STMT )
     {
         return SQL_ERROR;
     }
@@ -510,11 +544,10 @@
         {
             SQLRETURN ret;
             SQLWCHAR *s1 = NULL;
-			int char_buffer_len = sizeof( SQLWCHAR ) * buffer_length;
 
-            if ( is_char_diag( diag_identifier ) && diag_info_ptr && buffer_length > 0 )
+            if ( diag_info_ptr && buffer_length > 0 )
             {
-                s1 = malloc( char_buffer_len + sizeof( SQLWCHAR ));
+                s1 = malloc( ( buffer_length + 1 ) * sizeof( SQLWCHAR ));
             }
 
             ret = SQLGETDIAGFIELDW( __get_connection( head ),
@@ -523,22 +556,22 @@
                     rec_number,
                     diag_identifier,
                     s1 ? s1 : diag_info_ptr,
-                    s1 ? char_buffer_len + sizeof( SQLWCHAR ) : buffer_length,
+                    s1 ? ( buffer_length + 1 ) * sizeof( SQLWCHAR ) : buffer_length,
                     string_length_ptr );
 
             if ( SQL_SUCCEEDED( ret ) && s1 && diag_info_ptr )
             {
                 unicode_to_ansi_copy( diag_info_ptr, buffer_length, s1, SQL_NTS, __get_connection( head ), NULL );
-            }
 
-            if ( s1 )
+                if ( string_length_ptr && *string_length_ptr > 0 ) 
             {
-                free( s1 );
+                    *string_length_ptr /= sizeof( SQLWCHAR );
+                }
             }
 
-			if ( string_length_ptr && *string_length_ptr > 0 ) 
+            if ( s1 )
 			{
-				*string_length_ptr /= sizeof( SQLWCHAR );
+                free( s1 );
 			}
 
             if ( SQL_SUCCEEDED( ret ) && diag_identifier == SQL_DIAG_SQLSTATE )
@@ -613,7 +646,7 @@
         {
             if ( SQL_SUCCEEDED( ptr -> diag_class_origin_ret ))
             {
-                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_class_origin, buffer_length, __get_connection( head ), NULL );
+                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_class_origin, SQL_NTS, __get_connection( head ), NULL );
                 if ( string_length_ptr )
                 {
                     *string_length_ptr = wide_strlen( ptr -> diag_class_origin );
@@ -641,7 +674,7 @@
         {
             if ( SQL_SUCCEEDED( ptr -> diag_connection_name_ret ))
             {
-                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_connection_name, buffer_length, __get_connection( head ), NULL );
+                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_connection_name, SQL_NTS, __get_connection( head ), NULL );
                 if ( string_length_ptr )
                 {
                     *string_length_ptr = wide_strlen( ptr -> diag_connection_name );
@@ -713,7 +746,7 @@
         {
             if ( SQL_SUCCEEDED( ptr -> diag_server_name_ret ))
             {
-                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_server_name, buffer_length, __get_connection( head ), NULL );
+                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_server_name, SQL_NTS, __get_connection( head ), NULL );
                 if ( string_length_ptr )
                 {
                     *string_length_ptr = wide_strlen( ptr -> diag_server_name );
@@ -772,7 +805,7 @@
         {
             if ( SQL_SUCCEEDED( ptr -> diag_subclass_origin_ret ))
             {
-                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_subclass_origin, buffer_length, __get_connection( head ), NULL );
+                unicode_to_ansi_copy( diag_info_ptr, buffer_length, ptr -> diag_subclass_origin, SQL_NTS, __get_connection( head ), NULL );
                 if ( string_length_ptr )
                 {
                     *string_length_ptr = wide_strlen( ptr -> diag_subclass_origin );
diff -Naur orig/DriverManager/SQLGetDiagFieldW.c patched/DriverManager/SQLGetDiagFieldW.c
--- orig/DriverManager/SQLGetDiagFieldW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetDiagFieldW.c	2017-09-23 17:45:53.055069707 +0200
@@ -110,6 +110,7 @@
     switch( diag_identifier ) {
         case SQL_DIAG_CLASS_ORIGIN:
         case SQL_DIAG_CONNECTION_NAME:
+        case SQL_DIAG_DYNAMIC_FUNCTION:
         case SQL_DIAG_MESSAGE_TEXT:
         case SQL_DIAG_SERVER_NAME:
         case SQL_DIAG_SQLSTATE:
@@ -130,6 +131,11 @@
 {
     ERROR *ptr;
 
+    if ( is_char_diag( diag_identifier ) && buffer_length < 0 )
+    {
+        return SQL_ERROR;
+    }
+
     /*
      * check the header fields first
      */
@@ -142,7 +148,7 @@
             SQLINTEGER val;
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0 || head -> handle_type != SQL_HANDLE_STMT )
             {
                 return SQL_ERROR;
             }
@@ -220,10 +226,22 @@
         {
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0 )
             {
                 return SQL_ERROR;
             }
+            else if ( head -> handle_type != SQL_HANDLE_STMT )
+            {
+                if ( diag_info_ptr )
+                {
+                    wcscpy( diag_info_ptr, L"" );
+                }
+                if ( string_length_ptr )
+                {
+                    *string_length_ptr = 0;
+                }
+                return SQL_SUCCESS;
+            }
             else if ( head -> header_set )
             {
                 if ( SQL_SUCCEEDED( head -> diag_dynamic_function_ret ) && diag_info_ptr )
@@ -297,10 +315,15 @@
             SQLINTEGER val;
             SQLRETURN ret;
 
-            if ( head -> handle_type != SQL_HANDLE_STMT )
+            if ( rec_number > 0  )
             {
                 return SQL_ERROR;
             }
+            else if ( head -> handle_type != SQL_HANDLE_STMT )
+            {
+                *((SQLINTEGER*)diag_info_ptr) = 0;
+                return SQL_SUCCESS;
+            }
             else if ( head -> header_set )
             {
                 if ( SQL_SUCCEEDED( head -> diag_dynamic_function_code_ret ) && diag_info_ptr )
@@ -353,6 +376,10 @@
         {
             SQLINTEGER val;
             
+            if ( rec_number > 0 )
+            {
+                return SQL_ERROR;
+            }
             val = head -> sql_diag_head.internal_count + 
                 head -> sql_diag_head.error_count;
 
@@ -378,7 +405,9 @@
      * else check the records
      */
 
-    if ( rec_number < 1 )
+    if ( rec_number < 1 ||
+        ( diag_identifier == SQL_DIAG_COLUMN_NUMBER ||
+          diag_identifier == SQL_DIAG_ROW_NUMBER ) && head -> handle_type != SQL_HANDLE_STMT )
     {
         return SQL_ERROR;
     }
diff -Naur orig/DriverManager/SQLGetDiagRec.c patched/DriverManager/SQLGetDiagRec.c
--- orig/DriverManager/SQLGetDiagRec.c	2014-05-09 23:10:45.134739579 +0200
+++ patched/DriverManager/SQLGetDiagRec.c	2017-09-23 17:45:53.135070663 +0200
@@ -379,7 +379,8 @@
         }
         return ret;
     }
-    else if ( !__is_env( head ) && __get_connection( head ) -> state != STATE_C2 )
+    else if ( !__is_env( head ) && __get_connection( head ) -> state != STATE_C2
+        && head->sql_diag_head.error_count )
     {
         ERROR *ptr;
         SQLWCHAR *s1 = NULL, *s2 = NULL;
diff -Naur orig/DriverManager/SQLGetDiagRecW.c patched/DriverManager/SQLGetDiagRecW.c
--- orig/DriverManager/SQLGetDiagRecW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetDiagRecW.c	2017-09-23 17:45:53.123070520 +0200
@@ -174,12 +174,12 @@
          */
 
         if ( SQL_SUCCEEDED( ret ) && sqlstate )
-            __map_error_state((char*) sqlstate, __get_version( head ));
+            __map_error_state_w(sqlstate, __get_version( head ));
 
         return ret;
     }
-    else if ( rec_number <= head -> sql_diag_head.internal_count + 
-            head -> sql_diag_head.error_count )
+    else if ( !__is_env( head ) && __get_connection( head ) -> state != STATE_C2
+        && head->sql_diag_head.error_count )
     {
         ERROR *ptr;
         rec_number -= head -> sql_diag_head.internal_count;
diff -Naur orig/DriverManager/SQLGetEnvAttr.c patched/DriverManager/SQLGetEnvAttr.c
--- orig/DriverManager/SQLGetEnvAttr.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLGetEnvAttr.c	2017-09-23 17:45:53.087070090 +0200
@@ -181,6 +181,15 @@
         break;
 
       case SQL_ATTR_ODBC_VERSION:
+        if ( !environment -> version_set )
+        {
+            __post_internal_error( &environment -> error,
+                    ERROR_HY010, NULL,
+                    SQL_OV_ODBC3 );
+
+            return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        }
+
         if ( value )
         {
             memcpy( value, &environment -> requested_version,
@@ -251,7 +260,7 @@
                 ERROR_HY092, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLGetFunctions.c patched/DriverManager/SQLGetFunctions.c
--- orig/DriverManager/SQLGetFunctions.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLGetFunctions.c	2017-09-23 17:45:53.031069421 +0200
@@ -156,6 +156,16 @@
 
     thread_protect( SQL_HANDLE_DBC, connection );
 
+    if ( function_id == SQL_API_SQLGETFUNCTIONS ||
+         function_id == SQL_API_SQLDATASOURCES ||
+         function_id == SQL_API_SQLDRIVERS ||
+         function_id == SQL_API_SQLGETENVATTR ||
+         function_id == SQL_API_SQLSETENVATTR )
+    {
+        *supported = SQL_TRUE;
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+    }
+
     if ( connection -> state == STATE_C3 ||
             connection -> state == STATE_C2 )
     {
@@ -163,13 +173,26 @@
                 __LINE__, 
                 LOG_INFO, 
                 LOG_INFO, 
-                "Error: 08003" );
+                "Error: HY010" );
 
         __post_internal_error( &connection -> error,
-                ERROR_08003, NULL,
+                ERROR_HY010, NULL,
+                connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+    }
+
+    if ( function_id > SQL_API_SQLBULKOPERATIONS && function_id < SQL_API_SQLCOLUMNS ||
+         function_id > SQL_API_SQLALLOCHANDLESTD && function_id < SQL_API_LOADBYORDINAL ||
+         function_id > SQL_API_LOADBYORDINAL && function_id < SQL_API_ODBC3_ALL_FUNCTIONS ||
+         function_id > SQL_API_ODBC3_ALL_FUNCTIONS && function_id < SQL_API_SQLALLOCHANDLE ||
+         function_id > SQL_API_SQLFETCHSCROLL )
+    {
+        __post_internal_error( &connection -> error,
+                ERROR_HY095, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     __check_for_function( connection, function_id, supported );
@@ -189,5 +212,5 @@
                 connection -> msg );
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
 }
diff -Naur orig/DriverManager/SQLGetInfo.c patched/DriverManager/SQLGetInfo.c
--- orig/DriverManager/SQLGetInfo.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetInfo.c	2017-09-23 17:45:53.123070520 +0200
@@ -187,19 +187,107 @@
                 string_length );
 }
 
-SQLRETURN __SQLGetInfo( SQLHDBC connection_handle,
+SQLRETURN SQLGetInfoInternal( SQLHDBC connection_handle,
            SQLUSMALLINT info_type,
            SQLPOINTER info_value,
            SQLSMALLINT buffer_length,
-           SQLSMALLINT *string_length )
+           SQLSMALLINT *string_length,
+           int do_checks )
 {
     DMHDBC connection = (DMHDBC)connection_handle;
     SQLRETURN ret = SQL_SUCCESS;
+    SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
     int type;
 	SQLUSMALLINT sval;
     char txt[ 30 ], *cptr;
     SQLPOINTER *ptr;
 
+    if ( do_checks )
+    {
+        if ( !__validate_dbc( connection ))
+        {
+            dm_log_write( __FILE__, 
+                        __LINE__, 
+                        LOG_INFO, 
+                        LOG_INFO, 
+                        "Error: SQL_INVALID_HANDLE" );
+
+            return SQL_INVALID_HANDLE;
+        }
+
+        function_entry( connection );
+
+        if ( log_info.log_flag )
+        {
+            sprintf( connection -> msg, "\n\t\tEntry:\
+\n\t\t\tConnection = %p\
+\n\t\t\tInfo Type = %s (%d)\
+\n\t\t\tInfo Value = %p\
+\n\t\t\tBuffer Length = %d\
+\n\t\t\tStrLen = %p",
+                    connection,
+                    __info_as_string( s1, info_type ),
+                    info_type,
+                    info_value, 
+                    (int)buffer_length,
+                    (void*)string_length );
+
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    connection -> msg );
+        }
+
+        thread_protect( SQL_HANDLE_DBC, connection );
+
+        if ( info_type != SQL_ODBC_VER && 
+                info_type != SQL_DM_VER &&
+                connection -> state == STATE_C2 )
+        {
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: 08003" );
+
+            __post_internal_error( &connection -> error,
+                    ERROR_08003, NULL,
+                    connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        }
+        else if ( connection -> state == STATE_C3 )
+        {
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: 08003" );
+
+            __post_internal_error( &connection -> error,
+                    ERROR_08003, NULL,
+                    connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        }
+
+        if ( buffer_length < 0 )
+        {
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: HY090" );
+
+            __post_internal_error( &connection -> error,
+                    ERROR_HY090, NULL,
+                    connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        }
+    }
+    
     switch ( info_type )
     {
       case SQL_DATA_SOURCE_NAME:
@@ -234,30 +322,26 @@
 
       case SQL_DRIVER_HDESC:
         {
-            if ( info_value ) 
+            DMHDESC hdesc;
+            if ( info_value && __validate_desc ( hdesc = *(DMHDESC*) info_value ) )
             {
-                DMHDESC hdesc = *((DMHDESC*) info_value); 
-
                 type = 2;
 
-                if ( __validate_desc( hdesc ))
-                {
-                    ptr = (SQLPOINTER) hdesc -> driver_desc;
-                }
-                else
-                {
-                    dm_log_write( __FILE__, 
-                            __LINE__, 
-                            LOG_INFO, 
-                            LOG_INFO, 
-                            "Error: HY024" );
-    
-                    __post_internal_error( &connection -> error,
-                            ERROR_HY024, NULL,
-                            connection -> environment -> requested_version );
+                ptr = (SQLPOINTER) hdesc -> driver_desc;
+            }
+            else
+            {
+                dm_log_write( __FILE__, 
+                        __LINE__, 
+                        LOG_INFO, 
+                        LOG_INFO, 
+                        "Error: HY024" );
 
-                    return SQL_ERROR;
-                }
+                __post_internal_error( &connection -> error,
+                        ERROR_HY024, NULL,
+                        connection -> environment -> requested_version );
+
+                return do_checks ? function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR ) : SQL_ERROR;
             }
         }
         break;
@@ -269,30 +353,26 @@
 
       case SQL_DRIVER_HSTMT:
         {
-            if ( info_value ) 
+            DMHSTMT hstmt;
+            if ( info_value && __validate_stmt( hstmt = *(DMHSTMT*)info_value ) )
             {
-                DMHSTMT hstmt = *((DMHSTMT*) info_value); 
-
                 type = 2;
 
-                if ( __validate_stmt( hstmt ))
-                {
-                    ptr = (SQLPOINTER) hstmt -> driver_stmt;
-                }
-                else
-                {
-                    dm_log_write( __FILE__, 
-                        __LINE__, 
-                        LOG_INFO, 
-                        LOG_INFO, 
-                        "Error: HY024" );
+                ptr = (SQLPOINTER) hstmt -> driver_stmt;
+            }
+            else
+            {
+                dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: HY024" );
 
-                    __post_internal_error( &connection -> error,
-                        ERROR_HY024, NULL,
-                        connection -> environment -> requested_version );
+                __post_internal_error( &connection -> error,
+                    ERROR_HY024, NULL,
+                    connection -> environment -> requested_version );
 
-                    return SQL_ERROR;
-                }
+                return do_checks ? function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR ) : SQL_ERROR;
             }
         }
         break;
@@ -328,7 +408,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return SQL_ERROR;
+                return do_checks ? function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR ) : SQL_ERROR;
             }
 
             switch( info_type )
@@ -455,7 +535,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return SQL_ERROR;
+                return do_checks ? function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR ) : SQL_ERROR;
             }
 
             ret = SQLGETINFO( connection,
@@ -466,7 +546,7 @@
                     string_length );
         }
 
-        return ret;
+        return do_checks ? function_return( SQL_HANDLE_DBC, connection, ret ) : ret;
     }
 
     if ( type == 1 )
@@ -505,120 +585,25 @@
             *string_length = sizeof( SQLUSMALLINT );
 	}
 
-    return ret;
+    return do_checks ? function_return_nodrv( SQL_HANDLE_DBC, connection, ret ) : ret;
 }
 
-SQLRETURN SQLGetInfo( SQLHDBC connection_handle,
+SQLRETURN __SQLGetInfo( SQLHDBC connection_handle,
            SQLUSMALLINT info_type,
            SQLPOINTER info_value,
            SQLSMALLINT buffer_length,
            SQLSMALLINT *string_length )
 {
-    DMHDBC connection = (DMHDBC)connection_handle;
-    SQLRETURN ret = SQL_SUCCESS;
-    SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
-
-    /*
-     * check connection
-     */
-
-    if ( !__validate_dbc( connection ))
-    {
-        dm_log_write( __FILE__, 
-                    __LINE__, 
-                    LOG_INFO, 
-                    LOG_INFO, 
-                    "Error: SQL_INVALID_HANDLE" );
-
-        return SQL_INVALID_HANDLE;
-    }
-
-    function_entry( connection );
-
-    if ( log_info.log_flag )
-    {
-        sprintf( connection -> msg, "\n\t\tEntry:\
-\n\t\t\tConnection = %p\
-\n\t\t\tInfo Type = %s (%d)\
-\n\t\t\tInfo Value = %p\
-\n\t\t\tBuffer Length = %d\
-\n\t\t\tStrLen = %p",
-                connection,
-                __info_as_string( s1, info_type ),
-                info_type,
-                info_value, 
-                (int)buffer_length,
-                (void*)string_length );
-
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                connection -> msg );
-    }
-
-    thread_protect( SQL_HANDLE_DBC, connection );
-
-    if ( info_type != SQL_ODBC_VER && 
-            info_type != SQL_DM_VER &&
-            connection -> state == STATE_C2 )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: 08003" );
-
-        __post_internal_error( &connection -> error,
-                ERROR_08003, NULL,
-                connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-    }
-    else if ( connection -> state == STATE_C3 )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: 08003" );
-
-        __post_internal_error( &connection -> error,
-                ERROR_08003, NULL,
-                connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-    }
-
-    if ( buffer_length < 0 )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY090" );
-
-        __post_internal_error( &connection -> error,
-                ERROR_HY090, NULL,
-                connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-    }
-
-	ret = __SQLGetInfo(connection_handle, info_type, info_value, buffer_length, string_length);
-
-    if ( log_info.log_flag )
-    {
-        sprintf( connection -> msg, 
-                "\n\t\tExit:[%s]",
-                    __get_return_status( ret, s1 ));
-
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                connection -> msg );
-    }
+    return SQLGetInfoInternal( connection_handle, info_type, info_value,
+        buffer_length, string_length, 0);
+}
 
-    return function_return( SQL_HANDLE_DBC, connection, ret );
+SQLRETURN SQLGetInfo( SQLHDBC connection_handle,
+           SQLUSMALLINT info_type,
+           SQLPOINTER info_value,
+           SQLSMALLINT buffer_length,
+           SQLSMALLINT *string_length )
+{
+    return SQLGetInfoInternal( connection_handle, info_type, info_value,
+        buffer_length, string_length, 1);
 }
diff -Naur orig/DriverManager/SQLGetInfoW.c patched/DriverManager/SQLGetInfoW.c
--- orig/DriverManager/SQLGetInfoW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLGetInfoW.c	2017-09-23 17:45:53.139070711 +0200
@@ -210,7 +210,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C3 )
     {
@@ -224,7 +224,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( buffer_length < 0 )
@@ -239,7 +239,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     switch ( info_type )
@@ -276,30 +276,26 @@
 
       case SQL_DRIVER_HDESC:
         {
-            if ( info_value ) 
+            DMHDESC hdesc;
+            if ( info_value && __validate_desc ( hdesc = *(DMHDESC*) info_value ) )
             {
-                DMHDESC hdesc = *((DMHDESC*) info_value); 
-
                 type = 2;
 
-                if ( __validate_desc( hdesc ))
-                {
-                    ptr = (SQLPOINTER) hdesc -> driver_desc;
-                }
-                else
-                {
-                    dm_log_write( __FILE__, 
-                            __LINE__, 
-                            LOG_INFO, 
-                            LOG_INFO, 
-                            "Error: HY024" );
-
-                    __post_internal_error( &connection -> error,
-                            ERROR_HY024, NULL,
-                            connection -> environment -> requested_version );
-    
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-                }
+                ptr = (SQLPOINTER) hdesc -> driver_desc;
+            }
+            else
+            {
+                dm_log_write( __FILE__, 
+                        __LINE__, 
+                        LOG_INFO, 
+                        LOG_INFO, 
+                        "Error: HY024" );
+
+                __post_internal_error( &connection -> error,
+                        ERROR_HY024, NULL,
+                        connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         break;
@@ -311,30 +307,26 @@
 
       case SQL_DRIVER_HSTMT:
         {
-            if ( info_value ) 
+            DMHSTMT hstmt;
+            if ( info_value && __validate_stmt( hstmt = *(DMHSTMT*)info_value ) )
             {
-                DMHSTMT hstmt = *((DMHSTMT*) info_value); 
-
                 type = 2;
 
-                if ( __validate_stmt( hstmt ))
-                {
-                    ptr = (SQLPOINTER) hstmt -> driver_stmt;
-                }
-                else
-                {
-                    dm_log_write( __FILE__, 
-                            __LINE__, 
-                            LOG_INFO, 
-                            LOG_INFO, 
-                            "Error: HY024" );
-    
-                    __post_internal_error( &connection -> error,
-                            ERROR_HY024, NULL,
-                            connection -> environment -> requested_version );
-    
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-                }
+                ptr = (SQLPOINTER) hstmt -> driver_stmt;
+            }
+            else
+            {
+                dm_log_write( __FILE__, 
+                        __LINE__, 
+                        LOG_INFO, 
+                        LOG_INFO, 
+                        "Error: HY024" );
+
+                __post_internal_error( &connection -> error,
+                        ERROR_HY024, NULL,
+                        connection -> environment -> requested_version );
+
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         break;
@@ -368,7 +360,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             ret = SQLGETINFOW( connection,
@@ -407,7 +399,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
 
             switch( info_type )
@@ -593,5 +585,5 @@
                 connection -> msg );
     }
 
-    return function_return( SQL_HANDLE_DBC, connection, ret );
+    return function_return_nodrv( SQL_HANDLE_DBC, connection, ret );
 }
diff -Naur orig/DriverManager/SQLGetStmtAttr.c patched/DriverManager/SQLGetStmtAttr.c
--- orig/DriverManager/SQLGetStmtAttr.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetStmtAttr.c	2017-09-23 17:45:53.103070281 +0200
@@ -232,12 +232,15 @@
      * check states
      */
 
-    if ( attribute == SQL_ATTR_ROW_NUMBER )
+    if ( attribute == SQL_ATTR_ROW_NUMBER || attribute == SQL_GET_BOOKMARK )
     {
         if ( statement -> state == STATE_S1 ||
                 statement -> state == STATE_S2 ||
                 statement -> state == STATE_S3 ||
-                statement -> state == STATE_S4 )
+                statement -> state == STATE_S4 ||
+                statement -> state == STATE_S5 ||
+                ( statement -> state == STATE_S6 ||
+                  statement -> state == STATE_S7 )  && statement -> eod )
         {
             dm_log_write( __FILE__, 
                     __LINE__, 
@@ -249,7 +252,7 @@
                     ERROR_24000, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -272,7 +275,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -296,7 +299,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
     else
@@ -314,7 +317,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -489,7 +492,7 @@
                     ERROR_HY092, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETSTMTOPTIONW( statement -> connection,
@@ -516,7 +519,7 @@
                     ERROR_HY092, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETSTMTOPTION( statement -> connection,
diff -Naur orig/DriverManager/SQLGetStmtAttrW.c patched/DriverManager/SQLGetStmtAttrW.c
--- orig/DriverManager/SQLGetStmtAttrW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetStmtAttrW.c	2017-09-23 17:45:53.151070855 +0200
@@ -162,12 +162,15 @@
      * check states
      */
 
-    if ( attribute == SQL_ATTR_ROW_NUMBER )
+    if ( attribute == SQL_ATTR_ROW_NUMBER || attribute == SQL_GET_BOOKMARK )
     {
         if ( statement -> state == STATE_S1 ||
                 statement -> state == STATE_S2 ||
                 statement -> state == STATE_S3 ||
-                statement -> state == STATE_S4 )
+                statement -> state == STATE_S4 ||
+                statement -> state == STATE_S5 ||
+                ( statement -> state == STATE_S6 ||
+                  statement -> state == STATE_S7 )  && statement -> eod )
         {
             dm_log_write( __FILE__, 
                     __LINE__, 
@@ -179,7 +182,7 @@
                     ERROR_24000, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -202,7 +205,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -224,7 +227,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
     else
@@ -241,7 +244,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
diff -Naur orig/DriverManager/SQLGetStmtOption.c patched/DriverManager/SQLGetStmtOption.c
--- orig/DriverManager/SQLGetStmtOption.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetStmtOption.c	2017-09-23 17:45:53.055069707 +0200
@@ -168,6 +168,26 @@
      * check states
      */
 
+    if ( option == SQL_ROW_NUMBER || option == SQL_GET_BOOKMARK )
+    {
+        if ( statement -> state >= STATE_S1 && statement -> state <= STATE_S5 ||
+                ( statement -> state == STATE_S6 ||
+                  statement -> state == STATE_S7 )  && statement -> eod )
+        {
+            dm_log_write( __FILE__, 
+                    __LINE__, 
+                    LOG_INFO, 
+                    LOG_INFO, 
+                    "Error: 24000" );
+
+            __post_internal_error( &statement -> error,
+                    ERROR_24000, NULL,
+                    statement -> connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        }
+    }
+    
     if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
             statement -> state == STATE_S10 ||
@@ -187,7 +207,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -296,7 +316,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLGetTypeInfo.c patched/DriverManager/SQLGetTypeInfo.c
--- orig/DriverManager/SQLGetTypeInfo.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetTypeInfo.c	2017-09-23 17:45:53.163070998 +0200
@@ -196,7 +196,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -215,7 +215,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -233,7 +233,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -256,7 +256,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( CHECK_SQLGETTYPEINFOW( statement -> connection ) )
@@ -286,7 +286,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETTYPEINFO( statement -> connection ,
diff -Naur orig/DriverManager/SQLGetTypeInfoW.c patched/DriverManager/SQLGetTypeInfoW.c
--- orig/DriverManager/SQLGetTypeInfoW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLGetTypeInfoW.c	2017-09-23 17:45:53.135070663 +0200
@@ -170,7 +170,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -189,7 +189,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -207,7 +207,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -230,7 +230,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETTYPEINFOW( statement -> connection ,
@@ -251,7 +251,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLGETTYPEINFO( statement -> connection ,
diff -Naur orig/DriverManager/SQLMoreResults.c patched/DriverManager/SQLMoreResults.c
--- orig/DriverManager/SQLMoreResults.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLMoreResults.c	2017-09-23 17:45:53.123070520 +0200
@@ -184,7 +184,7 @@
                 LOG_INFO, 
                 statement -> msg );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_NO_DATA );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_NO_DATA );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -200,7 +200,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S11 ||
             statement -> state == STATE_S12 )
@@ -217,25 +217,9 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
-    else if ( statement -> state == STATE_S13 ||
-            statement -> state == STATE_S14 ||
-            statement -> state == STATE_S15 )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY010" );
-
-        __post_internal_error( &statement -> error,
-                ERROR_HY010, NULL,
-                statement -> connection -> environment -> requested_version );
-
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
-    }
 
 #ifdef NR_PROBE
     if ( !CHECK_SQLMORERESULTS( statement -> connection ) ||
@@ -254,7 +238,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLMORERESULTS( statement -> connection ,
diff -Naur orig/DriverManager/SQLNativeSql.c patched/DriverManager/SQLNativeSql.c
--- orig/DriverManager/SQLNativeSql.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLNativeSql.c	2017-09-23 17:45:53.127070568 +0200
@@ -230,7 +230,7 @@
                 ERROR_HY009, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( cb_sql_str_in < 0 &&
@@ -246,7 +246,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( sz_sql_str &&
@@ -262,7 +262,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 ||
@@ -278,7 +278,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> unicode_driver )
@@ -297,7 +297,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( sz_sql_str_in, cb_sql_str_in, connection, NULL  );
@@ -340,7 +340,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         ret = SQLNATIVESQL( connection,
diff -Naur orig/DriverManager/SQLNativeSqlW.c patched/DriverManager/SQLNativeSqlW.c
--- orig/DriverManager/SQLNativeSqlW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLNativeSqlW.c	2017-09-23 17:45:53.139070711 +0200
@@ -200,7 +200,7 @@
                 ERROR_HY009, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( cb_sql_str_in < 0 &&
@@ -216,7 +216,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( sz_sql_str &&
@@ -232,7 +232,7 @@
                 ERROR_HY090, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> state == STATE_C2 ||
@@ -248,7 +248,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     if ( connection -> unicode_driver ||
@@ -266,7 +266,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         ret = SQLNATIVESQLW( connection,
@@ -294,7 +294,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( sz_sql_str_in, cb_sql_str_in, connection, &clen );
diff -Naur orig/DriverManager/SQLNumParams.c patched/DriverManager/SQLNumParams.c
--- orig/DriverManager/SQLNumParams.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLNumParams.c	2017-09-23 17:45:53.163070998 +0200
@@ -170,7 +170,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -188,7 +188,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -204,7 +204,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLNUMPARAMS( statement -> connection,
diff -Naur orig/DriverManager/SQLNumResultCols.c patched/DriverManager/SQLNumResultCols.c
--- orig/DriverManager/SQLNumResultCols.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLNumResultCols.c	2017-09-23 17:45:53.135070663 +0200
@@ -183,7 +183,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -201,7 +201,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -217,7 +217,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLNUMRESULTCOLS( statement -> connection,
diff -Naur orig/DriverManager/SQLParamData.c patched/DriverManager/SQLParamData.c
--- orig/DriverManager/SQLParamData.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLParamData.c	2017-09-23 17:45:53.139070711 +0200
@@ -195,7 +195,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -213,7 +213,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -229,7 +229,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
 	/* 
diff -Naur orig/DriverManager/SQLParamOptions.c patched/DriverManager/SQLParamOptions.c
--- orig/DriverManager/SQLParamOptions.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLParamOptions.c	2017-09-23 17:45:53.143070759 +0200
@@ -185,7 +185,7 @@
                 ERROR_S1107, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -211,7 +211,7 @@
                 ERROR_S1010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( CHECK_SQLPARAMOPTIONS( statement -> connection ))
@@ -265,7 +265,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLPrepare.c patched/DriverManager/SQLPrepare.c
--- orig/DriverManager/SQLPrepare.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLPrepare.c	2017-09-23 17:45:53.163070998 +0200
@@ -213,7 +213,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( text_length <= 0 && text_length != SQL_NTS )
@@ -228,7 +228,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -253,7 +253,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -272,7 +272,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -290,7 +290,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -311,7 +311,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( statement_text, text_length, statement -> connection, &wlen );
@@ -340,7 +340,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPREPARE( statement -> connection ,
diff -Naur orig/DriverManager/SQLPrepareW.c patched/DriverManager/SQLPrepareW.c
--- orig/DriverManager/SQLPrepareW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLPrepareW.c	2017-09-23 17:45:53.135070663 +0200
@@ -182,7 +182,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( text_length <= 0 && text_length != SQL_NTS )
@@ -197,7 +197,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -222,7 +222,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -241,7 +241,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -259,7 +259,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -278,7 +278,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPREPAREW( statement -> connection ,
@@ -303,7 +303,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( statement_text, text_length, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLPrimaryKeys.c patched/DriverManager/SQLPrimaryKeys.c
--- orig/DriverManager/SQLPrimaryKeys.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLPrimaryKeys.c	2017-09-23 17:45:53.091070138 +0200
@@ -220,7 +220,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -246,7 +246,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -265,7 +265,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -283,7 +283,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -299,7 +299,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -323,15 +323,12 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &wlen );
-        cb_catalog_name = wlen;
         s2 = ansi_to_unicode_alloc( sz_schema_name, cb_schema_name, statement -> connection, &wlen );
-        cb_schema_name = wlen;
         s3 = ansi_to_unicode_alloc( sz_table_name, cb_table_name, statement -> connection, &wlen );
-        cb_table_name = wlen;
 
         ret = SQLPRIMARYKEYSW( statement -> connection ,
                 statement -> driver_stmt,
@@ -363,7 +360,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPRIMARYKEYS( statement -> connection ,
diff -Naur orig/DriverManager/SQLPrimaryKeysW.c patched/DriverManager/SQLPrimaryKeysW.c
--- orig/DriverManager/SQLPrimaryKeysW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLPrimaryKeysW.c	2017-09-23 17:45:53.139070711 +0200
@@ -185,7 +185,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -211,7 +211,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -230,7 +230,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -248,7 +248,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -264,7 +264,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -286,7 +286,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPRIMARYKEYSW( statement -> connection ,
@@ -315,7 +315,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLProcedureColumns.c patched/DriverManager/SQLProcedureColumns.c
--- orig/DriverManager/SQLProcedureColumns.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLProcedureColumns.c	2017-09-23 17:45:53.035069469 +0200
@@ -202,10 +202,10 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
-            ( cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
-            ( cb_proc_name < 0 && cb_proc_name != SQL_NTS ) ||
-            ( cb_column_name < 0 && cb_column_name != SQL_NTS ))
+    if (( sz_catalog_name && cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
+            ( sz_schema_name && cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
+            ( sz_proc_name && cb_proc_name < 0 && cb_proc_name != SQL_NTS ) ||
+            ( sz_column_name && cb_column_name < 0 && cb_column_name != SQL_NTS ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -217,7 +217,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -243,7 +243,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -262,7 +262,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -280,7 +280,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -305,7 +305,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &wlen );
@@ -351,7 +351,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPROCEDURECOLUMNS( statement -> connection ,
diff -Naur orig/DriverManager/SQLProcedureColumnsW.c patched/DriverManager/SQLProcedureColumnsW.c
--- orig/DriverManager/SQLProcedureColumnsW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLProcedureColumnsW.c	2017-09-23 17:45:53.127070568 +0200
@@ -177,10 +177,10 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
-            ( cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
-            ( cb_proc_name < 0 && cb_proc_name != SQL_NTS ) ||
-            ( cb_column_name < 0 && cb_column_name != SQL_NTS ))
+    if (( sz_catalog_name && cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
+            ( sz_schema_name && cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
+            ( sz_proc_name && cb_proc_name < 0 && cb_proc_name != SQL_NTS ) ||
+            ( sz_column_name && cb_column_name < 0 && cb_column_name != SQL_NTS ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -192,7 +192,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -218,7 +218,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -237,7 +237,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -255,7 +255,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -278,7 +278,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPROCEDURECOLUMNSW( statement -> connection ,
@@ -309,7 +309,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLProcedures.c patched/DriverManager/SQLProcedures.c
--- orig/DriverManager/SQLProcedures.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLProcedures.c	2017-09-23 17:45:53.147070807 +0200
@@ -208,7 +208,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -234,7 +234,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -253,7 +253,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -271,7 +271,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -296,7 +296,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &wlen );
@@ -336,7 +336,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPROCEDURES( statement -> connection ,
diff -Naur orig/DriverManager/SQLProceduresW.c patched/DriverManager/SQLProceduresW.c
--- orig/DriverManager/SQLProceduresW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLProceduresW.c	2017-09-23 17:45:53.163070998 +0200
@@ -185,7 +185,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -211,7 +211,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -230,7 +230,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -248,7 +248,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -271,7 +271,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLPROCEDURESW( statement -> connection ,
@@ -300,7 +300,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLPutData.c patched/DriverManager/SQLPutData.c
--- orig/DriverManager/SQLPutData.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLPutData.c	2017-09-23 17:45:53.143070759 +0200
@@ -177,7 +177,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -198,7 +198,7 @@
                 ERROR_HY011, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -216,7 +216,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -232,7 +232,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( !CHECK_SQLPUTDATA( statement -> connection ))
@@ -247,7 +247,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = SQLPUTDATA( statement -> connection,
diff -Naur orig/DriverManager/SQLRowCount.c patched/DriverManager/SQLRowCount.c
--- orig/DriverManager/SQLRowCount.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLRowCount.c	2017-09-23 17:45:53.139070711 +0200
@@ -208,7 +208,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( !CHECK_SQLROWCOUNT( statement -> connection ))
@@ -228,7 +228,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     ret = DEF_SQLROWCOUNT( statement -> connection,
diff -Naur orig/DriverManager/SQLSetConnectAttr.c patched/DriverManager/SQLSetConnectAttr.c
--- orig/DriverManager/SQLSetConnectAttr.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetConnectAttr.c	2017-09-23 17:45:53.059069755 +0200
@@ -253,7 +253,7 @@
                     ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -322,7 +322,7 @@
                         ERROR_HY024, NULL,
                         connection -> environment -> requested_version );
             
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
                 else 
                 {
@@ -347,13 +347,13 @@
                         __LINE__, 
                         LOG_INFO, 
                         LOG_INFO, 
-                        "Error: HY009" );
+                        "Error: HY024" );
         
                 __post_internal_error( &connection -> error,
-                    ERROR_HY009, NULL,
+                    ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -416,7 +416,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C3 )
@@ -431,7 +431,7 @@
             ERROR_HY010, NULL,
             connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C4 ||
             connection -> state == STATE_C5 ||
@@ -449,7 +449,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
         else if ( attribute == SQL_ATTR_PACKET_SIZE )
         {
@@ -463,7 +463,7 @@
                 ERROR_HY011, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -484,7 +484,7 @@
                 ERROR_HY024, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -493,10 +493,34 @@
 
     switch( attribute ) 
     {
-      	case SQL_ATTR_CONCURRENCY:
-	  	case SQL_BIND_TYPE:
+        /* ODBC 3.x statement attributes are not settable at the connection level */
+        case SQL_ATTR_APP_PARAM_DESC:
+        case SQL_ATTR_APP_ROW_DESC:
       	case SQL_ATTR_CURSOR_SCROLLABLE:
       	case SQL_ATTR_CURSOR_SENSITIVITY:
+        case SQL_ATTR_ENABLE_AUTO_IPD:
+        case SQL_ATTR_FETCH_BOOKMARK_PTR:
+        case SQL_ATTR_IMP_PARAM_DESC:
+        case SQL_ATTR_IMP_ROW_DESC:
+        case SQL_ATTR_PARAM_BIND_OFFSET_PTR:
+        case SQL_ATTR_PARAM_BIND_TYPE:
+        case SQL_ATTR_PARAM_OPERATION_PTR:
+        case SQL_ATTR_PARAM_STATUS_PTR:
+        case SQL_ATTR_PARAMS_PROCESSED_PTR:
+        case SQL_ATTR_PARAMSET_SIZE:
+        case SQL_ATTR_ROW_ARRAY_SIZE:
+        case SQL_ATTR_ROW_BIND_OFFSET_PTR:
+        case SQL_ATTR_ROW_OPERATION_PTR:
+        case SQL_ATTR_ROW_STATUS_PTR:
+        case SQL_ATTR_ROWS_FETCHED_PTR:
+            __post_internal_error( &connection -> error,
+                    ERROR_HY092, NULL,
+                    connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+
+      	case SQL_ATTR_CONCURRENCY:
+	  	case SQL_BIND_TYPE:
       	case SQL_ATTR_CURSOR_TYPE:
       	case SQL_ATTR_MAX_LENGTH:
       	case SQL_MAX_ROWS:
@@ -519,28 +543,11 @@
                         ERROR_24000, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             break;
 
         default:
-            if ( attribute == SQL_ATTR_CURRENT_CATALOG ) 
-            {
-                if( __check_stmt_from_dbc_v( connection, 3, STATE_S5, STATE_S6, STATE_S7 )) {
-
-                    dm_log_write( __FILE__, 
-                            __LINE__, 
-                            LOG_INFO, 
-                            LOG_INFO, 
-                            "Error: 24000" );
-
-                    __post_internal_error( &connection -> error,
-                            ERROR_24000, NULL,
-                            connection -> environment -> requested_version );
-
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-                }
-            }
 
             if( __check_stmt_from_dbc_v( connection, 5, STATE_S8, STATE_S9, STATE_S10, STATE_S11, STATE_S12 )) {
 
@@ -554,7 +561,7 @@
                         ERROR_HY010, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             break;
     }
@@ -651,9 +658,19 @@
             }
             else if ( string_length == SQL_NTS )
             {
+                if (!value)
+                {
+                    __post_internal_error( &connection -> error,
+                        ERROR_HY024, "Invalid argument value",
+                        connection -> environment -> requested_version );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                }
+                else
+                {
                 sa -> str_attr = strdup( value );
                 sa -> str_len = string_length;
             }
+            }
             else
             {
                 sa -> int_attr = ( SQLLEN ) value;
@@ -673,7 +690,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -700,7 +717,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     ret = SQLSETCONNECTOPTION( connection,
@@ -720,7 +737,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
@@ -757,7 +774,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     switch( attribute )
@@ -797,7 +814,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
diff -Naur orig/DriverManager/SQLSetConnectAttrW.c patched/DriverManager/SQLSetConnectAttrW.c
--- orig/DriverManager/SQLSetConnectAttrW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetConnectAttrW.c	2017-09-23 17:45:53.043069564 +0200
@@ -159,7 +159,7 @@
                     ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -228,7 +228,7 @@
                         ERROR_HY024, NULL,
                         connection -> environment -> requested_version );
             
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
                 else 
                 {
@@ -253,13 +253,13 @@
                         __LINE__, 
                         LOG_INFO, 
                         LOG_INFO, 
-                        "Error: HY009" );
+                        "Error: HY024" );
         
                 __post_internal_error( &connection -> error,
-                    ERROR_HY009, NULL,
+                    ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -352,7 +352,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C3 )
@@ -367,7 +367,7 @@
             ERROR_HY010, NULL,
             connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C4 ||
             connection -> state == STATE_C5 || 
@@ -385,7 +385,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
         else if ( attribute == SQL_ATTR_PACKET_SIZE )
         {
@@ -399,7 +399,7 @@
                 ERROR_HY011, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -420,7 +420,7 @@
                 ERROR_HY024, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -429,10 +429,34 @@
 
     switch( attribute ) 
     {
-      	case SQL_ATTR_CONCURRENCY:
-	  	case SQL_BIND_TYPE:
+        /* ODBC 3.x statement attributes are not settable at the connection level */
+        case SQL_ATTR_APP_PARAM_DESC:
+        case SQL_ATTR_APP_ROW_DESC:
       	case SQL_ATTR_CURSOR_SCROLLABLE:
       	case SQL_ATTR_CURSOR_SENSITIVITY:
+        case SQL_ATTR_ENABLE_AUTO_IPD:
+        case SQL_ATTR_FETCH_BOOKMARK_PTR:
+        case SQL_ATTR_IMP_PARAM_DESC:
+        case SQL_ATTR_IMP_ROW_DESC:
+        case SQL_ATTR_PARAM_BIND_OFFSET_PTR:
+        case SQL_ATTR_PARAM_BIND_TYPE:
+        case SQL_ATTR_PARAM_OPERATION_PTR:
+        case SQL_ATTR_PARAM_STATUS_PTR:
+        case SQL_ATTR_PARAMS_PROCESSED_PTR:
+        case SQL_ATTR_PARAMSET_SIZE:
+        case SQL_ATTR_ROW_ARRAY_SIZE:
+        case SQL_ATTR_ROW_BIND_OFFSET_PTR:
+        case SQL_ATTR_ROW_OPERATION_PTR:
+        case SQL_ATTR_ROW_STATUS_PTR:
+        case SQL_ATTR_ROWS_FETCHED_PTR:
+            __post_internal_error( &connection -> error,
+                    ERROR_HY092, NULL,
+                    connection -> environment -> requested_version );
+
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+
+      	case SQL_ATTR_CONCURRENCY:
+	  	case SQL_BIND_TYPE:
       	case SQL_ATTR_CURSOR_TYPE:
       	case SQL_ATTR_MAX_LENGTH:
       	case SQL_MAX_ROWS:
@@ -455,28 +479,11 @@
                         ERROR_24000, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             break;
 
         default:
-            if ( attribute == SQL_ATTR_CURRENT_CATALOG ) 
-            {
-                if( __check_stmt_from_dbc_v( connection, 3, STATE_S5, STATE_S6, STATE_S7 )) {
-
-                    dm_log_write( __FILE__, 
-                            __LINE__, 
-                            LOG_INFO, 
-                            LOG_INFO, 
-                            "Error: 24000" );
-
-                    __post_internal_error( &connection -> error,
-                            ERROR_24000, NULL,
-                            connection -> environment -> requested_version );
-
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
-                }
-            }
 
             if( __check_stmt_from_dbc_v( connection, 8, STATE_S8, STATE_S9, STATE_S10, STATE_S11, STATE_S12, STATE_S13, STATE_S14, STATE_S15 )) {
 
@@ -490,7 +497,7 @@
                         ERROR_HY010, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             break;
     }
@@ -570,7 +577,7 @@
             connection -> txn_isolation = ( SQLLEN ) value;
             connection -> txn_isolation_set = 1;
         }
-        else
+        else if ( attribute != SQL_ATTR_LOGIN_TIMEOUT )
         {
             /*
              * save any unknown attributes untill connect
@@ -587,9 +594,19 @@
             }
             else if ( string_length == SQL_NTS )
             {
-                sa -> str_attr = strdup( value );
+                if (!value)
+                {
+                    __post_internal_error( &connection -> error,
+                        ERROR_HY024, "Invalid argument value",
+                        connection -> environment -> requested_version );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                }
+                else
+                {
+                sa -> str_attr = unicode_to_ansi_alloc( value, string_length, connection, NULL );
                 sa -> str_len = string_length;
             }
+            }
             else
             {
                 sa -> int_attr = ( SQLLEN ) value;
@@ -608,7 +625,7 @@
                 LOG_INFO, 
                 connection -> msg );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -636,7 +653,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     ret = SQLSETCONNECTOPTIONW( connection,
@@ -656,7 +673,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
@@ -693,7 +710,7 @@
                                 ERROR_HY092, NULL,
                                 connection -> environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                     }
 
                     switch( attribute )
@@ -727,7 +744,7 @@
                             ERROR_IM001, NULL,
                             connection -> environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
             }
             else
diff -Naur orig/DriverManager/SQLSetConnectOption.c patched/DriverManager/SQLSetConnectOption.c
--- orig/DriverManager/SQLSetConnectOption.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLSetConnectOption.c	2017-09-23 17:45:53.131070616 +0200
@@ -226,6 +226,7 @@
             if ( __validate_dbc( connection ))
             {
                 thread_protect( SQL_HANDLE_DBC, connection );
+                function_entry( connection );
                 dm_log_write( __FILE__, 
                         __LINE__, 
                         LOG_INFO, 
@@ -236,7 +237,7 @@
                     ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -264,6 +265,7 @@
                 if ( __validate_dbc( connection ))
                 {
                     thread_protect( SQL_HANDLE_DBC, connection );
+                    function_entry( connection );
                     dm_log_write( __FILE__, 
                             __LINE__, 
                             LOG_INFO, 
@@ -274,7 +276,7 @@
                         ERROR_HY024, NULL,
                         connection -> environment -> requested_version );
             
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
                 else 
                 {
@@ -295,23 +297,25 @@
             if ( __validate_dbc( connection ))
             {
                 thread_protect( SQL_HANDLE_DBC, connection );
+                function_entry( connection );
                 dm_log_write( __FILE__, 
                         __LINE__, 
                         LOG_INFO, 
                         LOG_INFO, 
-                        "Error: HY009" );
+                        "Error: HY024" );
         
                 __post_internal_error( &connection -> error,
-                    ERROR_HY009, NULL,
+                    ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
                 return SQL_INVALID_HANDLE;
             }
         }
+        return SQL_SUCCESS;
     }
 
     /*
@@ -365,7 +369,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C3 )
@@ -380,7 +384,7 @@
             ERROR_HY010, NULL,
             connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C4 ||
             connection -> state == STATE_C5 )
@@ -397,7 +401,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C6 )
@@ -414,7 +418,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
         else if ( option == SQL_TXN_ISOLATION )
         {
@@ -428,7 +432,7 @@
                 ERROR_S1011, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -449,7 +453,7 @@
                 ERROR_HY024, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -466,6 +470,16 @@
         connection -> login_timeout_set = 1;
         connection -> login_timeout = value;
     }
+    else if ( option == SQL_ATTR_ACCESS_MODE )
+    {
+        connection -> access_mode = ( SQLLEN ) value;
+        connection -> access_mode_set = 1;
+    }
+    else if ( option == SQL_AUTOCOMMIT )
+    {
+        connection -> auto_commit = ( SQLINTEGER ) value;
+        connection -> auto_commit_set = 1;
+    }
 
     if ( option == SQL_ODBC_CURSORS )
     {
@@ -484,6 +498,11 @@
             connection -> quite_mode = ( SQLLEN ) value;
             connection -> quite_mode_set = 1;
         }
+        else if ( option == SQL_ATTR_ACCESS_MODE )
+        {
+            connection -> access_mode = ( SQLLEN ) value;
+            connection -> access_mode_set = 1;
+        }
         else
         {
             /*
@@ -511,7 +530,7 @@
                     connection -> msg );
         }
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -568,7 +587,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
         else
@@ -614,7 +633,7 @@
                         ERROR_IM001, NULL,
                         connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
         }
 
diff -Naur orig/DriverManager/SQLSetConnectOptionW.c patched/DriverManager/SQLSetConnectOptionW.c
--- orig/DriverManager/SQLSetConnectOptionW.c	2014-05-09 23:06:13.134739579 +0200
+++ patched/DriverManager/SQLSetConnectOptionW.c	2017-09-23 17:45:53.059069755 +0200
@@ -118,6 +118,7 @@
             if ( __validate_dbc( connection ))
             {
                 thread_protect( SQL_HANDLE_DBC, connection );
+                function_entry( connection );
                 dm_log_write( __FILE__, 
                         __LINE__, 
                         LOG_INFO, 
@@ -128,7 +129,7 @@
                     ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -156,6 +157,7 @@
                 if ( __validate_dbc( connection ))
                 {
                     thread_protect( SQL_HANDLE_DBC, connection );
+                    function_entry( connection );
                     dm_log_write( __FILE__, 
                             __LINE__, 
                             LOG_INFO, 
@@ -166,7 +168,7 @@
                         ERROR_HY024, NULL,
                         connection -> environment -> requested_version );
             
-                    return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
                 }
                 else 
                 {
@@ -187,17 +189,18 @@
             if ( __validate_dbc( connection ))
             {
                 thread_protect( SQL_HANDLE_DBC, connection );
+                function_entry( connection );
                 dm_log_write( __FILE__, 
                         __LINE__, 
                         LOG_INFO, 
                         LOG_INFO, 
-                        "Error: HY009" );
+                        "Error: HY024" );
         
                 __post_internal_error( &connection -> error,
-                    ERROR_HY009, NULL,
+                    ERROR_HY024, NULL,
                     connection -> environment -> requested_version );
         
-                return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
             }
             else 
             {
@@ -287,7 +290,7 @@
                 ERROR_08003, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C3 )
@@ -302,7 +305,7 @@
             ERROR_HY010, NULL,
             connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
     else if ( connection -> state == STATE_C4 ||
             connection -> state == STATE_C5 )
@@ -319,7 +322,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
     else if ( connection -> state == STATE_C6 )
@@ -336,7 +339,7 @@
                 ERROR_08002, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
         else if ( option == SQL_TXN_ISOLATION )
         {
@@ -350,7 +353,7 @@
                 ERROR_S1011, NULL,
                 connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
     }
 
@@ -371,7 +374,7 @@
                 ERROR_HY024, NULL,
                 connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
     }
 
     /*
@@ -380,15 +383,26 @@
 
     value = (SQLULEN) __attr_override_wide( connection, SQL_HANDLE_DBC, option, (void*) value, NULL, buffer );
 
-    if ( option == SQL_ODBC_CURSORS )
+    if ( option == SQL_LOGIN_TIMEOUT )
     {
-        connection -> cursors = value;
+        connection -> login_timeout_set = 1;
+        connection -> login_timeout = value;
         ret = SQL_SUCCESS;
     }
-    else if ( option == SQL_LOGIN_TIMEOUT )
+    else if ( option == SQL_ATTR_ACCESS_MODE )
     {
-        connection -> login_timeout_set = 1;
-        connection -> login_timeout = value;
+        connection -> access_mode = ( SQLLEN ) value;
+        connection -> access_mode_set = 1;
+    }
+    else if ( option == SQL_AUTOCOMMIT )
+    {
+        connection -> auto_commit = ( SQLINTEGER ) value;
+        connection -> auto_commit_set = 1;
+    }
+
+    if ( option == SQL_ODBC_CURSORS )
+    {
+        connection -> cursors = value;
         ret = SQL_SUCCESS;
     }
     else if ( connection -> state == STATE_C2 )
@@ -403,6 +417,11 @@
             connection -> quite_mode = ( SQLLEN ) value;
             connection -> quite_mode_set = 1;
         }
+        else if ( option == SQL_ATTR_ACCESS_MODE )
+        {
+            connection -> access_mode = ( SQLLEN ) value;
+            connection -> access_mode_set = 1;
+        }
         else
         {
             /*
@@ -430,7 +449,7 @@
                     connection -> msg );
         }
 
-        return function_return( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
+        return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_SUCCESS );
     }
     else
     {
@@ -478,7 +497,7 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLSetCursorName.c patched/DriverManager/SQLSetCursorName.c
--- orig/DriverManager/SQLSetCursorName.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetCursorName.c	2017-09-23 17:45:53.043069564 +0200
@@ -169,7 +169,8 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if ( !cursor_name )
+    if ( !cursor_name ||
+         (name_length < 0 && name_length != SQL_NTS ) )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -181,7 +182,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     /*
@@ -203,7 +204,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -225,7 +226,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> connection -> unicode_driver )
@@ -245,7 +246,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( cursor_name, name_length, statement -> connection, &wlen );
@@ -274,7 +275,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSETCURSORNAME( statement -> connection,
diff -Naur orig/DriverManager/SQLSetCursorNameW.c patched/DriverManager/SQLSetCursorNameW.c
--- orig/DriverManager/SQLSetCursorNameW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetCursorNameW.c	2017-09-23 17:45:53.131070616 +0200
@@ -122,7 +122,8 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if ( !cursor_name )
+    if ( !cursor_name ||
+         (name_length < 0 && name_length != SQL_NTS ) )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -134,7 +135,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     /*
@@ -156,7 +157,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -178,7 +179,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> connection -> unicode_driver ||
@@ -196,7 +197,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSETCURSORNAMEW( statement -> connection,
@@ -221,7 +222,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( cursor_name, name_length, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLSetDescField.c patched/DriverManager/SQLSetDescField.c
--- orig/DriverManager/SQLSetDescField.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetDescField.c	2017-09-23 17:45:53.063069803 +0200
@@ -149,6 +149,7 @@
     DMHDESC descriptor = (DMHDESC) descriptor_handle;
     SQLRETURN ret;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStrField = 0;
 
     /*
      * check descriptor
@@ -202,7 +203,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -228,7 +229,101 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+
+    if ( rec_number < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_07009, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    switch ( field_identifier )
+    {
+    /* Fixed-length fields: buffer_length is ignored */
+    case SQL_DESC_ALLOC_TYPE:
+    case SQL_DESC_ARRAY_SIZE:
+    case SQL_DESC_ARRAY_STATUS_PTR:
+    case SQL_DESC_BIND_OFFSET_PTR:
+    case SQL_DESC_BIND_TYPE:
+    case SQL_DESC_COUNT:
+    case SQL_DESC_ROWS_PROCESSED_PTR:
+    case SQL_DESC_AUTO_UNIQUE_VALUE:
+    case SQL_DESC_CASE_SENSITIVE:
+    case SQL_DESC_CONCISE_TYPE:
+    case SQL_DESC_DATA_PTR:
+    case SQL_DESC_DATETIME_INTERVAL_CODE:
+    case SQL_DESC_DATETIME_INTERVAL_PRECISION:
+    case SQL_DESC_DISPLAY_SIZE:
+    case SQL_DESC_FIXED_PREC_SCALE:
+    case SQL_DESC_INDICATOR_PTR:
+    case SQL_DESC_LENGTH:
+    case SQL_DESC_NULLABLE:
+    case SQL_DESC_NUM_PREC_RADIX:
+    case SQL_DESC_OCTET_LENGTH:
+    case SQL_DESC_OCTET_LENGTH_PTR:
+    case SQL_DESC_PARAMETER_TYPE:
+    case SQL_DESC_PRECISION:
+    case SQL_DESC_ROWVER:
+    case SQL_DESC_SCALE:
+    case SQL_DESC_SEARCHABLE:
+    case SQL_DESC_TYPE:
+    case SQL_DESC_UNNAMED:
+    case SQL_DESC_UNSIGNED:
+    case SQL_DESC_UPDATABLE:
+        isStrField = 0;
+        break;
+    /* Pointer to data: buffer_length must be valid */
+    case SQL_DESC_BASE_COLUMN_NAME:
+    case SQL_DESC_BASE_TABLE_NAME:
+    case SQL_DESC_CATALOG_NAME:
+    case SQL_DESC_LABEL:
+    case SQL_DESC_LITERAL_PREFIX:
+    case SQL_DESC_LITERAL_SUFFIX:
+    case SQL_DESC_LOCAL_TYPE_NAME:
+    case SQL_DESC_NAME:
+    case SQL_DESC_SCHEMA_NAME:
+    case SQL_DESC_TABLE_NAME:
+    case SQL_DESC_TYPE_NAME:
+        isStrField = 1;
+        break;
+    default:
+        isStrField = buffer_length != SQL_IS_POINTER && buffer_length != SQL_IS_INTEGER
+            && buffer_length != SQL_IS_UINTEGER && buffer_length != SQL_IS_SMALLINT &&
+            buffer_length != SQL_IS_USMALLINT;
+    }
+    
+    if ( isStrField && buffer_length < 0 && buffer_length != SQL_NTS)
+    {
+        __post_internal_error( &descriptor -> error,
+            ERROR_HY090, NULL,
+            descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    if ( field_identifier == SQL_DESC_COUNT && (SQLINTEGER)value < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_07009, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+    
+    if ( field_identifier == SQL_DESC_PARAMETER_TYPE && value != SQL_PARAM_INPUT
+        && value != SQL_PARAM_OUTPUT && value != SQL_PARAM_INPUT_OUTPUT &&
+        value != SQL_PARAM_INPUT_OUTPUT_STREAM && value != SQL_PARAM_OUTPUT_STREAM )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_HY105, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if ( CHECK_SQLSETDESCFIELD( descriptor -> connection ))
@@ -244,10 +339,13 @@
     {
       SQLWCHAR *s1 = NULL;
 
-      if (field_identifier == SQL_DESC_NAME)
+        if (isStrField)
       {
         s1 = ansi_to_unicode_alloc( value, buffer_length, descriptor -> connection, NULL );
-
+            if (SQL_NTS != buffer_length)
+            {
+                buffer_length *= sizeof(SQLWCHAR);
+            }
       }
       else
       {
@@ -260,12 +358,11 @@
                 s1, 
                 buffer_length );
        
-       if (field_identifier == SQL_DESC_NAME)
+        if (isStrField)
        {
         if (s1)
           free(s1); 
        }
-     
     }
     else 
 	{
@@ -279,7 +376,7 @@
                 ERROR_IM001, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLSetDescFieldW.c patched/DriverManager/SQLSetDescFieldW.c
--- orig/DriverManager/SQLSetDescFieldW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetDescFieldW.c	2017-09-23 17:45:53.107070329 +0200
@@ -101,6 +101,7 @@
     DMHDESC descriptor = (DMHDESC) descriptor_handle;
     SQLRETURN ret;
     SQLCHAR s1[ 100 + LOG_MESSAGE_LEN ];
+    int isStrField = 0;
 
     /*
      * check descriptor
@@ -185,7 +186,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -211,7 +212,100 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    if ( rec_number < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_07009, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    switch ( field_identifier )
+    {
+    /* Fixed-length fields: buffer_length is ignored */
+    case SQL_DESC_ALLOC_TYPE:
+    case SQL_DESC_ARRAY_SIZE:
+    case SQL_DESC_ARRAY_STATUS_PTR:
+    case SQL_DESC_BIND_OFFSET_PTR:
+    case SQL_DESC_BIND_TYPE:
+    case SQL_DESC_COUNT:
+    case SQL_DESC_ROWS_PROCESSED_PTR:
+    case SQL_DESC_AUTO_UNIQUE_VALUE:
+    case SQL_DESC_CASE_SENSITIVE:
+    case SQL_DESC_CONCISE_TYPE:
+    case SQL_DESC_DATA_PTR:
+    case SQL_DESC_DATETIME_INTERVAL_CODE:
+    case SQL_DESC_DATETIME_INTERVAL_PRECISION:
+    case SQL_DESC_DISPLAY_SIZE:
+    case SQL_DESC_FIXED_PREC_SCALE:
+    case SQL_DESC_INDICATOR_PTR:
+    case SQL_DESC_LENGTH:
+    case SQL_DESC_NULLABLE:
+    case SQL_DESC_NUM_PREC_RADIX:
+    case SQL_DESC_OCTET_LENGTH:
+    case SQL_DESC_OCTET_LENGTH_PTR:
+    case SQL_DESC_PARAMETER_TYPE:
+    case SQL_DESC_PRECISION:
+    case SQL_DESC_ROWVER:
+    case SQL_DESC_SCALE:
+    case SQL_DESC_SEARCHABLE:
+    case SQL_DESC_TYPE:
+    case SQL_DESC_UNNAMED:
+    case SQL_DESC_UNSIGNED:
+    case SQL_DESC_UPDATABLE:
+        isStrField = 0;
+        break;
+    /* Pointer to data: buffer_length must be valid */
+    case SQL_DESC_BASE_COLUMN_NAME:
+    case SQL_DESC_BASE_TABLE_NAME:
+    case SQL_DESC_CATALOG_NAME:
+    case SQL_DESC_LABEL:
+    case SQL_DESC_LITERAL_PREFIX:
+    case SQL_DESC_LITERAL_SUFFIX:
+    case SQL_DESC_LOCAL_TYPE_NAME:
+    case SQL_DESC_NAME:
+    case SQL_DESC_SCHEMA_NAME:
+    case SQL_DESC_TABLE_NAME:
+    case SQL_DESC_TYPE_NAME:
+        isStrField = 1;
+        break;
+    default:
+        isStrField = buffer_length != SQL_IS_POINTER && buffer_length != SQL_IS_INTEGER
+            && buffer_length != SQL_IS_UINTEGER && buffer_length != SQL_IS_SMALLINT &&
+            buffer_length != SQL_IS_USMALLINT;
+    }
+    
+    if ( isStrField && buffer_length < 0 && buffer_length != SQL_NTS)
+    {
+        __post_internal_error( &descriptor -> error,
+            ERROR_HY090, NULL,
+            descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    if ( field_identifier == SQL_DESC_COUNT && (SQLINTEGER)value < 0 )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_07009, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+    }
+
+    if ( field_identifier == SQL_DESC_PARAMETER_TYPE && value != SQL_PARAM_INPUT
+        && value != SQL_PARAM_OUTPUT && value != SQL_PARAM_INPUT_OUTPUT &&
+        value != SQL_PARAM_INPUT_OUTPUT_STREAM && value != SQL_PARAM_OUTPUT_STREAM )
+    {
+        __post_internal_error( &descriptor -> error,
+                ERROR_HY105, NULL,
+                descriptor -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if ( descriptor -> connection -> unicode_driver ||
@@ -229,7 +323,7 @@
                 ERROR_IM001, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        	return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        	return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
 		}
 
     	ret = SQLSETDESCFIELDW( descriptor -> connection,
@@ -268,7 +362,7 @@
                 ERROR_IM001, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        	return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        	return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
 		}
 
 		/*
diff -Naur orig/DriverManager/SQLSetDescRec.c patched/DriverManager/SQLSetDescRec.c
--- orig/DriverManager/SQLSetDescRec.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetDescRec.c	2017-09-23 17:45:53.147070807 +0200
@@ -151,7 +151,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     /*
@@ -177,7 +177,7 @@
                 ERROR_HY010, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR );
     }
 
     if ( !CHECK_SQLSETDESCREC( descriptor -> connection ))
@@ -186,7 +186,7 @@
                 ERROR_IM001, NULL,
                 descriptor -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_DESC, descriptor, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_DESC, descriptor, SQL_ERROR ); 
     }
 
     ret = SQLSETDESCREC( descriptor -> connection,
diff -Naur orig/DriverManager/SQLSetEnvAttr.c patched/DriverManager/SQLSetEnvAttr.c
--- orig/DriverManager/SQLSetEnvAttr.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetEnvAttr.c	2017-09-23 17:45:53.155070902 +0200
@@ -214,7 +214,7 @@
                         ERROR_HY024, NULL,
                         environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             environment -> connection_pooling = ptr;
@@ -238,7 +238,7 @@
                         ERROR_HY024, NULL,
                         environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
 
             environment -> cp_match = ptr;
@@ -263,7 +263,7 @@
                         ERROR_HY024, NULL,
                         environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
             else
             {
@@ -279,10 +279,11 @@
                             ERROR_S1010, NULL,
                             environment -> requested_version );
 
-                    return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                    return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
                 }
 
                 environment -> requested_version = ptr;
+                environment -> version_set = 1;
             }
         }
         break;
@@ -310,7 +311,7 @@
                         ERROR_HYC00, NULL,
                         environment -> requested_version );
 
-                return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
             }
         }
         break;
@@ -329,7 +330,7 @@
              */
             putenv( strdup( str ));
 
-            return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
         }
         break;
 
@@ -351,7 +352,7 @@
                 ERROR_HY092, NULL,
                 environment -> requested_version );
 
-        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
@@ -367,5 +368,5 @@
                 environment -> msg );
     }
 
-    return function_return( SQL_HANDLE_ENV, environment, SQL_SUCCESS );
+    return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_SUCCESS );
 }
diff -Naur orig/DriverManager/SQLSetParam.c patched/DriverManager/SQLSetParam.c
--- orig/DriverManager/SQLSetParam.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetParam.c	2017-09-23 17:45:53.047069612 +0200
@@ -137,6 +137,64 @@
 
 static char const rcsid[]= "$RCSfile: SQLSetParam.c,v $ $Revision: 1.7 $";
 
+int check_value_type( int c_type, int connection_mode)
+{
+    /*
+ *      * driver defined types
+ *           */
+    if ( connection_mode >= SQL_OV_ODBC3_80 && c_type >= 0x4000 && c_type <= 0x7FFF ) {
+        return 1;
+    }
+
+        switch( c_type ) {
+                case SQL_C_CHAR:
+                case SQL_C_LONG:
+                case SQL_C_SHORT:
+                case SQL_C_FLOAT:
+                case SQL_C_NUMERIC:
+                case SQL_C_DEFAULT:
+                case SQL_C_DATE:
+                case SQL_C_TIME:
+                case SQL_C_TIMESTAMP:
+                case SQL_C_TYPE_DATE:
+                case SQL_C_TYPE_TIME:
+                case SQL_C_TYPE_TIMESTAMP:
+                case SQL_C_INTERVAL_YEAR:
+                case SQL_C_INTERVAL_MONTH:
+                case SQL_C_INTERVAL_DAY:
+                case SQL_C_INTERVAL_HOUR:
+                case SQL_C_INTERVAL_MINUTE:
+                case SQL_C_INTERVAL_SECOND:
+                case SQL_C_INTERVAL_YEAR_TO_MONTH:
+                case SQL_C_INTERVAL_DAY_TO_HOUR:
+                case SQL_C_INTERVAL_DAY_TO_MINUTE:
+                case SQL_C_INTERVAL_DAY_TO_SECOND:
+                case SQL_C_INTERVAL_HOUR_TO_MINUTE:
+                case SQL_C_INTERVAL_HOUR_TO_SECOND:
+                case SQL_C_INTERVAL_MINUTE_TO_SECOND:
+                case SQL_C_BINARY:
+                case SQL_C_BIT:
+                case SQL_C_SBIGINT:
+                case SQL_C_UBIGINT:
+                case SQL_C_TINYINT:
+                case SQL_C_SLONG:
+                case SQL_C_SSHORT:
+                case SQL_C_STINYINT:
+                case SQL_C_ULONG:
+                case SQL_C_USHORT:
+                case SQL_C_UTINYINT:
+                case SQL_C_GUID:
+                case SQL_C_WCHAR:
+                case SQL_ARD_TYPE:
+                case SQL_C_DOUBLE:
+                /* case SQL_C_XML: still trying to find what value this is */
+                        return 1;
+
+                default:
+                        return 0;
+        }
+}
+
 SQLRETURN SQLSetParam( SQLHSTMT statement_handle,
            SQLUSMALLINT parameter_number,
            SQLSMALLINT value_type,
@@ -211,10 +269,10 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLSETPARAM );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( value_type == 0 )
+    if (!check_value_type( value_type, statement -> connection -> environment -> requested_version ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -227,7 +285,23 @@
                 statement -> connection -> environment -> requested_version,
                 SQL_API_SQLSETPARAM );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+
+    if ( parameter_value == NULL && strlen_or_ind == NULL && value_type != SQL_PARAM_OUTPUT )
+    {
+        dm_log_write( __FILE__, 
+                __LINE__, 
+                LOG_INFO, 
+                LOG_INFO, 
+                "Error: HY009" );
+
+        __post_internal_error_api( &statement -> error,
+                ERROR_HY009, NULL,
+                statement -> connection -> environment -> requested_version,
+                SQL_API_SQLSETPARAM );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -253,7 +327,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( CHECK_SQLSETPARAM( statement -> connection ))
@@ -306,7 +380,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLSetPos.c patched/DriverManager/SQLSetPos.c
--- orig/DriverManager/SQLSetPos.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetPos.c	2017-09-23 17:45:53.131070616 +0200
@@ -184,7 +184,7 @@
                 ERROR_HY092, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( flock != SQL_LOCK_NO_CHANGE &&
@@ -201,7 +201,7 @@
                 ERROR_HY092, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     /*
@@ -222,10 +222,11 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( statement -> state == STATE_S4 )
+    if ( statement -> state == STATE_S4 || statement -> state == STATE_S5 ||
+         (foption != SQL_ADD && statement -> state == STATE_S7 && statement -> eod ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -237,7 +238,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S8 ||
@@ -257,12 +258,20 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
             statement -> state == STATE_S12 )
     {
+        if ( statement -> interupted_func == SQL_API_SQLEXTENDEDFETCH )
+        {
+            __post_internal_error( &statement -> error,
+                    ERROR_24000, NULL,
+                    statement -> connection -> environment -> requested_version );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        }
+
         if ( statement -> interupted_func != SQL_API_SQLSETPOS )
         {
             dm_log_write( __FILE__, 
@@ -275,7 +284,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -291,7 +300,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
      }
 
     ret = SQLSETPOS( statement -> connection,
@@ -305,10 +314,14 @@
         statement -> interupted_func = SQL_API_SQLSETPOS;
         if ( statement -> state != STATE_S11 &&
                 statement -> state != STATE_S12 )
+        {
+            statement -> interupted_state = statement -> state;
             statement -> state = STATE_S11;
     }
-    else if ( SQL_SUCCEEDED( ret ))
+    }
+    else if ( SQL_SUCCEEDED( ret ) && (statement -> state == STATE_S11 || statement -> state == STATE_S12))
     {
+        statement -> state = statement -> interupted_state;
     }
     else if ( ret == SQL_NEED_DATA )
     {
@@ -316,6 +329,10 @@
         statement -> interupted_state = statement -> state;
         statement -> state = STATE_S8;
     }
+    else if (statement -> state == STATE_S11 || statement -> state == STATE_S12 )
+    {
+        statement -> state = statement -> interupted_state;
+    }
 
     if ( log_info.log_flag )
     {
diff -Naur orig/DriverManager/SQLSetScrollOptions.c patched/DriverManager/SQLSetScrollOptions.c
--- orig/DriverManager/SQLSetScrollOptions.c	2013-12-06 11:51:45.134739579 +0100
+++ patched/DriverManager/SQLSetScrollOptions.c	2017-09-23 17:45:53.063069803 +0200
@@ -205,13 +205,14 @@
                 ERROR_S1010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( crow_keyset != SQL_SCROLL_FORWARD_ONLY &&
             crow_keyset != SQL_SCROLL_STATIC &&
             crow_keyset != SQL_SCROLL_KEYSET_DRIVEN &&
-            crow_keyset != SQL_SCROLL_DYNAMIC )
+            crow_keyset != SQL_SCROLL_DYNAMIC  ||
+            !crow_rowset)
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -223,7 +224,7 @@
                 ERROR_S1107, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( f_concurrency != SQL_CONCUR_READ_ONLY &&
@@ -241,7 +242,7 @@
                 ERROR_S1108, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( CHECK_SQLSETSCROLLOPTIONS( statement -> connection ))
@@ -295,7 +296,7 @@
                         ERROR_S1107, NULL,
                         statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
             break;
         }
@@ -551,7 +552,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( log_info.log_flag )
diff -Naur orig/DriverManager/SQLSetStmtAttr.c patched/DriverManager/SQLSetStmtAttr.c
--- orig/DriverManager/SQLSetStmtAttr.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetStmtAttr.c	2017-09-23 17:45:53.167071046 +0200
@@ -294,7 +294,7 @@
                  ERROR_HY011, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S4 ||
                 statement -> state == STATE_S5 ||
@@ -311,7 +311,7 @@
                  ERROR_24000, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S8 ||
                 statement -> state == STATE_S9 ||
@@ -334,7 +334,7 @@
                      ERROR_HY011, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
             else
             {
@@ -348,7 +348,7 @@
                      ERROR_HY010, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
     }
@@ -370,7 +370,7 @@
                  ERROR_HY010, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -388,7 +388,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -510,7 +510,7 @@
                     ERROR_HY017, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( desc -> connection !=
@@ -526,7 +526,7 @@
                     ERROR_HY024, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
@@ -652,7 +652,7 @@
                     ERROR_HY017, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( desc -> connection !=
@@ -668,7 +668,7 @@
                     ERROR_HY024, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
@@ -701,7 +701,7 @@
                 ERROR_HY017, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -721,7 +721,7 @@
                 ERROR_HY024, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -900,7 +900,7 @@
                     ERROR_HY092, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSETSTMTOPTION( statement -> connection,
diff -Naur orig/DriverManager/SQLSetStmtAttrW.c patched/DriverManager/SQLSetStmtAttrW.c
--- orig/DriverManager/SQLSetStmtAttrW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetStmtAttrW.c	2017-09-23 17:45:53.127070568 +0200
@@ -195,7 +195,7 @@
                  ERROR_HY011, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S4 ||
                 statement -> state == STATE_S5 ||
@@ -212,7 +212,7 @@
                  ERROR_24000, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S8 ||
                 statement -> state == STATE_S9 ||
@@ -235,7 +235,7 @@
                      ERROR_HY011, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
             else
             {
@@ -249,7 +249,7 @@
                      ERROR_HY010, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
     }
@@ -271,7 +271,7 @@
                  ERROR_HY010, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -290,7 +290,7 @@
                 	ERROR_IM001, NULL,
                 	statement -> connection -> environment -> requested_version );
 	
-        	return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        	return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     	}
 	}
 	else
@@ -307,7 +307,7 @@
                 	ERROR_IM001, NULL,
                 	statement -> connection -> environment -> requested_version );
 	
-        	return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        	return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     	}
 	}
 
@@ -319,6 +319,87 @@
     {
         DMHDESC desc = ( DMHDESC ) value;
 
+   		/*
+		 * needs to reset to implicit descriptor, this is safe
+		 * without a validate, as the value is either null, or the
+		 * same as a descriptor we know is valid
+		 */
+
+		if ( desc == NULL || desc == statement -> implicit_ard ) 
+		{
+			DRV_SQLHDESC drv_desc = NULL;
+
+			ret = SQL_SUCCESS;
+			
+			if ( desc == statement -> implicit_ard )
+			{
+				drv_desc = statement -> implicit_ard -> driver_desc;
+			}
+
+        	if ( CHECK_SQLSETSTMTATTRW( statement -> connection ))
+        	{
+           	 	ret = SQLSETSTMTATTRW( statement -> connection,
+           	     	statement -> driver_stmt,
+           	     	attribute,
+           	     	statement -> implicit_ard -> driver_desc,
+           	     	0 );
+        	}
+        	else if ( CHECK_SQLSETSTMTATTR( statement -> connection ))
+        	{
+            	ret = SQLSETSTMTATTR( statement -> connection,
+                	statement -> driver_stmt,
+                	attribute,
+                	drv_desc,
+                	0 );
+        	}
+            else
+            {
+                ret = SQLSETSTMTOPTION( statement -> connection,
+                    statement -> driver_stmt,
+                    attribute,
+                    statement -> implicit_ard -> driver_desc );
+            }
+
+			if ( ret != SQL_SUCCESS ) 
+			{
+    			if ( log_info.log_flag )
+    			{
+        			sprintf( statement -> msg, 
+                			"\n\t\tExit:[%s]",
+                    			__get_return_status( ret, s1 ));
+			
+        			dm_log_write( __FILE__, 
+                			__LINE__, 
+                			LOG_INFO, 
+                			LOG_INFO, 
+                			statement -> msg );
+    			}
+			
+    			return function_return( SQL_HANDLE_STMT, statement, ret ); 
+			}
+			
+			/*
+			 * copy DM descriptor
+			 */
+
+			statement -> apd = statement -> implicit_apd;
+
+    		if ( log_info.log_flag )
+    		{
+        		sprintf( statement -> msg, 
+                		"\n\t\tExit:[%s]",
+                    		__get_return_status( ret, s1 ));
+
+        		dm_log_write( __FILE__, 
+                		__LINE__, 
+                		LOG_INFO, 
+                		LOG_INFO, 
+                		statement -> msg );
+    		}
+		
+    		return function_return( SQL_HANDLE_STMT, statement, ret ); 
+		}
+
         if ( !__validate_desc( desc ))
         {
             thread_release( SQL_HANDLE_STMT, statement );
@@ -339,7 +420,7 @@
                     ERROR_HY017, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( desc -> connection !=
@@ -355,7 +436,7 @@
                     ERROR_HY024, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
@@ -370,6 +451,87 @@
     {
         DMHDESC desc = ( DMHDESC ) value;
 
+		/*
+		 * needs to reset to implicit descriptor, this is safe
+		 * without a validate, as the value is either null, or the
+		 * same as a descriptor we know is valid
+		 */
+
+		if ( desc == NULL || desc == statement -> implicit_apd ) 
+		{
+			DRV_SQLHDESC drv_desc = NULL;
+
+			ret = SQL_SUCCESS;
+			
+			if ( desc == statement -> implicit_apd )
+			{
+				drv_desc = statement -> implicit_apd -> driver_desc;
+			}
+
+        	if ( CHECK_SQLSETSTMTATTRW( statement -> connection ))
+        	{
+           	 	ret = SQLSETSTMTATTRW( statement -> connection,
+           	     	statement -> driver_stmt,
+           	     	attribute,
+                	statement -> implicit_apd -> driver_desc,
+           	     	0 );
+        	}
+        	else if ( CHECK_SQLSETSTMTATTR( statement -> connection ))
+        	{
+            	ret = SQLSETSTMTATTR( statement -> connection,
+                	statement -> driver_stmt,
+                	attribute,
+                	statement -> implicit_apd -> driver_desc,
+                	0 );
+        	}
+            else
+            {
+                ret = SQLSETSTMTOPTION( statement -> connection,
+                    statement -> driver_stmt,
+                    attribute,
+                    drv_desc );
+            }
+
+			if ( ret != SQL_SUCCESS ) 
+			{
+    			if ( log_info.log_flag )
+    			{
+        			sprintf( statement -> msg, 
+                			"\n\t\tExit:[%s]",
+                    			__get_return_status( ret, s1 ));
+			
+        			dm_log_write( __FILE__, 
+                			__LINE__, 
+                			LOG_INFO, 
+                			LOG_INFO, 
+                			statement -> msg );
+    			}
+			
+    			return function_return( SQL_HANDLE_STMT, statement, ret ); 
+			}
+			
+			/*
+			 * copy DM descriptor
+			 */
+
+			statement -> apd = statement -> implicit_apd;
+
+    		if ( log_info.log_flag )
+    		{
+        		sprintf( statement -> msg, 
+                		"\n\t\tExit:[%s]",
+                    		__get_return_status( ret, s1 ));
+
+        		dm_log_write( __FILE__, 
+                		__LINE__, 
+                		LOG_INFO, 
+                		LOG_INFO, 
+                		statement -> msg );
+    		}
+		
+    		return function_return( SQL_HANDLE_STMT, statement, ret ); 
+		}
+
         if ( !__validate_desc( desc ))
         {
             sprintf( statement -> msg, 
@@ -400,7 +562,7 @@
                     ERROR_HY017, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         if ( desc -> connection !=
@@ -416,7 +578,7 @@
                     ERROR_HY024, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         /*
@@ -449,7 +611,7 @@
                 ERROR_HY017, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -469,7 +631,7 @@
                 ERROR_HY024, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
diff -Naur orig/DriverManager/SQLSetStmtOption.c patched/DriverManager/SQLSetStmtOption.c
--- orig/DriverManager/SQLSetStmtOption.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetStmtOption.c	2017-09-23 17:45:53.151070855 +0200
@@ -224,7 +224,7 @@
                  ERROR_S1011, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S4 ||
                 statement -> state == STATE_S5 ||
@@ -241,7 +241,7 @@
                  ERROR_24000, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S8 ||
                 statement -> state == STATE_S9 ||
@@ -264,7 +264,7 @@
                      ERROR_S1011, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
             else
             {
@@ -278,7 +278,7 @@
                      ERROR_S1010, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
     }
@@ -300,7 +300,7 @@
                  ERROR_S1010, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -317,7 +317,7 @@
                 ERROR_HY017, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -337,7 +337,7 @@
                 ERROR_HY024, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -455,7 +455,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
diff -Naur orig/DriverManager/SQLSetStmtOptionW.c patched/DriverManager/SQLSetStmtOptionW.c
--- orig/DriverManager/SQLSetStmtOptionW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSetStmtOptionW.c	2017-09-23 17:45:53.143070759 +0200
@@ -250,7 +250,7 @@
                  ERROR_S1011, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S4 ||
                 statement -> state == STATE_S5 ||
@@ -267,7 +267,7 @@
                  ERROR_24000, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
         else if ( statement -> state == STATE_S8 ||
                 statement -> state == STATE_S9 ||
@@ -290,7 +290,7 @@
                      ERROR_S1011, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
             else
             {
@@ -304,7 +304,7 @@
                      ERROR_S1010, NULL,
                      statement -> connection -> environment -> requested_version );
 
-                return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+                return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
             }
         }
     }
@@ -326,7 +326,7 @@
                  ERROR_S1010, NULL,
                  statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -343,7 +343,7 @@
                 ERROR_HY017, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -363,7 +363,7 @@
                 ERROR_HY024, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -436,7 +436,7 @@
                 ERROR_IM001, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
diff -Naur orig/DriverManager/SQLSpecialColumns.c patched/DriverManager/SQLSpecialColumns.c
--- orig/DriverManager/SQLSpecialColumns.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSpecialColumns.c	2017-09-23 17:45:53.047069612 +0200
@@ -215,18 +215,30 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    /*
-     * Check the SQL_ATTR_METADATA_ID settings
-     */
+    if ( identifier_type != SQL_BEST_ROWID &&
+            identifier_type != SQL_ROWVER )
+    {
+        dm_log_write( __FILE__, 
+                __LINE__, 
+                LOG_INFO, 
+                LOG_INFO, 
+                "Error: HY097" );
 
-    if ( statement -> metadata_id == SQL_TRUE &&
-            schema_name == NULL )
+        __post_internal_error( &statement -> error,
+                ERROR_HY097, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+
+    if ( name_length1 < 0 && name_length1 != SQL_NTS ||
+         name_length2 < 0 && name_length2 != SQL_NTS )
     {
         __post_internal_error( &statement -> error,
-                ERROR_HY009, NULL,
+                ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( table_name == NULL )
@@ -235,34 +247,30 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
-            ( name_length2 < 0 && name_length3 != SQL_NTS ) ||
-            ( name_length3 < 0 && name_length3 != SQL_NTS ))
+    if ( name_length3 < 0 && name_length3 != SQL_NTS )
     {
         __post_internal_error( &statement -> error,
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( identifier_type != SQL_BEST_ROWID &&
-            identifier_type != SQL_ROWVER )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY097" );
+    /*
+     * Check the SQL_ATTR_METADATA_ID settings
+     */
 
+    if ( statement -> metadata_id == SQL_TRUE &&
+            schema_name == NULL )
+    {
         __post_internal_error( &statement -> error,
-                ERROR_HY097, NULL,
+                ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( scope != SQL_SCOPE_CURROW &&
@@ -279,7 +287,7 @@
                 ERROR_HY098, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     if ( nullable != SQL_NO_NULLS &&
@@ -295,7 +303,7 @@
                 ERROR_HY099, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -321,7 +329,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -340,7 +348,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -358,7 +366,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -379,7 +387,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( catalog_name, name_length1, statement -> connection, &wlen );
@@ -422,7 +430,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSPECIALCOLUMNS( statement -> connection ,
diff -Naur orig/DriverManager/SQLSpecialColumnsW.c patched/DriverManager/SQLSpecialColumnsW.c
--- orig/DriverManager/SQLSpecialColumnsW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLSpecialColumnsW.c	2017-09-23 17:45:53.135070663 +0200
@@ -182,18 +182,30 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    /*
-     * Check the SQL_ATTR_METADATA_ID settings
-     */
+    if ( identifier_type != SQL_BEST_ROWID &&
+            identifier_type != SQL_ROWVER )
+    {
+        dm_log_write( __FILE__, 
+                __LINE__, 
+                LOG_INFO, 
+                LOG_INFO, 
+                "Error: HY097" );
 
-    if ( statement -> metadata_id == SQL_TRUE &&
-            schema_name == NULL )
+        __post_internal_error( &statement -> error,
+                ERROR_HY097, NULL,
+                statement -> connection -> environment -> requested_version );
+
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
+    }
+
+    if ( name_length1 < 0 && name_length1 != SQL_NTS ||
+         name_length2 < 0 && name_length2 != SQL_NTS )
     {
         __post_internal_error( &statement -> error,
-                ERROR_HY009, NULL,
+                ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( table_name == NULL )
@@ -202,34 +214,30 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if (( name_length1 < 0 && name_length1 != SQL_NTS ) ||
-            ( name_length2 < 0 && name_length3 != SQL_NTS ) ||
-            ( name_length3 < 0 && name_length3 != SQL_NTS ))
+    if ( name_length3 < 0 && name_length3 != SQL_NTS )
     {
         __post_internal_error( &statement -> error,
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( identifier_type != SQL_BEST_ROWID &&
-            identifier_type != SQL_ROWVER )
-    {
-        dm_log_write( __FILE__, 
-                __LINE__, 
-                LOG_INFO, 
-                LOG_INFO, 
-                "Error: HY097" );
+    /*
+     * Check the SQL_ATTR_METADATA_ID settings
+     */
 
+    if ( statement -> metadata_id == SQL_TRUE &&
+            schema_name == NULL )
+    {
         __post_internal_error( &statement -> error,
-                ERROR_HY097, NULL,
+                ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( scope != SQL_SCOPE_CURROW &&
@@ -246,7 +254,7 @@
                 ERROR_HY098, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
 
     if ( nullable != SQL_NO_NULLS &&
@@ -262,7 +270,7 @@
                 ERROR_HY099, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -288,7 +296,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR ); 
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -307,7 +315,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -325,7 +333,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -344,7 +352,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSPECIALCOLUMNSW( statement -> connection ,
@@ -376,7 +384,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( catalog_name, name_length1, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLStatistics.c patched/DriverManager/SQLStatistics.c
--- orig/DriverManager/SQLStatistics.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLStatistics.c	2017-09-23 17:45:53.147070807 +0200
@@ -222,7 +222,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( reserved != SQL_ENSURE &&
@@ -238,7 +238,7 @@
                 ERROR_HY101, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( unique != SQL_INDEX_UNIQUE &&
@@ -254,7 +254,7 @@
                 ERROR_HY100, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -280,7 +280,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -299,7 +299,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -317,7 +317,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -333,7 +333,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> metadata_id == SQL_TRUE ) {
@@ -349,7 +349,7 @@
                     ERROR_HY009, NULL,
                     statement -> connection -> environment -> requested_version );
     
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -370,7 +370,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( catalog_name, name_length1, statement -> connection, &wlen );
@@ -412,7 +412,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSTATISTICS( statement -> connection,
diff -Naur orig/DriverManager/SQLStatisticsW.c patched/DriverManager/SQLStatisticsW.c
--- orig/DriverManager/SQLStatisticsW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLStatisticsW.c	2017-09-23 17:45:53.067069851 +0200
@@ -192,7 +192,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( reserved != SQL_ENSURE &&
@@ -208,11 +208,11 @@
                 ERROR_HY101, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
-    if ( reserved != SQL_INDEX_UNIQUE &&
-            reserved != SQL_INDEX_ALL )
+    if ( unique != SQL_INDEX_UNIQUE &&
+            unique != SQL_INDEX_ALL )
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -224,7 +224,7 @@
                 ERROR_HY100, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -250,7 +250,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -269,7 +269,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -287,7 +287,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -303,7 +303,7 @@
                 ERROR_HY009, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> metadata_id == SQL_TRUE ) {
@@ -319,7 +319,7 @@
                     ERROR_HY009, NULL,
                     statement -> connection -> environment -> requested_version );
     
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -338,7 +338,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLSTATISTICSW( statement -> connection,
@@ -369,7 +369,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( catalog_name, name_length1, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLTablePrivileges.c patched/DriverManager/SQLTablePrivileges.c
--- orig/DriverManager/SQLTablePrivileges.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLTablePrivileges.c	2017-09-23 17:45:53.067069851 +0200
@@ -200,9 +200,9 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
-            ( cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
-            ( cb_table_name < 0 && cb_table_name != SQL_NTS ))
+    if (( sz_catalog_name && cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
+            ( sz_schema_name && cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
+            ( sz_table_name && cb_table_name < 0 && cb_table_name != SQL_NTS ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -214,7 +214,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -240,7 +240,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -259,7 +259,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -277,7 +277,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -302,7 +302,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &wlen );
@@ -342,7 +342,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLTABLEPRIVILEGES( statement -> connection ,
diff -Naur orig/DriverManager/SQLTablePrivilegesW.c patched/DriverManager/SQLTablePrivilegesW.c
--- orig/DriverManager/SQLTablePrivilegesW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLTablePrivilegesW.c	2017-09-23 17:45:53.071069899 +0200
@@ -175,9 +175,9 @@
 
     thread_protect( SQL_HANDLE_STMT, statement );
 
-    if (( cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
-            ( cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
-            ( cb_table_name < 0 && cb_table_name != SQL_NTS ))
+    if (( sz_catalog_name && cb_catalog_name < 0 && cb_catalog_name != SQL_NTS ) ||
+            ( sz_schema_name && cb_schema_name < 0 && cb_schema_name != SQL_NTS ) ||
+            ( sz_table_name && cb_table_name < 0 && cb_table_name != SQL_NTS ))
     {
         dm_log_write( __FILE__, 
                 __LINE__, 
@@ -189,7 +189,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -215,7 +215,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -234,7 +234,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -252,7 +252,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -275,7 +275,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLTABLEPRIVILEGESW( statement -> connection ,
@@ -304,7 +304,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( sz_catalog_name, cb_catalog_name, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLTables.c patched/DriverManager/SQLTables.c
--- orig/DriverManager/SQLTables.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLTables.c	2017-09-23 17:45:53.167071046 +0200
@@ -237,7 +237,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -263,7 +263,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -282,7 +282,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -300,7 +300,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -325,7 +325,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         s1 = ansi_to_unicode_alloc( catalog_name, name_length1, statement -> connection, &wlen );
@@ -371,7 +371,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLTABLES( statement -> connection ,
diff -Naur orig/DriverManager/SQLTablesW.c patched/DriverManager/SQLTablesW.c
--- orig/DriverManager/SQLTablesW.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLTablesW.c	2017-09-23 17:45:53.151070855 +0200
@@ -203,7 +203,7 @@
                 ERROR_HY090, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     /*
@@ -229,7 +229,7 @@
                 ERROR_24000, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
     else if ( statement -> state == STATE_S8 ||
             statement -> state == STATE_S9 ||
@@ -248,7 +248,7 @@
                 ERROR_HY010, NULL,
                 statement -> connection -> environment -> requested_version );
 
-        return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+        return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
     }
 
     if ( statement -> state == STATE_S11 ||
@@ -266,7 +266,7 @@
                     ERROR_HY010, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
     }
 
@@ -289,7 +289,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         ret = SQLTABLESW( statement -> connection ,
@@ -320,7 +320,7 @@
                     ERROR_IM001, NULL,
                     statement -> connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_STMT, statement, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_STMT, statement, SQL_ERROR );
         }
 
         as1 = (SQLCHAR*) unicode_to_ansi_alloc( catalog_name, name_length1, statement -> connection, &clen );
diff -Naur orig/DriverManager/SQLTransact.c patched/DriverManager/SQLTransact.c
--- orig/DriverManager/SQLTransact.c	2015-08-22 18:39:05.134739579 +0200
+++ patched/DriverManager/SQLTransact.c	2017-09-23 17:45:53.091070138 +0200
@@ -229,7 +229,7 @@
                     ERROR_08003, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         /*
@@ -248,7 +248,7 @@
                     ERROR_HY010, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( completion_type != SQL_COMMIT &&
@@ -264,7 +264,7 @@
                     ERROR_HY012, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
         if ( CHECK_SQLTRANSACT( connection ))
@@ -293,10 +293,10 @@
                     ERROR_IM001, NULL,
                     connection -> environment -> requested_version );
 
-            return function_return( SQL_HANDLE_DBC, connection, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_DBC, connection, SQL_ERROR );
         }
 
-        if( SQL_SUCCEEDED(ret) )
+        if( SQL_SUCCEEDED(ret) && connection -> auto_commit == SQL_AUTOCOMMIT_OFF )
         {
             SQLSMALLINT cb_value;
             SQLSMALLINT cb_value_length = sizeof(SQLSMALLINT);
@@ -405,7 +405,7 @@
                     ERROR_HY012, NULL,
                     environment -> requested_version );
 
-            return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+            return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
         }
 
         if ( environment -> state == STATE_E2 )
@@ -433,7 +433,7 @@
                                 ERROR_HY010, NULL,
                                 environment -> requested_version );
             
-                        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
                     }
                 }
 
@@ -509,7 +509,7 @@
                             ERROR_IM001, NULL,
                             environment -> requested_version );
 
-                        return function_return( SQL_HANDLE_ENV, environment, SQL_ERROR );
+                        return function_return_nodrv( SQL_HANDLE_ENV, environment, SQL_ERROR );
                     }
                 }
 
diff -Naur orig/exe/isql.c patched/exe/isql.c
--- orig/exe/isql.c	2014-05-05 10:26:41.134739579 +0200
+++ patched/exe/isql.c	2017-09-23 17:45:53.791078000 +0200
@@ -74,6 +74,14 @@
     int     line_buffer_size = 9000;
     int     bufpos,linen;
     char    prompt[24];
+#ifdef HAVE_READLINE
+    char    *rlhistory; /* readline history path */
+
+    rlhistory = strdup(getenv("HOME"));
+    rlhistory = realloc(rlhistory, strlen(rlhistory)+16);
+    strcat(rlhistory, "/.isql_history");
+    read_history(rlhistory);
+#endif
 
     szDSN = NULL;
     szUID = NULL;
@@ -250,14 +258,24 @@
             if ( !line )        /* EOF - ctrl D */
             {
                 malloced = 1;
-                line = strdup( "quit" );
+                if ( bNewStyle )
+                {
+                    line = strdup( "\\quit" );
+                }
+                else
+                {
+                    line = strdup( "quit" );
+                }
             }
             else
             {
                 malloced = 0;
             }
 
-            add_history(line);
+            if ( strcmp(line, "quit") && strcmp(line, "\\quit") ) 
+            {
+                add_history(line);
+            }
 #else
             fputs( prompt, stdout );
 
@@ -265,14 +283,28 @@
             if ( !line )        /* EOF - ctrl D */
             {
                 malloced = 1;
-                line = strdup( "quit" );
+                if ( bNewStyle )
+                {
+                    line = strdup( "\\quit" );
+                }
+                else
+                {
+                    line = strdup( "quit" );
+                }
             }
             else
             {
 				if ( line[ 0 ] == '\n' ) 
 				{
 					malloced = 1;
-					line = strdup( "quit" );
+                    if ( bNewStyle )
+                    {
+                        line = strdup( "\\quit" );
+                    }
+                    else
+                    {
+					    line = strdup( "quit" );
+                    }
 				}
 				else 
 				{
@@ -287,14 +319,28 @@
             if ( !line )        /* EOF - ctrl D */
             {
                 malloced = 1;
-                line = strdup( "quit" );
+                if ( bNewStyle )
+                {
+                    line = strdup( "\\quit" );
+                }
+                else
+                {
+                    line = strdup( "quit" );
+                }
             }
             else
             {
 				if ( line[ 0 ] == '\n' ) 
 				{
 					malloced = 1;
-					line = strdup( "quit" );
+                    if ( bNewStyle )
+                    {
+                        line = strdup( "\\quit" );
+                    }
+                    else
+                    {
+					    line = strdup( "quit" );
+                    }
 				}
 				else 
 				{
@@ -450,6 +496,11 @@
     /****************************
      * DISCONNECT
      ***************************/
+
+#ifdef HAVE_READLINE
+    write_history(rlhistory);
+#endif
+
     CloseDatabase( hEnv, hDbc );
 
     exit( 0 );
@@ -1681,7 +1732,7 @@
     {
         if ( hStmt )
         {
-            while ( SQLError( hEnv, hDbc, hStmt, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )
+            while ( SQL_SUCCEEDED( SQLError( hEnv, hDbc, hStmt, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))
             {
                 printf( "[%s]%s\n", szSqlState, szError );
             }
@@ -1689,7 +1740,7 @@
 
         if ( hDbc )
         {
-            while ( SQLError( hEnv, hDbc, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )
+            while ( SQL_SUCCEEDED( SQLError( hEnv, hDbc, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))
             {
                 printf( "[%s]%s\n", szSqlState, szError );
             }
@@ -1697,7 +1748,7 @@
 
         if ( hEnv )
         {
-            while ( SQLError( hEnv, 0, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg ) == SQL_SUCCESS )
+            while ( SQL_SUCCEEDED( SQLError( hEnv, 0, 0, szSqlState, &nNativeError, szError, 500, &nErrorMsg )))
             {
                 printf( "[%s]%s\n", szSqlState, szError );
             }
diff -Naur orig/exe/iusql.c patched/exe/iusql.c
--- orig/exe/iusql.c	2013-12-06 11:51:44.134739579 +0100
+++ patched/exe/iusql.c	2017-09-23 17:45:53.787078000 +0200
@@ -49,6 +49,7 @@
 int     bVerbose                    = 0;
 SQLHENV hEnv                        = 0;
 SQLHDBC hDbc                        = 0;
+int     buseED                      = 0;
 
 void UWriteHeaderNormal( SQLHSTMT hStmt, SQLTCHAR *szSepLine );
 void UWriteFooterNormal( SQLHSTMT hStmt, SQLTCHAR *szSepLine, SQLLEN nRows );
@@ -138,6 +139,9 @@
                 case 'v':
                     bVerbose = 1;
                     break;
+                case 'e':
+                    buseED = 1;
+                    break;
                 case '-':
                     printf( "unixODBC " VERSION "\n" );
                     exit(0);
@@ -392,31 +396,54 @@
         return 0;
     }
 
-    if ( SQLPrepare( hStmt, szUcSQL, SQL_NTS ) != SQL_SUCCESS )
-    {
-        if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
-        fprintf( stderr, "[ISQL]ERROR: Could not SQLPrepare\n" );
-        SQLFreeStmt( hStmt, SQL_DROP );
-        return 0;
-    }
-
-    ret =  SQLExecute( hStmt );
+    if ( buseED ) {
+        ret = SQLExecDirect( hStmt, szUcSQL, SQL_NTS );
 
-    if ( ret == SQL_NO_DATA )
-    {
-        fprintf( stderr, "[ISQL]INFO: SQLExecute returned SQL_NO_DATA\n" );
-    }
-    else if ( ret == SQL_SUCCESS_WITH_INFO )
-    {
-        if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
-        fprintf( stderr, "[ISQL]INFO: SQLExecute returned SQL_SUCCESS_WITH_INFO\n" );
+        if ( ret == SQL_NO_DATA )
+        {
+            fprintf( stderr, "[ISQL]INFO: SQLExecDirect returned SQL_NO_DATA\n" );
+        }
+        else if ( ret == SQL_SUCCESS_WITH_INFO )
+        {
+            if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
+            fprintf( stderr, "[ISQL]INFO: SQLExecDirect returned SQL_SUCCESS_WITH_INFO\n" );
+        }
+        else if ( ret != SQL_SUCCESS )
+        {
+            if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
+            fprintf( stderr, "[ISQL]ERROR: Could not SQLExecDirect\n" );
+            SQLFreeStmt( hStmt, SQL_DROP );
+            free(szSepLine);
+            return 0;
+        }
     }
-    else if ( ret != SQL_SUCCESS )
-    {
-        if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
-        fprintf( stderr, "[ISQL]ERROR: Could not SQLExecute\n" );
-        SQLFreeStmt( hStmt, SQL_DROP );
-        return 0;
+    else {
+        if ( SQLPrepare( hStmt, szUcSQL, SQL_NTS ) != SQL_SUCCESS )
+        {
+            if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
+            fprintf( stderr, "[ISQL]ERROR: Could not SQLPrepare\n" );
+            SQLFreeStmt( hStmt, SQL_DROP );
+            return 0;
+        }
+    
+        ret =  SQLExecute( hStmt );
+    
+        if ( ret == SQL_NO_DATA )
+        {
+            fprintf( stderr, "[ISQL]INFO: SQLExecute returned SQL_NO_DATA\n" );
+        }
+        else if ( ret == SQL_SUCCESS_WITH_INFO )
+        {
+            if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
+            fprintf( stderr, "[ISQL]INFO: SQLExecute returned SQL_SUCCESS_WITH_INFO\n" );
+        }
+        else if ( ret != SQL_SUCCESS )
+        {
+            if ( bVerbose ) DumpODBCLog( hEnv, hDbc, hStmt );
+            fprintf( stderr, "[ISQL]ERROR: Could not SQLExecute\n" );
+            SQLFreeStmt( hStmt, SQL_DROP );
+            return 0;
+        }
     }
 
     do 
diff -Naur orig/odbcinst/_logging.c patched/odbcinst/_logging.c
--- orig/odbcinst/_logging.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/_logging.c	2017-09-23 17:45:53.579076000 +0200
@@ -61,7 +61,7 @@
 static pth_mutex_t mutex_log = PTH_MUTEX_INIT;
 static int pth_init_called = 0;
 
-static int mutex_entry( void )
+static int local_mutex_entry( void )
 {
     if ( !pth_init_called )
     {
@@ -71,7 +71,7 @@
     return pth_mutex_acquire( &mutex_log, 0, NULL );
 }
 
-static int mutex_exit( void )
+static int local_mutex_exit( void )
 {
     return pth_mutex_release( &mutex_log );
 }
@@ -82,12 +82,12 @@
 
 static pthread_mutex_t mutex_log = PTHREAD_MUTEX_INITIALIZER;
 
-static int mutex_entry( void )
+static int local_mutex_entry( void )
 {
     return pthread_mutex_lock( &mutex_log );
 }
 
-static int mutex_exit( void )
+static int local_mutex_exit( void )
 {
     return pthread_mutex_unlock( &mutex_log );
 }
@@ -98,20 +98,20 @@
 
 static mutex_t mutex_log;
 
-static int mutex_entry( void )
+static int local_mutex_entry( void )
 {
     return mutex_lock( &mutex_log );
 }
 
-static int mutex_exit( void )
+static int local_mutex_exit( void )
 {
     return mutex_unlock( &mutex_log );
 }
 
 #else
 
-#define mutex_entry()
-#define mutex_exit()
+#define local_mutex_entry()
+#define local_mutex_exit()
 
 #endif
 /*
@@ -128,7 +128,7 @@
 {
     int ret = LOG_ERROR;
 
-    mutex_entry();
+    local_mutex_entry();
 
     if ( !log_tried )
     {
@@ -156,7 +156,7 @@
                 pszMessage );
     }
 
-    mutex_exit();
+    local_mutex_exit();
 
     return ret;
 }
@@ -177,12 +177,12 @@
 {
     int ret = LOG_NO_DATA;
 
-    mutex_entry();
+    local_mutex_entry();
 
     if ( hODBCINSTLog )
         ret = logPeekMsg( hODBCINSTLog, nMsg, phMsg );
 
-    mutex_exit();
+    local_mutex_exit();
 
     return ret;
 }
@@ -191,12 +191,12 @@
 {
     int ret = LOG_ERROR;
 
-    mutex_entry();
+    local_mutex_entry();
 
     if ( hODBCINSTLog ) 
         ret = logClear( hODBCINSTLog );
 
-    mutex_exit();
+    local_mutex_exit();
 
     return ret;
 }
diff -Naur orig/odbcinst/SQLConfigDataSource.c patched/odbcinst/SQLConfigDataSource.c
--- orig/odbcinst/SQLConfigDataSource.c	2015-08-22 18:39:16.134739579 +0200
+++ patched/odbcinst/SQLConfigDataSource.c	2017-09-23 17:45:53.163070000 +0200
@@ -32,7 +32,7 @@
 	char	b1[ ODBC_FILENAME_MAX + 1 ], b2[ ODBC_FILENAME_MAX + 1 ];
 
 	/* SANITY CHECKS */
-	if ( pszDriver == NULL )
+	if ( pszDriver == NULL || pszAttributes == NULL )
 	{
 		inst_logPushMsg( __FILE__, __FILE__, __LINE__, LOG_CRITICAL, ODBC_ERROR_GENERAL_ERR, "" );
 		return FALSE;
@@ -95,7 +95,7 @@
 		if ( szDriverSetup[ 0 ] == '\0' ) 
 		{
 			char szError[ 512 ];
-			sprintf( szError, "Could not find Setup property for (%s) in system information", pszDriver );
+			sprintf( szError, "Could not find Setup property for (%.400s) in system information", pszDriver );
 			inst_logPushMsg( __FILE__, __FILE__, __LINE__, LOG_CRITICAL, ODBC_ERROR_GENERAL_ERR, szError );
         	__set_config_mode( ODBC_BOTH_DSN );
 			return FALSE;
diff -Naur orig/odbcinst/SQLCreateDataSource.c patched/odbcinst/SQLCreateDataSource.c
--- orig/odbcinst/SQLCreateDataSource.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/SQLCreateDataSource.c	2017-09-23 17:45:53.167071000 +0200
@@ -24,6 +24,11 @@
     char *chr;
     int len = 0;
 
+    if ( !in )
+    {
+        return in;
+    }
+
     while ( in[ len ] != 0 || in[ len + 1 ] != 0 )
     {
         len ++;
@@ -48,6 +53,11 @@
     char *chr;
     int len = 0;
 
+    if ( !in )
+    {
+        return in;
+    }
+
     while ( in[ len ] != 0 )
     {
         len ++;
@@ -71,6 +81,11 @@
     SQLWCHAR *chr;
     int len = 0;
 
+    if ( !in )
+    {
+        return in;
+    }
+    
     while ( in[ len ] != 0 || in[ len + 1 ] != 0 )
     {
         len ++;
@@ -95,6 +110,11 @@
     SQLWCHAR *chr;
     int len = 0;
 
+    if ( !in )
+    {
+        return in;
+    }
+
     while ( in[ len ] != 0 )
     {
         len ++;
diff -Naur orig/odbcinst/SQLGetInstalledDrivers.c patched/odbcinst/SQLGetInstalledDrivers.c
--- orig/odbcinst/SQLGetInstalledDrivers.c	2015-08-22 18:39:16.134739579 +0200
+++ patched/odbcinst/SQLGetInstalledDrivers.c	2017-09-23 17:45:53.551075000 +0200
@@ -70,7 +70,7 @@
 	iniClose( hIni );
 
 	if ( pnBufOut )
-		*pnBufOut = nBufPos-1;
+		*pnBufOut = nBufPos;
 	
 	return TRUE;
 }
diff -Naur orig/odbcinst/SQLGetPrivateProfileString.c patched/odbcinst/SQLGetPrivateProfileString.c
--- orig/odbcinst/SQLGetPrivateProfileString.c	2015-08-22 18:39:16.134739579 +0200
+++ patched/odbcinst/SQLGetPrivateProfileString.c	2017-09-23 17:45:53.579076000 +0200
@@ -182,7 +182,7 @@
         if ( pRetBuffer && !ini_cache -> value )
             continue;
 
-        if ( nRetBuffer <= ini_cache -> buffer_size )
+        if ( nRetBuffer < ini_cache -> buffer_size )
             continue;
 
         if ( pRetBuffer )
@@ -204,7 +204,7 @@
     return 0;
 }
 
-static int _save_ini_cache( int ret,
+static void _save_ini_cache( int ret,
                     LPCSTR  pszSection,
                     LPCSTR  pszEntry,
                     LPCSTR  pszDefault,
@@ -219,7 +219,7 @@
     ini_cache = calloc( sizeof( struct ini_cache ), 1 );
     if ( !ini_cache )
     {
-        return 0;
+        return;
     }
 
     if ( pszFileName )
@@ -247,12 +247,37 @@
 
     ini_cache -> next = ini_cache_head;
     ini_cache_head = ini_cache;
+}
 
-    return 0;
+static void _clear_ini_cache( void ) 
+{
+    struct ini_cache *ini_cache = ini_cache_head, *prev = NULL;
+
+    while (( ini_cache = ini_cache_head ) != NULL  )
+    {
+        ini_cache_head = ini_cache -> next;
+
+        if ( ini_cache -> fname )
+            free( ini_cache -> fname );
+
+        if ( ini_cache -> section )
+            free( ini_cache -> section );
+
+        if ( ini_cache -> entry )
+            free( ini_cache -> entry );
+
+        if ( ini_cache -> value )
+            free( ini_cache -> value );
+
+        if ( ini_cache -> default_value )
+            free( ini_cache -> default_value );
+
+        free( ini_cache );
+    }
 }
 
 /*
- * wrappers to provide therad safety
+ * wrappers to provide thread safety
  */
 
 static int check_ini_cache( int *ret,
@@ -275,7 +300,7 @@
 	return rval;
 }
 
-static int save_ini_cache( int ret,
+static void save_ini_cache( int ret,
                     LPCSTR  pszSection,
                     LPCSTR  pszEntry,
                     LPCSTR  pszDefault,
@@ -283,7 +308,7 @@
                     int     nRetBuffer,
                     LPCSTR  pszFileName )
 {
-	int rval, cval;
+	int cval;
 
 	mutex_entry( &mutex_ini );
 
@@ -294,15 +319,21 @@
 	if ( !_check_ini_cache( &cval, pszSection, pszEntry, pszDefault,
 			pRetBuffer, nRetBuffer, pszFileName )) {
 
-		rval = _save_ini_cache( ret, pszSection, pszEntry, pszDefault,
+		_save_ini_cache( ret, pszSection, pszEntry, pszDefault,
 			pRetBuffer, nRetBuffer, pszFileName );
 	}
 
 	mutex_exit( &mutex_ini );
-
-	return rval;
 }
 
+void __clear_ini_cache( void ) 
+{
+	mutex_entry( &mutex_ini );
+
+    _clear_ini_cache();
+
+	mutex_exit( &mutex_ini );
+}
 
 #else
 
@@ -317,7 +348,7 @@
     return 0;
 }
 
-static int save_ini_cache( int ret,
+static void save_ini_cache( int ret,
                     LPCSTR  pszSection,
                     LPCSTR  pszEntry,
                     LPCSTR  pszDefault,
@@ -325,7 +356,10 @@
                     int     nRetBuffer,
                     LPCSTR  pszFileName )
 {
-    return 0;
+}
+
+void __clear_ini_cache( void ) 
+{
 }
 
 #endif
diff -Naur orig/odbcinst/SQLInstallDriverEx.c patched/odbcinst/SQLInstallDriverEx.c
--- orig/odbcinst/SQLInstallDriverEx.c	2015-08-22 18:39:16.134739579 +0200
+++ patched/odbcinst/SQLInstallDriverEx.c	2017-09-23 17:45:53.587075000 +0200
@@ -63,9 +63,9 @@
     if ( pszPathIn )
     {
 #ifdef VMS
-        sprintf( szIniName, "%s:%s", pszPathIn, odbcinst_system_file_name( b2 ) );
+        snprintf( szIniName, sizeof(szIniName), "%s:%s", pszPathIn, odbcinst_system_file_name( b2 ) );
 #else
-        sprintf( szIniName, "%s/%s", pszPathIn, odbcinst_system_file_name( b2 ) );
+        snprintf( szIniName, sizeof(szIniName), "%s/%s", pszPathIn, odbcinst_system_file_name( b2 ) );
 #endif
     }
     else
diff -Naur orig/odbcinst/SQLInstallerError.c patched/odbcinst/SQLInstallerError.c
--- orig/odbcinst/SQLInstallerError.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/SQLInstallerError.c	2017-09-23 17:45:53.559075000 +0200
@@ -97,7 +97,7 @@
 		return SQL_ERROR;
 
     /* this is optional so... */
-    if ( !nErrorMsg )
+    if ( !pnErrorMsg )
         pnErrorMsg = &nErrorMsg;
 
     /* get our message */
@@ -187,5 +187,9 @@
 		}
 	}
 
+    if ( msg ) {
+        free( msg );
+    }
+
 	return ret;
 }
diff -Naur orig/odbcinst/SQLWriteDSNToIni.c patched/odbcinst/SQLWriteDSNToIni.c
--- orig/odbcinst/SQLWriteDSNToIni.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/SQLWriteDSNToIni.c	2017-09-23 17:45:53.563075000 +0200
@@ -13,6 +13,8 @@
 #include <config.h>
 #include <odbcinstext.h>
 
+extern void __clear_ini_cache( void );
+
 BOOL SQLWriteDSNToIni(			LPCSTR	pszDSN,
 								LPCSTR	pszDriver )
 {
@@ -77,6 +79,8 @@
 
 	iniClose( hIni );
 
+    __clear_ini_cache();
+
 	return TRUE;
 }
 
diff -Naur orig/odbcinst/SQLWriteFileDSN.c patched/odbcinst/SQLWriteFileDSN.c
--- orig/odbcinst/SQLWriteFileDSN.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/SQLWriteFileDSN.c	2017-09-23 17:45:53.551075000 +0200
@@ -21,14 +21,14 @@
 
 	if ( pszFileName[0] == '/' )
 	{
-		strcpy( szFileName, pszFileName );
+		strncpy( szFileName, sizeof(szFileName) - 5, pszFileName );
 	}
 	else
 	{	
 		char szPath[ODBC_FILENAME_MAX+1];
 		*szPath = '\0';
 		_odbcinst_FileINI( szPath );
-		sprintf( szFileName, "%s/%s", szPath, pszFileName );
+		snprintf( szFileName, sizeof(szFileName) - 5, "%s/%s", szPath, pszFileName );
 	}
 
     if ( strlen( szFileName ) < 4 || strcmp( szFileName + strlen( szFileName ) - 4, ".dsn" ))
diff -Naur orig/odbcinst/SQLWritePrivateProfileString.c patched/odbcinst/SQLWritePrivateProfileString.c
--- orig/odbcinst/SQLWritePrivateProfileString.c	2013-12-06 11:51:46.134739579 +0100
+++ patched/odbcinst/SQLWritePrivateProfileString.c	2017-09-23 17:45:53.587075000 +0200
@@ -13,6 +13,8 @@
 #include <config.h>
 #include <odbcinstext.h>
 
+extern void __clear_ini_cache( void );
+
 BOOL SQLWritePrivateProfileString(
 								LPCSTR	pszSection,
 								LPCSTR	pszEntry,
@@ -116,6 +118,8 @@
 
 	iniClose( hIni );
 
+    __clear_ini_cache();
+
 	return TRUE;
 }
 
