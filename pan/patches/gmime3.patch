diff -Naur orig/pan/general/utf8-utils.cc patched/pan/general/utf8-utils.cc
--- orig/pan/general/utf8-utils.cc	2011-12-29 23:23:52.134739579 +0100
+++ patched/pan/general/utf8-utils.cc	2017-10-07 21:26:49.880310534 +0200
@@ -136,7 +136,7 @@
 {
   std::string s = content_to_utf8 (header, fallback_charset1, fallback_charset2);
   if (header.strstr ("=?")) {
-    char * decoded (g_mime_utils_header_decode_text ( s.c_str()));
+    char * decoded (g_mime_utils_header_decode_text (NULL, s.c_str()));
     s = clean_utf8 (decoded);
     g_free (decoded);
   }
@@ -152,7 +152,7 @@
   g_return_val_if_fail (GMIME_IS_PART(part), ret);
   const char * charset =
     g_mime_object_get_content_type_parameter (GMIME_OBJECT (part), "charset");
-  GMimeDataWrapper * content = g_mime_part_get_content_object (part);
+  GMimeDataWrapper * content = g_mime_part_get_content (part);
   GMimeStream *stream = g_mime_stream_mem_new ();
 
   g_mime_data_wrapper_write_to_stream (content, stream);
diff -Naur orig/pan/gui/body-pane.cc patched/pan/gui/body-pane.cc
--- orig/pan/gui/body-pane.cc	2017-03-25 18:05:11.134739579 +0100
+++ patched/pan/gui/body-pane.cc	2017-10-07 21:26:50.264314802 +0200
@@ -903,7 +903,7 @@
     GError * err (0);
 
     // populate the loader
-    GMimeDataWrapper * wrapper (g_mime_part_get_content_object (part));
+    GMimeDataWrapper * wrapper (g_mime_part_get_content (part));
     if (wrapper)
     {
       GMimeStream * mem_stream (g_mime_stream_mem_new ());
@@ -2031,7 +2031,7 @@
 
     if (is_reply || fup_to=="poster") {
       const std::string& to (reply_to.empty() ? from : reply_to);
-      pan_g_mime_message_add_recipients_from_string (msg, GMIME_RECIPIENT_TYPE_TO, to.c_str());
+      pan_g_mime_message_add_mailboxs_from_string (msg, GMIME_ADDRESS_TYPE_TO, to.c_str());
     } else {
       const std::string& groups (fup_to.empty() ? newsgroups : fup_to);
       g_mime_object_append_header ((GMimeObject *) msg, "Newsgroups", groups.c_str());
@@ -2107,9 +2107,9 @@
     g_mime_stream_write_string (stream, s.c_str());
     GMimeDataWrapper * wrapper = g_mime_data_wrapper_new_with_stream (stream, GMIME_CONTENT_ENCODING_8BIT);
     GMimePart * part = g_mime_part_new ();
-    GMimeContentType * new_type = g_mime_content_type_new_from_string ("text/plain; charset=UTF-8");
+    GMimeContentType * new_type = g_mime_content_type_parse ("text/plain; charset=UTF-8");
     g_mime_object_set_content_type ((GMimeObject *) part, new_type);
-    g_mime_part_set_content_object (part, wrapper);
+    g_mime_part_set_content (part, wrapper);
     g_mime_part_set_content_encoding (part, GMIME_CONTENT_ENCODING_8BIT);
     g_mime_message_set_mime_part (msg, GMIME_OBJECT(part));
     g_object_unref (new_type);
diff -Naur orig/pan/gui/gui.cc patched/pan/gui/gui.cc
--- orig/pan/gui/gui.cc	2017-04-29 01:33:54.134739579 +0200
+++ patched/pan/gui/gui.cc	2017-10-07 21:26:50.160313646 +0200
@@ -745,7 +745,7 @@
       if (GMIME_IS_PART(o))
       {
         GMimePart * part (GMIME_PART (o));
-        GMimeDataWrapper * wrapper (g_mime_part_get_content_object (part));
+        GMimeDataWrapper * wrapper (g_mime_part_get_content (part));
         GMimeStream * mem_stream (g_mime_stream_mem_new ());
         g_mime_data_wrapper_write_to_stream (wrapper, mem_stream);
         const GByteArray * buffer (GMIME_STREAM_MEM(mem_stream)->buffer);
@@ -1322,7 +1322,7 @@
     return;
 
   // did this user post the message?
-  const char * sender (g_mime_message_get_sender (message));
+  const char * sender (g_mime_messaget_get_from (message));
   const bool user_posted_this (_data.has_from_header (sender));
 
   if (!user_posted_this) {
@@ -1349,7 +1349,7 @@
   GMimeObject * new_message_obj = (GMimeObject*)new_message;
 
   g_mime_object_set_header (new_message_obj, "Supersedes", old_mid);
-  g_mime_message_set_sender (new_message, g_mime_message_get_sender (message));
+  g_mime_message_set_sender (new_message, g_mime_messaget_get_from (message));
   g_mime_message_set_subject (new_message, g_mime_message_get_subject (message));
   g_mime_object_set_header (new_message_obj, "Newsgroups", g_mime_object_get_header ((GMimeObject *)message, "Newsgroups"));
   g_mime_object_set_header (new_message_obj, "References", g_mime_object_get_header ((GMimeObject *)message, "References"));
@@ -1363,7 +1363,7 @@
   g_free (body);
   GMimeDataWrapper * content_object = g_mime_data_wrapper_new_with_stream (stream, GMIME_CONTENT_ENCODING_DEFAULT);
   GMimePart * part = g_mime_part_new ();
-  g_mime_part_set_content_object (part, content_object);
+  g_mime_part_set_content (part, content_object);
   g_mime_message_set_mime_part (new_message, GMIME_OBJECT(part));
   g_object_unref (part);
   g_object_unref (content_object);
@@ -1397,7 +1397,7 @@
     return;
 
   // did this user post the message?
-  const char * sender (g_mime_message_get_sender (message));
+  const char * sender (g_mime_messaget_get_from (message));
   const bool user_posted_this (_data.has_from_header (sender));
   if (!user_posted_this) {
     GtkWidget * w = gtk_message_dialog_new (
@@ -1417,7 +1417,7 @@
   // okay then...
   GMimeMessage * cancel = g_mime_message_new (false);
   char * cancel_message = g_strdup_printf ("cancel <%s>", g_mime_message_get_message_id(message));
-  g_mime_message_set_sender (cancel, g_mime_message_get_sender (message));
+  g_mime_message_set_sender (cancel, g_mime_messaget_get_from (message));
   g_mime_message_set_subject (cancel, "Cancel");
   g_mime_object_set_header ((GMimeObject *)cancel, "Newsgroups", g_mime_object_get_header ((GMimeObject *)message, "Newsgroups"));
   g_mime_object_set_header ((GMimeObject *)cancel, "Control", cancel_message);
@@ -1425,7 +1425,7 @@
   GMimeStream * stream = g_mime_stream_mem_new_with_buffer (body, strlen(body));
   GMimeDataWrapper * content_object = g_mime_data_wrapper_new_with_stream (stream, GMIME_CONTENT_ENCODING_DEFAULT);
   GMimePart * part = g_mime_part_new ();
-  g_mime_part_set_content_object (part, content_object);
+  g_mime_part_set_content (part, content_object);
   g_mime_message_set_mime_part (cancel, GMIME_OBJECT(part));
   g_object_unref (part);
   g_object_unref (content_object);
@@ -1591,7 +1591,7 @@
 
   // content type
   GMimePart * part = g_mime_part_new ();
-  GMimeContentType *type = g_mime_content_type_new_from_string ("text/plain; charset=UTF-8");
+  GMimeContentType *type = g_mime_content_type_parse ("text/plain; charset=UTF-8");
   g_mime_object_set_content_type ((GMimeObject *) part, type);
   g_object_unref (type);
   g_mime_part_set_content_encoding (part, GMIME_CONTENT_ENCODING_8BIT);
diff -Naur orig/pan/gui/post-ui.cc patched/pan/gui/post-ui.cc
--- orig/pan/gui/post-ui.cc	2017-03-25 18:05:12.134739579 +0100
+++ patched/pan/gui/post-ui.cc	2017-10-07 21:26:50.144313468 +0200
@@ -1596,7 +1596,7 @@
   // headers from the ui: To
   const StringView to (gtk_entry_get_text (GTK_ENTRY(_to_entry)));
   if (!to.empty())
-    pan_g_mime_message_add_recipients_from_string (msg, GMIME_RECIPIENT_TYPE_TO, to.str);
+    pan_g_mime_message_add_mailboxs_from_string (msg, GMIME_ADDRESS_TYPE_TO, to.str);
 
   // headers from the ui: Newsgroups
   const StringView groups (gtk_entry_get_text (GTK_ENTRY(_groups_entry)));
@@ -1677,10 +1677,10 @@
     GMimePart * part = g_mime_part_new ();
     pch = g_strdup_printf ("text/plain; charset=%s", charset.c_str());
 
-    GMimeContentType * type = g_mime_content_type_new_from_string (pch);
+    GMimeContentType * type = g_mime_content_type_parse (pch);
     g_free (pch);
     g_mime_object_set_content_type ((GMimeObject *) part, type); // part owns type now. type isn't refcounted.
-    g_mime_part_set_content_object (part, content_object);
+    g_mime_part_set_content (part, content_object);
     if (mode != UPLOADING) g_mime_part_set_content_encoding (part, _enc);
     g_object_unref (content_object);
     g_mime_message_set_mime_part (msg, GMIME_OBJECT(part));
@@ -2260,7 +2260,7 @@
   s = utf8ize (g_mime_object_get_header ((GMimeObject *) message, "Reply-To"));
   gtk_entry_set_text (GTK_ENTRY(_replyto_entry), s.c_str());
 
-  InternetAddressList * addresses = g_mime_message_get_recipients (message, GMIME_RECIPIENT_TYPE_TO);
+  InternetAddressList * addresses = g_mime_message_get_addresses (message, GMIME_ADDRESS_TYPE_TO);
   char * pch  = internet_address_list_to_string (addresses, true);
   s = utf8ize (pch);
   gtk_entry_set_text (GTK_ENTRY(_to_entry), s.c_str());
diff -Naur orig/pan/usenet-utils/gpg.cc patched/pan/usenet-utils/gpg.cc
--- orig/pan/usenet-utils/gpg.cc	2017-03-25 18:05:12.134739579 +0100
+++ patched/pan/usenet-utils/gpg.cc	2017-10-07 21:26:50.344315691 +0200
@@ -71,22 +71,22 @@
       signer.fpr = sig->cert->fingerprint ? sig->cert->fingerprint : "(null)";
 
       switch (sig->cert->trust) {
-      case GMIME_CERTIFICATE_TRUST_NONE:
+      case GMIME_TRUST_NONE:
         signer.trust = "None";
         break;
-      case GMIME_CERTIFICATE_TRUST_NEVER:
+      case GMIME_TRUST_NEVER:
         signer.trust = "Never";
         break;
-      case GMIME_CERTIFICATE_TRUST_UNDEFINED:
+      case GMIME_TRUST_UNDEFINED:
         signer.trust = "Undefined";
         break;
-      case GMIME_CERTIFICATE_TRUST_MARGINAL:
+      case GMIME_TRUST_MARGINAL:
         signer.trust = "Marginal";
         break;
-      case GMIME_CERTIFICATE_TRUST_FULLY:
+      case GMIME_TRUST_FULL:
         signer.trust = "Fully";
         break;
-      case GMIME_CERTIFICATE_TRUST_ULTIMATE:
+      case GMIME_TRUST_ULTIMATE:
         signer.trust = "Ultimate";
         break;
       }
diff -Naur orig/pan/usenet-utils/message-check.cc patched/pan/usenet-utils/message-check.cc
--- orig/pan/usenet-utils/message-check.cc	2012-01-03 18:47:53.134739579 +0100
+++ patched/pan/usenet-utils/message-check.cc	2017-10-07 21:26:50.340315647 +0200
@@ -480,7 +480,7 @@
   }
 
   // one last error check
-  InternetAddressList * list (g_mime_message_get_recipients (message, GMIME_RECIPIENT_TYPE_TO));
+  InternetAddressList * list (g_mime_message_get_addresses (message, GMIME_ADDRESS_TYPE_TO));
   const int n_to (internet_address_list_length (list));
   if (!group_qty && !n_to) {
     errors.insert (_("Error: No Recipients."));
diff -Naur orig/pan/usenet-utils/mime-utils.cc patched/pan/usenet-utils/mime-utils.cc
--- orig/pan/usenet-utils/mime-utils.cc	2017-03-25 18:05:12.134739579 +0100
+++ patched/pan/usenet-utils/mime-utils.cc	2017-10-07 21:37:49.535940287 +0200
@@ -915,7 +915,7 @@
       return;
 
     // get this part's content
-    GMimeDataWrapper * content = g_mime_part_get_content_object (GMIME_PART (part));
+    GMimeDataWrapper * content = g_mime_part_get_content (GMIME_PART (part));
     if (!content)
       return;
 
@@ -968,7 +968,7 @@
 
           subpart_stream = tmp_part->stream;
           content = g_mime_data_wrapper_new_with_stream (subpart_stream, GMIME_CONTENT_ENCODING_DEFAULT);
-          g_mime_part_set_content_object (subpart, content);
+          g_mime_part_set_content (subpart, content);
           g_mime_multipart_add (GMIME_MULTIPART (multipart), GMIME_OBJECT (subpart));
 
           g_object_unref (content);
@@ -1138,11 +1138,11 @@
 
   for (int i=0; i<qty; ++i) {
     GMimeParser* parser = g_mime_parser_new_with_stream (istreams[i]);
-    messages[i] = g_mime_parser_construct_message(parser);
+    messages[i] = g_mime_parser_construct_message(parser, NULL);
     g_object_unref(parser);
     g_mime_stream_reset(istreams[i]);
     parser = g_mime_parser_new_with_stream (istreams[i]);
-    GMimeObject* part = g_mime_parser_construct_part(parser);
+    GMimeObject* part = g_mime_parser_construct_part(parser, NULL);
     g_object_unref (parser);
     parser = NULL;
     GMimeContentType * type = g_mime_object_get_content_type (part);
@@ -1485,7 +1485,7 @@
       return NULL;
     }
 
-    GMimeDataWrapper *wrapper = g_mime_part_get_content_object(mime_part);
+    GMimeDataWrapper *wrapper = g_mime_part_get_content(mime_part);
     GMimeStream *stream = g_mime_stream_mem_new();
     g_mime_data_wrapper_write_to_stream (wrapper, stream);
     GByteArray *bytes = g_mime_stream_mem_get_byte_array((GMimeStreamMem*)stream);
@@ -1535,14 +1535,14 @@
   return body;
 }
 
-void pan::pan_g_mime_message_add_recipients_from_string (GMimeMessage *message, GMimeRecipientType type, const char *string)
+void pan::pan_g_mime_message_add_mailboxs_from_string (GMimeMessage *message, GMimeAddressType type, const char *string)
 {
   InternetAddressList *addrlist;
-  if ((addrlist = internet_address_list_parse_string (string))) {
+  if ((addrlist = internet_address_list_parse (string))) {
     for (int i = 0; i < internet_address_list_length (addrlist); ++i) {
       InternetAddress *ia = internet_address_list_get_address (addrlist, i);
       if (INTERNET_ADDRESS_IS_MAILBOX(ia))
-        g_mime_message_add_recipient (message, type, internet_address_get_name(ia), internet_address_mailbox_get_addr(INTERNET_ADDRESS_MAILBOX(ia)));
+        g_mime_message_add_mailbox (message, type, internet_address_get_name(ia), internet_address_mailbox_get_addr(INTERNET_ADDRESS_MAILBOX(ia)));
     }
   }
 }
@@ -1573,7 +1573,7 @@
     content = g_mime_data_wrapper_new_with_stream (stream, GMIME_CONTENT_ENCODING_DEFAULT);
     g_object_unref (stream);
 
-    g_mime_part_set_content_object (part, content);
+    g_mime_part_set_content (part, content);
     g_object_unref (content);
   }
 #ifdef HAVE_GMIME_CRYPTO
diff -Naur orig/pan/usenet-utils/mime-utils.h patched/pan/usenet-utils/mime-utils.h
--- orig/pan/usenet-utils/mime-utils.h	2017-03-25 18:05:12.134739579 +0100
+++ patched/pan/usenet-utils/mime-utils.h	2017-10-07 21:33:24.440756614 +0200
@@ -107,7 +107,7 @@
   };
 
   char *pan_g_mime_message_get_body (GMimeMessage *message, gboolean *is_html);
-  void pan_g_mime_message_add_recipients_from_string (GMimeMessage *message, GMimeRecipientType type, const char *string);
+  void pan_g_mime_message_add_mailboxs_from_string (GMimeMessage *message, GMimeAddressType type, const char *string);
   std::string pan_g_mime_message_set_message_id (GMimeMessage *msg, const char *mid);
 
   extern iconv_t conv;
